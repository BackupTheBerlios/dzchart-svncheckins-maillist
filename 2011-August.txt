From twm at mail.berlios.de  Sat Aug  6 18:47:13 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat,  6 Aug 2011 18:47:13 +0200
Subject: [Dzchart-svncheckins] r591 - in
	utilities/dzLib/trunk/tests/dzICalendarTest: . src
Message-ID: <20110806164713.E13D648132C@sheep.berlios.de>

Author: twm
Date: 2011-08-06 18:47:13 +0200 (Sat, 06 Aug 2011)
New Revision: 591

Modified:
   utilities/dzLib/trunk/tests/dzICalendarTest/
   utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.dfm
   utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.pas
Log:
added import test for my google calendar export (not included ;-) )


Property changes on: utilities/dzLib/trunk/tests/dzICalendarTest
___________________________________________________________________
Modified: svn:ignore
   - dzICalendarTest.exe

   + dzICalendarTest.exe
dummzeuch at gmail.com_dummzeuch@gmail.com.ics


Modified: utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.dfm
===================================================================
--- utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.dfm	2011-08-06 16:02:50 UTC (rev 590)
+++ utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.dfm	2011-08-06 16:47:13 UTC (rev 591)
@@ -78,4 +78,12 @@
     Caption = 'Example'
     TabOrder = 3
   end
+  object rb_Dummzeuch: TRadioButton
+    Left = 304
+    Top = 320
+    Width = 113
+    Height = 17
+    Caption = 'Dummzeuch'
+    TabOrder = 4
+  end
 end

Modified: utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.pas
===================================================================
--- utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.pas	2011-08-06 16:02:50 UTC (rev 590)
+++ utilities/dzLib/trunk/tests/dzICalendarTest/src/w_dzICalendarTest.pas	2011-08-06 16:47:13 UTC (rev 591)
@@ -21,6 +21,7 @@
     lv_Events: TListView;
     rb_FeiertageNRW: TRadioButton;
     rb_Example: TRadioButton;
+    rb_Dummzeuch: TRadioButton;
     procedure b_StartClick(Sender: TObject);
   private
   public
@@ -45,6 +46,7 @@
 const
   Feiertage = 'feiertage_deutschland-2010-2013.ics';
   Example = 'example.ics';
+  dummzeuch = 'dummzeuch at gmail.com_dummzeuch@gmail.com.ics';
 var
   ICal: TdzICalendar;
   Parser: TDzIcalendarParser;
@@ -55,8 +57,10 @@
 begin
   if rb_FeiertageNRW.Checked then
     IcsFile := Feiertage
+  else if rb_Example.Checked then
+    IcsFile := Example
   else
-    IcsFile := Example;
+    IcsFile := dummzeuch;
   ICal := TdzICalendar.Create;
   try
     Parser := TDzIcalendarParser.Create;



From twm at mail.berlios.de  Sat Aug 27 12:56:15 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 12:56:15 +0200
Subject: [Dzchart-svncheckins] r592 - utilities/buildtools/trunk
Message-ID: <20110827105615.4529C481162@sheep.berlios.de>

Author: twm
Date: 2011-08-27 12:56:14 +0200 (Sat, 27 Aug 2011)
New Revision: 592

Modified:
   utilities/buildtools/trunk/AppendTranslations.cmd
   utilities/buildtools/trunk/assemble.exe
   utilities/buildtools/trunk/gorm.exe
Log:
* Update gorm.exe and assemble.exe (new assemble also needs new gnugettext.pas!)
* AppendTranslations will no longer create subdirs for languages

Modified: utilities/buildtools/trunk/AppendTranslations.cmd
===================================================================
--- utilities/buildtools/trunk/AppendTranslations.cmd	2011-08-06 16:47:13 UTC (rev 591)
+++ utilities/buildtools/trunk/AppendTranslations.cmd	2011-08-27 10:56:14 UTC (rev 592)
@@ -32,7 +32,7 @@
 @call :HandLng
 
 @echo bind all translations to the executable
-%~dp0\assemble --dxgettext %1.exe
+%~dp0assemble %1.exe --dxgettext
 echo off
 
 echo * %0 exiting
@@ -43,7 +43,8 @@
 
 @echo ** handling language %LNG% **
 if exist locale\%LNG%\lc_messages goto lcmsgexists
-mkdir locale\%LNG%\lc_messages
+echo *** subdir locale\%LNG%\lc_messages does not exist skipping language %LNG% ***
+goto :eof
 :lcmsgexists
 
 if not exist %ProjectDir%\libs\dspack\translations\%LNG%\dspack.po goto nodspack
@@ -66,6 +67,11 @@
 %~dp0\msgfmt %ProjectDir%\libs\dxgettext\translations\%LNG%\delphi2007.po -o locale\%LNG%\lc_messages\delphi2007.mo
 :nodelphi
 
+if not exist %ProjectDir%\libs\comport\locale\%LNG%\LC_MESSAGES\cport.po goto nocomport
+ at echo compile %LNG% cport.po
+%~dp0\msgfmt %ProjectDir%\libs\comport\locale\%LNG%\LC_MESSAGES\cport.po -o locale\%LNG%\lc_messages\cport.mo
+:nocomport
+
 @echo compile %LNG% default.po
 %~dp0\msgfmt %ProjectDir%\locale\%LNG%\lc_messages\default.po -o locale\%LNG%\lc_messages\default.mo
 

Modified: utilities/buildtools/trunk/assemble.exe
===================================================================
(Binary files differ)

Modified: utilities/buildtools/trunk/gorm.exe
===================================================================
(Binary files differ)



From twm at mail.berlios.de  Sat Aug 27 12:56:17 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 12:56:17 +0200
Subject: [Dzchart-svncheckins] r593 - utilities/dzCmdLineParser/trunk/src
Message-ID: <20110827105617.21CB9481162@sheep.berlios.de>

Author: twm
Date: 2011-08-27 12:56:16 +0200 (Sat, 27 Aug 2011)
New Revision: 593

Modified:
   utilities/dzCmdLineParser/trunk/src/u_dzDefaultMain.pas
Log:
comment on where to find w_dzDialog

Modified: utilities/dzCmdLineParser/trunk/src/u_dzDefaultMain.pas
===================================================================
--- utilities/dzCmdLineParser/trunk/src/u_dzDefaultMain.pas	2011-08-27 10:56:14 UTC (rev 592)
+++ utilities/dzCmdLineParser/trunk/src/u_dzDefaultMain.pas	2011-08-27 10:56:16 UTC (rev 593)
@@ -93,7 +93,7 @@
   Classes,
   Dialogs,
   u_dzLogging,
-  w_dzDialog;
+  w_dzDialog; // libs\dzlib\forms
 
 function _(const _s: string): string; inline;
 begin



From twm at mail.berlios.de  Sat Aug 27 13:11:44 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:11:44 +0200
Subject: [Dzchart-svncheckins] r594 - utilities/dzLib/trunk/forms
Message-ID: <20110827111145.12729481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:11:44 +0200 (Sat, 27 Aug 2011)
New Revision: 594

Modified:
   utilities/dzLib/trunk/forms/w_dzDialog.pas
Log:
Formatting only

Modified: utilities/dzLib/trunk/forms/w_dzDialog.pas
===================================================================
--- utilities/dzLib/trunk/forms/w_dzDialog.pas	2011-08-27 10:56:16 UTC (rev 593)
+++ utilities/dzLib/trunk/forms/w_dzDialog.pas	2011-08-27 11:11:44 UTC (rev 594)
@@ -343,7 +343,7 @@
 begin
   frm := Tf_dzDialog.Create(_Owner);
   try
-    frm.ShowDetailButton := false;
+    frm.ShowDetailButton := False;
     frm.SetVisibleButtons(_Buttons);
     frm.SetFocusButton(_FocusButton);
     Assert(Length(_CustomButtons) = Length(frm.CustomButtonCaptions));
@@ -356,8 +356,8 @@
     frm.OptionDescription := _OptionDesc;
     frm.DialogType := _DialogType;
     frm.GenerateControls;
-	if _Caption <> '' then
-    frm.Caption := _Caption;
+    if _Caption <> '' then
+      frm.Caption := _Caption;
     TForm_CenterOn(frm, _Owner);
     Result := frm.ShowModal;
   finally
@@ -374,7 +374,7 @@
   try
     if Assigned(_Owner) and (_Owner is TForm) then
       frm.Font := TForm(_Owner).Font;
-    frm.ShowDetailButton := false;
+    frm.ShowDetailButton := False;
     frm.SetVisibleButtons(_Buttons);
     frm.SetFocusButton(_FocusButton);
     frm.UserMessage := _Message;
@@ -396,7 +396,7 @@
   i: Integer;
 begin
   Result := Tf_dzDialog.Create(_Owner);
-  Result.ShowDetailButton := false;
+  Result.ShowDetailButton := False;
   Result.SetVisibleButtons(_Buttons);
   Assert(Length(_CustomButtons) = Length(Result.CustomButtonCaptions));
   for i := Low(_CustomButtons) to High(_CustomButtons) do
@@ -446,7 +446,7 @@
       end;
 {$ENDIF}
     end else
-      frm.ShowDetailButton := false;
+      frm.ShowDetailButton := False;
     frm.SetVisibleButtons(_Buttons);
     frm.UserMessage := _Message;
     frm.OptionDescription := _OptionDesc;
@@ -478,7 +478,7 @@
   try
     frm.UserMessage := _ErrorMsg;
     frm.Details := _Details;
-    frm.ShowDetailButton := true;
+    frm.ShowDetailButton := True;
     frm.SetVisibleButtons(_Buttons);
     frm.OptionDescription := _OptionDesc;
     frm.GenerateControls;
@@ -522,7 +522,7 @@
   inherited;
   FFocusButton := 0;
   FDialogType := mtError;
-  FShowDetailButton := true;
+  FShowDetailButton := True;
   FDontShowAgainText := _('Do not show again.');
   FCallStack := TStringList.Create;
   try
@@ -603,11 +603,11 @@
   FocusButton: TButton;
 begin
   inherited;
-  EnableMenuItem(GetSystemMenu(Handle, LongBool(false)), SC_MAXIMIZE, MF_BYCOMMAND or MF_GRAYED);
+  EnableMenuItem(GetSystemMenu(Handle, LongBool(False)), SC_MAXIMIZE, MF_BYCOMMAND or MF_GRAYED);
   if FUserMessage = '' then
     FUserMessage := Format(_('An error occurred:'#13#10'%s'), [FExceptionMessage]);
   l_Message.Caption := FUserMessage;
-  l_Message.AutoSize := true;
+  l_Message.AutoSize := True;
   if l_Message.Height > im_Icon.Height then
     MinHeight := l_Message.Top + l_Message.Height
   else
@@ -616,11 +616,11 @@
   MinWidth := 250; // 400;
   MinWidth := Max(MinWidth, l_Message.Left + l_Message.Width + 8);
   if FOptionDescription = '' then
-    l_Options.Visible := false
+    l_Options.Visible := False
   else begin
     l_Options.Top := MinHeight;
     l_Options.Caption := FOptionDescription;
-    l_Options.AutoSize := true;
+    l_Options.AutoSize := True;
     MinHeight := MinHeight + l_Options.Height + 8;
     MinWidth := Max(MinWidth, l_Options.Left + l_Options.Width + 8);
   end;
@@ -777,7 +777,7 @@
   Constraints.MaxHeight := 0;
   ClientHeight := p_Top.Height + p_Details.Height;
   Constraints.MinHeight := p_Top.Height + 100 + Height - ClientHeight;
-  p_Details.Visible := true;
+  p_Details.Visible := True;
   p_Details.Align := alClient;
   //  EnableMenuItem(GetSystemMenu(Handle, LongBool(false)), SC_MAXIMIZE, MF_BYCOMMAND or MF_ENABLED);
   //  BorderIcons := BorderIcons - [biMaximize];
@@ -794,11 +794,11 @@
       WindowState := wsNormal;
   end;
   p_Details.Align := alNone;
-  p_Details.Visible := false;
+  p_Details.Visible := False;
   Constraints.MinHeight := p_Top.Height + Height - ClientHeight;
   Constraints.MaxHeight := Self.Height;
   ClientHeight := p_Top.Height;
-  EnableMenuItem(GetSystemMenu(Handle, LongBool(false)), SC_MAXIMIZE, MF_BYCOMMAND or MF_GRAYED);
+  EnableMenuItem(GetSystemMenu(Handle, LongBool(False)), SC_MAXIMIZE, MF_BYCOMMAND or MF_GRAYED);
   //  BorderIcons := BorderIcons - [biMaximize];
 end;
 



From twm at mail.berlios.de  Sat Aug 27 13:12:17 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:12:17 +0200
Subject: [Dzchart-svncheckins] r595 - utilities/dzLib/trunk/src
Message-ID: <20110827111217.5D523481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:12:17 +0200 (Sat, 27 Aug 2011)
New Revision: 595

Modified:
   utilities/dzLib/trunk/src/u_dzBeep.pas
Log:
can now also play simple melodies

Modified: utilities/dzLib/trunk/src/u_dzBeep.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzBeep.pas	2011-08-27 11:11:44 UTC (rev 594)
+++ utilities/dzLib/trunk/src/u_dzBeep.pas	2011-08-27 11:12:17 UTC (rev 595)
@@ -38,10 +38,14 @@
   protected
     procedure Execute; override;
   public
+    ///<summary> Converts a string of the form '<frequency>/<duration>[,<frequency>/<duration> ...]'
+ ///          to a TBeepSequenceList </summary>
+    class function StrToBeepSequence(_Str: string; out _BeepSeq: TBeepSequenceList): Boolean; static;
     constructor Create;
     destructor Destroy; override;
     procedure Beep(_Frequency, _Duration: Cardinal); overload;
     procedure Beep(_Sequence: array of TBeepSequenceEntry); overload;
+    procedure Beep(_Sequence: string); overload;
   end;
 
 var
@@ -49,6 +53,9 @@
 
 implementation
 
+uses
+  u_dzStringUtils;
+
 { TBeeper }
 
 procedure TBeeper.Beep(_Frequency, _Duration: Cardinal);
@@ -74,11 +81,21 @@
   end;
 end;
 
+procedure TBeeper.Beep(_Sequence: string);
+var
+  Arr: TBeepSequenceList;
+begin
+  if _Sequence = '' then
+    Exit;
+  StrToBeepSequence(_Sequence, Arr);
+  Beep(Arr);
+end;
+
 constructor TBeeper.Create;
 begin
   FMutex := TMutex.Create;
   FEvent := TEvent.Create;
-  inherited Create(false);
+  inherited Create(False);
 end;
 
 destructor TBeeper.Destroy;
@@ -92,7 +109,7 @@
 procedure TBeeper.Execute;
 var
   wr: TWaitResult;
-  i: integer;
+  i: Integer;
 begin
   inherited;
   while not Terminated do begin
@@ -128,6 +145,29 @@
   WaitFor;
 end;
 
+class function TBeeper.StrToBeepSequence(_Str: string; out _BeepSeq: TBeepSequenceList): Boolean;
+var
+  FirstEntry: string;
+  Frequence: string;
+  FreqInt: Integer;
+  TimeInt: Integer;
+begin
+  Result := False;
+  SetLength(_BeepSeq, 0);
+  while ExtractFirstWord(_Str, [','], FirstEntry) do begin
+    Result := ExtractFirstWord(FirstEntry, ['/'], frequence);
+    if not Result then
+      Exit; // -->
+
+    Result := TryStrToInt(Frequence, Freqint) and TryStrToInt(FirstEntry, TimeInt);
+    if not Result then
+      Exit; //; -->
+
+    SetLength(_BeepSeq, Length(_BeepSeq) + 1);
+    _BeepSeq[High(_BeepSeq)] := TBeepSequenceEntry.Create(freqint, timeint);
+  end;
+end;
+
 { TBeepSequenceEntry }
 
 class function TBeepSequenceEntry.Create(_Frequency, _Duration: Cardinal): TBeepSequenceEntry;



From twm at mail.berlios.de  Sat Aug 27 13:13:19 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:13:19 +0200
Subject: [Dzchart-svncheckins] r596 - utilities/dzLib/trunk/src
Message-ID: <20110827111319.23EF9481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:13:18 +0200 (Sat, 27 Aug 2011)
New Revision: 596

Added:
   utilities/dzLib/trunk/src/u_dzDatasetHelpersADO.pas
   utilities/dzLib/trunk/src/u_dzDatasetHelpersBDE.pas
   utilities/dzLib/trunk/src/u_dzDatasetHelpersTopaz.pas
Modified:
   utilities/dzLib/trunk/src/u_dzDatasetHelpers.pas
   utilities/dzLib/trunk/src/u_dzDatasetHelpersTdbf.pas
Log:
Split into a generic, TDataset based class and specialized descendants for BDE, ADO, TDBF and Topaz

Modified: utilities/dzLib/trunk/src/u_dzDatasetHelpers.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzDatasetHelpers.pas	2011-08-27 11:12:17 UTC (rev 595)
+++ utilities/dzLib/trunk/src/u_dzDatasetHelpers.pas	2011-08-27 11:13:18 UTC (rev 596)
@@ -8,9 +8,7 @@
 uses
   SysUtils,
   Classes,
-  AdoDb,
   DB,
-  DBTables,
   u_dzTranslator,
   u_dzGuidUtils,
   u_dzNameValueList;
@@ -28,48 +26,50 @@
     ///<summary> returns the field value as a string, return the default if it cannot be converted
     ///          Note that strings are automatically trimmed. </summary>
     function FieldAsString(const _Fieldname, _Default: string): string; overload;
-    function TryFieldAsString(const _Fieldname: string; out _Value: string): boolean;
+    function TryFieldAsString(const _Fieldname: string; out _Value: string): Boolean;
+    ///<summary> in addition to TryFieldAsString also checks whether the string is non-empty </summary>
+    function TryFieldAsNonEmptyString(const _Fieldname: string; out _Value: string): Boolean;
     ///<summary> sets the field as a string, if the value is empty set it to NULL </summary>
     procedure SetFieldStringNotEmpty(const _Fieldname: string; const _Value: string);
 
     ///<summary> returns the field value as an integer, raise an exception if it cannot be converted </summary>
-    function FieldAsInteger(const _Fieldname: string): integer; overload;
+    function FieldAsInteger(const _Fieldname: string): Integer; overload;
     ///<summary> returns the field value as an integer, return the default if it cannot be converted </summary>
-    function FieldAsInteger(const _Fieldname: string; _Default: integer): integer; overload;
+    function FieldAsInteger(const _Fieldname: string; _Default: Integer): Integer; overload;
     ///<summary> returns the field value as an integer, raise an exception with the given error message if it cannot be converted </summary>
-    function FieldAsInteger(const _Fieldname: string; const _Error: string): integer; overload;
-    function TryFieldAsInteger(const _Fieldname: string; out _Value: integer): boolean;
+    function FieldAsInteger(const _Fieldname: string; const _Error: string): Integer; overload;
+    function TryFieldAsInteger(const _Fieldname: string; out _Value: Integer): Boolean;
 
     ///<summary> returns the field value as a double, raise an exception if it cannot be converted </summary>
-    function FieldAsDouble(const _Fieldname: string): double; overload;
+    function FieldAsDouble(const _Fieldname: string): Double; overload;
     ///<summary> returns the field value as a double, return the default if it cannot be converted </summary>
-    function FieldAsDouble(const _Fieldname: string; const _Default: double): double; overload;
+    function FieldAsDouble(const _Fieldname: string; const _Default: Double): Double; overload;
     ///<summary> returns the field value as a double, raise an exception with the given error message if it cannot be converted </summary>
-    function FieldAsDouble(const _Fieldname: string; const _Error: string): double; overload;
-    function TryFieldAsDouble(const _Fieldname: string; out _Value: double): boolean;
+    function FieldAsDouble(const _Fieldname: string; const _Error: string): Double; overload;
+    function TryFieldAsDouble(const _Fieldname: string; out _Value: Double): Boolean;
 
     ///<summary> returns the field value as an extended, raise an exception if it cannot be converted </summary>
-    function FieldAsExtended(const _Fieldname: string): extended; overload;
+    function FieldAsExtended(const _Fieldname: string): Extended; overload;
     ///<summary> returns the field value as a extended, return the default if it cannot be converted </summary>
-    function FieldAsExtended(const _Fieldname: string; const _Default: extended): extended; overload;
+    function FieldAsExtended(const _Fieldname: string; const _Default: Extended): Extended; overload;
     ///<summary> returns the field value as a extended, raise an exception with the given error message if it cannot be converted </summary>
-    function FieldAsExtended(const _Fieldname: string; const _Error: string): extended; overload;
-    function TryFieldAsExtended(const _Fieldname: string; out _Value: extended): boolean;
+    function FieldAsExtended(const _Fieldname: string; const _Error: string): Extended; overload;
+    function TryFieldAsExtended(const _Fieldname: string; out _Value: Extended): Boolean;
 
     ///<summary> returns the field value as a TDateTime, raise an exception if it cannot be converted </summary>
     function FieldAsDate(const _Fieldname: string): TDateTime; overload;
     function FieldAsDate(const _Fieldname: string; _Default: TDateTime): TDateTime; overload;
-    function TryFieldAsDate(const _Fieldname: string; out _Date: TDateTime): boolean;
+    function TryFieldAsDate(const _Fieldname: string; out _Date: TDateTime): Boolean;
 
     ///<summary> returns the field value as a boolean, raise an exception if it cannot be converted </summary>
-    function FieldAsBoolean(const _FieldName: string): boolean; overload;
+    function FieldAsBoolean(const _FieldName: string): Boolean; overload;
     ///<summary> returns the field value as a boolean, return the default if it cannot be converted </summary>
-    function FieldAsBoolean(const _FieldName: string; _Default: boolean): boolean; overload;
+    function FieldAsBoolean(const _FieldName: string; _Default: Boolean): Boolean; overload;
     ///<summary> returns the field value as a TNullableGuid record, note that the guid might be
     ///          invalid if the field contained NULL </summary>
     function FieldAsGuid(const _FieldName: string): TNullableGuid;
     ///<summary> tries to convert the field to a GUID, returns false, if that's not possible </summary>
-    function TryFieldAsGuid(const _Fieldname: string; out _Value: TNullableGuid): boolean;
+    function TryFieldAsGuid(const _Fieldname: string; out _Value: TNullableGuid): Boolean;
     ///<summary> Opens the dataset </summary>
     procedure Open;
     ///<summary> Closes the dataset </summary>
@@ -80,16 +80,17 @@
     ///<summary> Moves to the last record of the dataset </summary>
     procedure Last;
     ///<summary> Moves to the next record of the dataset, returns true if not EOF </summary>
-    function Next: boolean;
+    function Next: Boolean;
     ///<summary> Moves to the previous record of the dataset, returns true if not BOF </summary>
-    function Prior: boolean;
+    function Prior: Boolean;
     ///<summary> Moves by Distance records (can be negative), returns the number of records actually moved </summary>
-    function MoveBy(_Distance: integer): integer;
+    function MoveBy(_Distance: Integer): Integer;
     ///<summary> Returns true if at the end of the dataset </summary>
-    function Eof: boolean;
+    function Eof: Boolean;
     ///<summary> Returns true if at the beginning of the dataset </summary>
-    function Bof: boolean;
+    function Bof: Boolean;
 
+    procedure Append;
     ///<summary> insert a new record into the dataset </summary>
     procedure Insert;
     ///<summary> put the current record into edit mode </summary>
@@ -102,10 +103,14 @@
     ///<summary> cancel changes to the current record (must call Insert or Edit first) </summary>
     procedure Cancel;
 
-    function IsEmpty: boolean;
-    function Locate(const _KeyFields: string; const _KeyValues: Variant; _Options: TLocateOptions): boolean;
+    function IsEmpty: Boolean;
+
+    procedure DisableControls;
+    procedure EnableControls;
+
+    function Locate(const _KeyFields: string; const _KeyValues: Variant; _Options: TLocateOptions): Boolean;
     procedure SetParamByName(const _Param: string; _Value: variant);
-    function TrySetParamByName(const _Param: string; _Value: variant): boolean;
+    function TrySetParamByName(const _Param: string; _Value: variant): Boolean;
 
     ///<summary> returns the field value as variant (getter method for FieldValues property) </summary>
     function GetFieldValue(const _FieldName: string): Variant;
@@ -115,10 +120,13 @@
     ///          @param Fieldname is name of the field to set
     ///          @param Value is the new value
     ///          @returns true, if the field exists, false otherwise </summary>
-    function TrySetFieldValue(const _FieldName: string; const _Value: Variant): boolean;
+    function TrySetFieldValue(const _FieldName: string; const _Value: Variant): Boolean;
     procedure ClearField(const _Fieldname: string);
 
-    function HasField(const _Fieldname: string): boolean;
+    function GetActive: Boolean;
+    procedure SetActive(const _Value: Boolean);
+
+    function HasField(const _Fieldname: string): Boolean;
     function Fields: TFields;
 
     ///<summary> Copies all values of the current record to the given NameValueList, ignoring
@@ -133,57 +141,52 @@
     procedure FromNameValueList(_Values: TNameValueList);
     ///<summary> allows access to field values as variants </summary>
     property FieldValues[const _FieldName: string]: Variant read GetFieldValue write SetFieldValue; default;
+    property Active: Boolean read GetActive write SetActive;
   end;
 
 type
-  ///<summary> implements the IDatasetHelper interface </summary>
+  ///<summary> implements the IDatasetHelper interface
+  ///          Note: You might want to instantiate a TDatasetHelperBDE,
+  ///                TDatasetHelperADO or TDatasetHelperTDBF instead. </summary>
   TDatasetHelper = class(TInterfacedObject, IDatasetHelper)
   private
     function FieldByName(const _Fieldname: string): TField;
+    function GetActive: Boolean;
+    procedure SetActive(const _Value: Boolean);
   protected
     FDataset: TDataset;
     FTableName: string;
-  public
-    ///<summary> creates a TDatasetHelper for accessing a TQuery, TTable, TAdoTable or TAdoQuery </summary>
-    constructor Create(_Table: TAdoTable); overload;
-    constructor Create(_Table: TTable); overload;
-    ///<summary> creates a TDatasetHelper for accessing a query
-    ///          @param Query is the TAdoQuery to access
-    ///          @param Tablename is the table name to use for automatically
-    ///                           generated error messages </summary>
-    constructor Create(_Query: TAdoQuery; const _Tablename: string); overload;
-    constructor Create(_Query: TQuery; const _TableName: string); overload;
-    constructor Create(_AdoDataset: TADODataSet; const _TableName: string); overload;
-  public // implementation of IDatasetHelper, see there for a description
+  protected // implementation of IDatasetHelper, see there for a description
     function FieldAsString(const _Fieldname: string): string; overload;
     function FieldAsString(const _Fieldname, _Default: string): string; overload;
-    function TryFieldAsString(const _Fieldname: string; out _Value: string): boolean;
+    function TryFieldAsString(const _Fieldname: string; out _Value: string): Boolean;
+    function TryFieldAsNonEmptyString(const _Fieldname: string; out _Value: string): Boolean;
     procedure SetFieldStringNotEmpty(const _Fieldname: string; const _Value: string);
 
-    function FieldAsInteger(const _Fieldname: string): integer; overload;
-    function FieldAsInteger(const _Fieldname: string; _Default: integer): integer; overload;
-    function FieldAsInteger(const _Fieldname: string; const _Error: string): integer; overload;
-    function TryFieldAsInteger(const _Fieldname: string; out _Value: integer): boolean;
+    function FieldAsInteger(const _Fieldname: string): Integer; overload;
+    function FieldAsInteger(const _Fieldname: string; _Default: Integer): Integer; overload;
+    function FieldAsInteger(const _Fieldname: string; const _Error: string): Integer; overload;
+    function TryFieldAsInteger(const _Fieldname: string; out _Value: Integer): Boolean;
 
-    function FieldAsDouble(const _Fieldname: string): double; overload;
-    function FieldAsDouble(const _Fieldname: string; const _Default: double): double; overload;
-    function FieldAsDouble(const _Fieldname: string; const _Error: string): double; overload;
-    function TryFieldAsDouble(const _Fieldname: string; out _Value: double): boolean;
+    function FieldAsDouble(const _Fieldname: string): Double; overload;
+    function FieldAsDouble(const _Fieldname: string; const _Default: Double): Double; overload;
+    function FieldAsDouble(const _Fieldname: string; const _Error: string): Double; overload;
+    function TryFieldAsDouble(const _Fieldname: string; out _Value: Double): Boolean;
 
-    function FieldAsExtended(const _Fieldname: string): extended; overload;
-    function FieldAsExtended(const _Fieldname: string; const _Default: extended): extended; overload;
-    function FieldAsExtended(const _Fieldname: string; const _Error: string): extended; overload;
-    function TryFieldAsExtended(const _Fieldname: string; out _Value: extended): boolean;
+    function FieldAsExtended(const _Fieldname: string): Extended; overload;
+    function FieldAsExtended(const _Fieldname: string; const _Default: Extended): Extended; overload;
+    function FieldAsExtended(const _Fieldname: string; const _Error: string): Extended; overload;
+    function TryFieldAsExtended(const _Fieldname: string; out _Value: Extended): Boolean;
 
     function FieldAsDate(const _Fieldname: string): TDateTime; overload;
     function FieldAsDate(const _Fieldname: string; _Default: TDateTime): TDateTime; overload;
-    function TryFieldAsDate(const _Fieldname: string; out _Date: TDateTime): boolean;
+    function TryFieldAsDate(const _Fieldname: string; out _Date: TDateTime): Boolean;
 
-    function FieldAsBoolean(const _FieldName: string): boolean; overload;
-    function FieldAsBoolean(const _FieldName: string; _Default: boolean): boolean; overload;
+    function FieldAsBoolean(const _FieldName: string): Boolean; overload;
+    function FieldAsBoolean(const _FieldName: string; _Default: Boolean): Boolean; overload;
 
     function FieldAsGuid(const _FieldName: string): TNullableGuid;
-    function TryFieldAsGuid(const _Fieldname: string; out _Value: TNullableGuid): boolean;
+    function TryFieldAsGuid(const _Fieldname: string; out _Value: TNullableGuid): Boolean;
 
     procedure Open;
     procedure Close;
@@ -191,13 +194,14 @@
     procedure First;
     procedure Last;
 
-    function Next: boolean;
-    function Prior: boolean;
-    function MoveBy(_Distance: integer): integer;
+    function Next: Boolean;
+    function Prior: Boolean;
+    function MoveBy(_Distance: Integer): Integer;
 
-    function Eof: boolean;
-    function Bof: boolean;
+    function Eof: Boolean;
+    function Bof: Boolean;
 
+    procedure Append;
     procedure Insert;
     procedure Edit;
 
@@ -206,21 +210,28 @@
     procedure Post;
     procedure Cancel;
 
-    function IsEmpty: boolean;
+    function IsEmpty: Boolean;
 
-    function Locate(const _KeyFields: string; const _KeyValues: Variant; _Options: TLocateOptions): boolean;
-    procedure SetParamByName(const _Param: string; _Value: variant);
-    function TrySetParamByName(const _Param: string; _Value: variant): boolean;
+    procedure DisableControls;
+    procedure EnableControls;
 
+    function Locate(const _KeyFields: string; const _KeyValues: Variant; _Options: TLocateOptions): Boolean;
+    procedure SetParamByName(const _Param: string; _Value: variant); virtual;
+    function TrySetParamByName(const _Param: string; _Value: variant): Boolean; virtual;
+
     function GetFieldValue(const _FieldName: string): Variant;
     procedure SetFieldValue(const _FieldName: string; const _Value: Variant);
-    function TrySetFieldValue(const _FieldName: string; const _Value: Variant): boolean;
+    function TrySetFieldValue(const _FieldName: string; const _Value: Variant): Boolean;
     procedure ClearField(const _Fieldname: string);
     function Fields: TFields;
-    function HasField(const _Fieldname: string): boolean;
+    function HasField(const _Fieldname: string): Boolean;
     procedure ToNameValueList(_Values: TNameValueList; const _Ignore: array of string);
     procedure FromNameValueList(_Values: TNameValueList);
+
+    property Active: Boolean read GetActive write SetActive;
     property FieldValues[const _FieldName: string]: Variant read GetFieldValue write SetFieldValue; default;
+  public
+    constructor Create(_Dataset: TDataset; const _TableName: string);
   end;
 
 implementation
@@ -237,35 +248,10 @@
 
 { TDatasetHelper }
 
-constructor TDatasetHelper.Create(_Table: TTable);
+constructor TDatasetHelper.Create(_Dataset: TDataset; const _TableName: string);
 begin
-  FDataset := _Table;
-  FTableName := _Table.TableName;
-end;
-
-constructor TDatasetHelper.Create(_Query: TQuery; const _TableName: string);
-begin
-  FDataset := _Query;
-  FTableName := _TableName;
-end;
-
-constructor TDatasetHelper.Create(_Table: TAdoTable);
-begin
   inherited Create;
-  FDataset := _Table;
-  FTableName := _Table.TableName;
-end;
-
-constructor TDatasetHelper.Create(_Query: TAdoQuery; const _Tablename: string);
-begin
-  inherited Create;
-  FDataset := _Query;
-  FTableName := _Tablename;
-end;
-
-constructor TDatasetHelper.Create(_AdoDataset: TADODataSet; const _TableName: string);
-begin
-  FDataset := _AdoDataset;
+  FDataset := _Dataset;
   FTableName := _TableName;
 end;
 
@@ -292,52 +278,52 @@
     Result := _Default;
 end;
 
-function TDatasetHelper.TryFieldAsDate(const _Fieldname: string; out _Date: TDateTime): boolean;
+function TDatasetHelper.TryFieldAsDate(const _Fieldname: string; out _Date: TDateTime): Boolean;
 begin
   Result := not IsEmpty and TryVar2DateTime(FieldByName(_FieldName).Value, _Date);
 end;
 
-function TDatasetHelper.TryFieldAsExtended(const _Fieldname: string; out _Value: extended): boolean;
+function TDatasetHelper.TryFieldAsExtended(const _Fieldname: string; out _Value: Extended): Boolean;
 begin
   Result := not IsEmpty and TryVar2Ext(FieldByName(_FieldName).Value, _Value);
 end;
 
-function TDatasetHelper.TryFieldAsGuid(const _Fieldname: string; out _Value: TNullableGuid): boolean;
+function TDatasetHelper.TryFieldAsGuid(const _Fieldname: string; out _Value: TNullableGuid): Boolean;
 begin
   if IsEmpty then
-    Result := false
+    Result := False
   else begin
     _Value.AssignVariant(FieldByName(_FieldName).Value);
     Result := _Value.IsValid;
   end;
 end;
 
-function TDatasetHelper.TryFieldAsInteger(const _Fieldname: string; out _Value: integer): boolean;
+function TDatasetHelper.TryFieldAsInteger(const _Fieldname: string; out _Value: Integer): Boolean;
 begin
   Result := not IsEmpty and TryVar2Int(FieldByName(_FieldName).Value, _Value);
 end;
 
-function TDatasetHelper.FieldAsDouble(const _Fieldname: string): double;
+function TDatasetHelper.FieldAsDouble(const _Fieldname: string): Double;
 begin
   Result := Var2DblEx(FieldByName(_FieldName).Value, FTableName + '.' + _Fieldname);
 end;
 
-function TDatasetHelper.FieldAsDouble(const _Fieldname, _Error: string): double;
+function TDatasetHelper.FieldAsDouble(const _Fieldname, _Error: string): Double;
 begin
   Result := Var2DblEx(FieldByName(_FieldName).Value, _Error);
 end;
 
-function TDatasetHelper.FieldAsExtended(const _Fieldname: string): extended;
+function TDatasetHelper.FieldAsExtended(const _Fieldname: string): Extended;
 begin
   Result := Var2ExtEx(FieldByName(_FieldName).Value, FTableName + '.' + _Fieldname);
 end;
 
-function TDatasetHelper.FieldAsExtended(const _Fieldname: string; const _Default: extended): extended;
+function TDatasetHelper.FieldAsExtended(const _Fieldname: string; const _Default: Extended): Extended;
 begin
   Result := Var2Ext(FieldByName(_FieldName).Value, _Default);
 end;
 
-function TDatasetHelper.FieldAsExtended(const _Fieldname, _Error: string): extended;
+function TDatasetHelper.FieldAsExtended(const _Fieldname, _Error: string): Extended;
 begin
   Result := Var2ExtEx(FieldByName(_FieldName).Value, _Error);
 end;
@@ -347,12 +333,12 @@
   Result.AssignVariant(FieldByName(_FieldName).Value);
 end;
 
-function TDatasetHelper.FieldAsInteger(const _Fieldname: string): integer;
+function TDatasetHelper.FieldAsInteger(const _Fieldname: string): Integer;
 begin
   Result := Var2IntEx(FieldByName(_FieldName).Value, FTableName + '.' + _Fieldname);
 end;
 
-function TDatasetHelper.FieldAsInteger(const _Fieldname, _Error: string): integer;
+function TDatasetHelper.FieldAsInteger(const _Fieldname, _Error: string): Integer;
 begin
   Result := Var2IntEx(FieldByName(_FieldName).Value, _Error);
 end;
@@ -362,28 +348,33 @@
   Result := Trim(Var2StrEx(FieldByName(_FieldName).Value, FTableName + '.' + _Fieldname));
 end;
 
-function TDatasetHelper.TryFieldAsString(const _Fieldname: string; out _Value: string): boolean;
+function TDatasetHelper.TryFieldAsString(const _Fieldname: string; out _Value: string): Boolean;
 begin
   Result := not IsEmpty and TryVar2Str(FieldByName(_FieldName).Value, _Value);
 end;
 
-function TDatasetHelper.FieldAsBoolean(const _FieldName: string): boolean;
+function TDatasetHelper.TryFieldAsNonEmptyString(const _Fieldname: string; out _Value: string): Boolean;
 begin
+  Result := TryFieldAsString(_Fieldname, _Value) and (_Value <> '');
+end;
+
+function TDatasetHelper.FieldAsBoolean(const _FieldName: string): Boolean;
+begin
   Result := FieldAsInteger(_FieldName) <> 0;
 end;
 
-function TDatasetHelper.FieldAsDouble(const _Fieldname: string; const _Default: double): double;
+function TDatasetHelper.FieldAsDouble(const _Fieldname: string; const _Default: Double): Double;
 begin
   if not TryFieldAsDouble(_Fieldname, Result) then
     Result := _Default;
 end;
 
-function TDatasetHelper.TryFieldAsDouble(const _Fieldname: string; out _Value: double): boolean;
+function TDatasetHelper.TryFieldAsDouble(const _Fieldname: string; out _Value: Double): Boolean;
 begin
   Result := not IsEmpty and TryVar2Dbl(FieldByName(_FieldName).Value, _Value);
 end;
 
-function TDatasetHelper.FieldAsInteger(const _Fieldname: string; _Default: integer): integer;
+function TDatasetHelper.FieldAsInteger(const _Fieldname: string; _Default: Integer): Integer;
 begin
   if not TryFieldAsInteger(_Fieldname, Result) then
     Result := _Default;
@@ -394,7 +385,7 @@
   Result := Trim(Var2Str(FieldByName(_FieldName).Value, _Default));
 end;
 
-function TDatasetHelper.FieldAsBoolean(const _FieldName: string; _Default: boolean): boolean;
+function TDatasetHelper.FieldAsBoolean(const _FieldName: string; _Default: Boolean): Boolean;
 begin
   Result := FieldAsInteger(_FieldName, BoolToInt(_Default)) <> 0;
 end;
@@ -419,14 +410,14 @@
 
 procedure TDatasetHelper.ToNameValueList(_Values: TNameValueList; const _Ignore: array of string);
 
-  function IsIgnored(const _s: string): boolean;
+  function IsIgnored(const _s: string): Boolean;
   var
     s: string;
   begin
-    Result := false;
+    Result := False;
     for s in _Ignore do begin
       if SameText(s, _s) then begin
-        Result := true;
+        Result := True;
         exit;
       end;
     end;
@@ -449,19 +440,24 @@
 
 procedure TDatasetHelper.FromNameValueList(_Values: TNameValueList);
 var
-  i: integer;
+  i: Integer;
 begin
   for i := 0 to _Values.Count - 1 do
     FieldValues[_Values[i].Name] := _Values[i].Value;
 end;
 
-function TDatasetHelper.Eof: boolean;
+function TDatasetHelper.Eof: Boolean;
 begin
   Result := FDataset.Eof;
 end;
 
-function TDatasetHelper.Bof: boolean;
+procedure TDatasetHelper.Append;
 begin
+  FDataset.Append;
+end;
+
+function TDatasetHelper.Bof: Boolean;
+begin
   Result := FDataset.Bof;
 end;
 
@@ -470,13 +466,13 @@
   FDataset.First;
 end;
 
-function TDatasetHelper.Next: boolean;
+function TDatasetHelper.Next: Boolean;
 begin
   FDataset.Next;
   Result := not FDataset.Eof;
 end;
 
-function TDatasetHelper.Prior: boolean;
+function TDatasetHelper.Prior: Boolean;
 begin
   FDataset.Prior;
   Result := not FDataset.Bof;
@@ -487,12 +483,22 @@
   FDataset.Open;
 end;
 
+function TDatasetHelper.GetActive: Boolean;
+begin
+  Result := FDataset.Active;
+end;
+
+procedure TDatasetHelper.SetActive(const _Value: Boolean);
+begin
+  FDataset.Active := _Value;
+end;
+
 function TDatasetHelper.GetFieldValue(const _FieldName: string): Variant;
 begin
   Result := FieldByName(_FieldName).Value;
 end;
 
-function TDatasetHelper.HasField(const _Fieldname: string): boolean;
+function TDatasetHelper.HasField(const _Fieldname: string): Boolean;
 begin
   Result := (FDataset.FindField(_Fieldname) <> nil);
 end;
@@ -507,7 +513,7 @@
   FieldByName(_FieldName).Value := _Value;
 end;
 
-function TDatasetHelper.TrySetFieldValue(const _FieldName: string; const _Value: Variant): boolean;
+function TDatasetHelper.TrySetFieldValue(const _FieldName: string; const _Value: Variant): Boolean;
 var
   Field: TField;
 begin
@@ -517,49 +523,14 @@
     Field.Value := _Value;
 end;
 
-type
-  THackAdoDataset = class(TCustomAdoDataset)
-  end;
-
 procedure TDatasetHelper.SetParamByName(const _Param: string; _Value: variant);
-var
-  i: Integer;
-  Hack: THackAdoDataset;
-  Query: TQuery;
 begin
-  // Do not use ParamByName -> only works if param is unique
-  if FDataset is TCustomAdoDataset then begin
-    Hack := THackAdoDataset(FDataset);
-    for i := 0 to Hack.Parameters.Count - 1 do begin
-      if SameText(Hack.Parameters[i].Name, _Param) then
-        Hack.Parameters[i].Value := _Value;
-    end;
-  end else if FDataset is TQuery then begin
-    Query := (FDataset as TQuery);
-    for i := 0 to Query.Params.Count - 1 do
-      if SameText(Query.Params[i].Name, _Param) then
-        Query.Params[i].Value := _Value;
-  end else
-    raise Exception.CreateFmt(_('SetParamByName is not supported for a %s (only TQuery and TAdoDataset descendants).'), [FDataset.ClassName]);
+  raise Exception.CreateFmt(_('SetParamByName is not supported for a %s.'), [FDataset.ClassName]);
 end;
 
-function TDatasetHelper.TrySetParamByName(const _Param: string; _Value: variant): boolean;
-var
-  AdoParam: TParameter;
-  BdeParam: TParam;
+function TDatasetHelper.TrySetParamByName(const _Param: string; _Value: variant): Boolean;
 begin
-  if FDataset is TCustomAdoDataset then begin
-    AdoParam := THackAdoDataset(FDataset).Parameters.FindParam(_Param);
-    Result := Assigned(AdoParam);
-    if Result then
-      AdoParam.Value := _Value
-  end else if FDataset is TQuery then begin
-    BdeParam := (FDataset as TQuery).Params.FindParam(_Param);
-    Result := Assigned(BdeParam);
-    if Result then
-      BdeParam.Value := _Value;
-  end else
-    raise Exception.CreateFmt(_('SetParamByName is not supported for a %s (only TQuery and TAdoDataset descendants).'), [FDataset.ClassName]);
+  raise Exception.CreateFmt(_('TrySetParamByName is not supported for a %s.'), [FDataset.ClassName]);
 end;
 
 procedure TDatasetHelper.Cancel;
@@ -577,23 +548,33 @@
   FDataset.Insert;
 end;
 
-function TDatasetHelper.IsEmpty: boolean;
+function TDatasetHelper.IsEmpty: Boolean;
 begin
   Result := FDataset.IsEmpty;
 end;
 
+procedure TDatasetHelper.EnableControls;
+begin
+  FDataset.EnableControls;
+end;
+
+procedure TDatasetHelper.DisableControls;
+begin
+  FDataset.DisableControls;
+end;
+
 procedure TDatasetHelper.Last;
 begin
   FDataset.Last;
 end;
 
 function TDatasetHelper.Locate(const _KeyFields: string; const _KeyValues: Variant;
-  _Options: TLocateOptions): boolean;
+  _Options: TLocateOptions): Boolean;
 begin
   Result := FDataset.Locate(_KeyFields, _KeyValues, _Options);
 end;
 
-function TDatasetHelper.MoveBy(_Distance: integer): integer;
+function TDatasetHelper.MoveBy(_Distance: Integer): Integer;
 begin
   Result := FDataset.MoveBy(_Distance);
 end;

Added: utilities/dzLib/trunk/src/u_dzDatasetHelpersADO.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzDatasetHelpersADO.pas	                        (rev 0)
+++ utilities/dzLib/trunk/src/u_dzDatasetHelpersADO.pas	2011-08-27 11:13:18 UTC (rev 596)
@@ -0,0 +1,81 @@
+unit u_dzDatasetHelpersADO;
+
+interface
+
+uses
+  SysUtils,
+  db,
+  AdoDb,
+  u_dzTranslator,
+  u_dzDatasetHelpers;
+
+type
+  TDataSetHelperADO = class(TDatasetHelper)
+  protected
+    procedure SetParamByName(const _Param: string; _Value: variant); override;
+    function TrySetParamByName(const _Param: string; _Value: variant): Boolean; override;
+  public
+    ///<summary> creates a TDatasetHelper for accessing a TQuery, TTable, TAdoTable or TAdoQuery </summary>
+    constructor Create(_Table: TAdoTable); overload;
+    ///<summary> creates a TDatasetHelper for accessing a query
+    ///          @param Query is the TAdoQuery to access
+    ///          @param Tablename is the table name to use for automatically
+    ///                           generated error messages </summary>
+    constructor Create(_Query: TAdoQuery; const _Tablename: string); overload;
+    constructor Create(_AdoDataset: TADODataSet; const _TableName: string); overload;
+  end;
+
+implementation
+
+{ TDataSetHelperADO }
+
+constructor TDataSetHelperADO.Create(_Table: TAdoTable);
+begin
+  inherited Create(_Table, _Table.TableName);
+end;
+
+type
+  THackAdoDataset = class(TCustomAdoDataset)
+  end;
+
+constructor TDataSetHelperADO.Create(_Query: TAdoQuery; const _Tablename: string);
+begin
+  inherited Create(_Query, _Tablename);
+end;
+
+constructor TDataSetHelperADO.Create(_AdoDataset: TADODataSet; const _TableName: string);
+begin
+  inherited Create(_AdoDataset, _TableName);
+end;
+
+procedure TDataSetHelperADO.SetParamByName(const _Param: string; _Value: variant);
+var
+  i: Integer;
+  Hack: THackAdoDataset;
+begin
+  // Do not use ParamByName -> only works if param is unique
+  if FDataset is TCustomAdoDataset then begin
+    Hack := THackAdoDataset(FDataset);
+    for i := 0 to Hack.Parameters.Count - 1 do begin
+      if SameText(Hack.Parameters[i].Name, _Param) then
+        Hack.Parameters[i].Value := _Value;
+    end;
+  end else
+    raise Exception.CreateFmt(_('SetParamByName is not supported for a %s (only TADODataSet descendants).'), [FDataset.ClassName]);
+end;
+
+function TDataSetHelperADO.TrySetParamByName(const _Param: string; _Value: variant): Boolean;
+var
+  AdoParam: TParameter;
+begin
+  if FDataset is TCustomAdoDataset then begin
+    AdoParam := THackAdoDataset(FDataset).Parameters.FindParam(_Param);
+    Result := Assigned(AdoParam);
+    if Result then
+      AdoParam.Value := _Value
+  end else
+    raise Exception.CreateFmt(_('TrySetParamByName is not supported for a %s (only TADODataSet descendants).'), [FDataset.ClassName]);
+end;
+
+end.
+

Added: utilities/dzLib/trunk/src/u_dzDatasetHelpersBDE.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzDatasetHelpersBDE.pas	                        (rev 0)
+++ utilities/dzLib/trunk/src/u_dzDatasetHelpersBDE.pas	2011-08-27 11:13:18 UTC (rev 596)
@@ -0,0 +1,58 @@
+unit u_dzDatasetHelpersBDE;
+
+interface
+
+uses
+  SysUtils,
+  db,
+  DBTables,
+  u_dzTranslator,
+  u_dzDatasetHelpers;
+
+type
+  TDataSetHelperBDE = class(TDatasetHelper)
+  protected
+    procedure SetParamByName(const _Param: string; _Value: variant); override;
+    function TrySetParamByName(const _Param: string; _Value: variant): Boolean; override;
+  public
+    constructor Create(_Table: TTable); overload;
+  end;
+
+implementation
+
+{ TDataSetHelperBDE }
+
+constructor TDataSetHelperBDE.Create(_Table: TTable);
+begin
+  inherited Create(_Table, _Table.TableName);
+end;
+
+procedure TDataSetHelperBDE.SetParamByName(const _Param: string; _Value: variant);
+var
+  i: Integer;
+  Query: TQuery;
+begin
+  if FDataset is TQuery then begin
+    Query := (FDataset as TQuery);
+    for i := 0 to Query.Params.Count - 1 do
+      if SameText(Query.Params[i].Name, _Param) then
+        Query.Params[i].Value := _Value;
+  end else
+    raise Exception.CreateFmt(_('SetParamByName is not supported for a %s (only TQuery descendants).'), [FDataset.ClassName]);
+end;
+
+function TDataSetHelperBDE.TrySetParamByName(const _Param: string; _Value: variant): Boolean;
+var
+  BdeParam: TParam;
+begin
+  if FDataset is TQuery then begin
+    BdeParam := (FDataset as TQuery).Params.FindParam(_Param);
+    Result := Assigned(BdeParam);
+    if Result then
+      BdeParam.Value := _Value;
+  end else
+    raise Exception.CreateFmt(_('TrySetParamByName is not supported for a %s (only TQuery descendants).'), [FDataset.ClassName]);
+end;
+
+end.
+

Modified: utilities/dzLib/trunk/src/u_dzDatasetHelpersTdbf.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzDatasetHelpersTdbf.pas	2011-08-27 11:12:17 UTC (rev 595)
+++ utilities/dzLib/trunk/src/u_dzDatasetHelpersTdbf.pas	2011-08-27 11:13:18 UTC (rev 596)
@@ -7,7 +7,7 @@
   dbf;
 
 type
-  TDataSetHelperTdbf = class(TDatasetHelper, IDatasetHelper)
+  TDataSetHelperTdbf = class(TDatasetHelper)
   public
     constructor Create(_Table: TDBF); overload;
   end;
@@ -18,9 +18,7 @@
 
 constructor TDataSetHelperTdbf.Create(_Table: TDBF);
 begin
-  inherited Create;
-  FDataset := _Table;
-  FTableName := _Table.TableName;
+  inherited Create(_Table, _Table.TableName);
 end;
 
 end.

Added: utilities/dzLib/trunk/src/u_dzDatasetHelpersTopaz.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzDatasetHelpersTopaz.pas	                        (rev 0)
+++ utilities/dzLib/trunk/src/u_dzDatasetHelpersTopaz.pas	2011-08-27 11:13:18 UTC (rev 596)
@@ -0,0 +1,29 @@
+unit u_dzDatasetHelpersTopaz;
+
+interface
+
+uses
+  SysUtils,
+  u_dzDatasetHelpers,
+  tzprimds,
+  ucommon,
+  utzcds,
+  utzfds;
+
+type
+  TDataSetHelperTopaz = class(TDatasetHelper)
+  public
+    constructor Create(_Table: TTzDbf); overload;
+  end;
+
+implementation
+
+{ TDataSetHelperTopaz }
+
+constructor TDataSetHelperTopaz.Create(_Table: TTzDbf);
+begin
+  inherited Create(_Table, Extractfilename(_Table.DbfFileName));
+end;
+
+end.
+



From twm at mail.berlios.de  Sat Aug 27 13:17:05 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:17:05 +0200
Subject: [Dzchart-svncheckins] r597 - utilities/dzLib/trunk/src
Message-ID: <20110827111705.4BCEC481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:17:05 +0200 (Sat, 27 Aug 2011)
New Revision: 597

Modified:
   utilities/dzLib/trunk/src/u_dzFileUtils.pas
Log:
* Constant for "All files"
* new overloaded DiskFree function that works on directory names
* GetVolumeName now has a Char parameter rather than AnsiChar (I don't remember why I changed this in the first place)
* Bugfix: ExtractFileExtFull did not work correctly, if one of the directory names contained an extension

Modified: utilities/dzLib/trunk/src/u_dzFileUtils.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzFileUtils.pas	2011-08-27 11:13:18 UTC (rev 596)
+++ utilities/dzLib/trunk/src/u_dzFileUtils.pas	2011-08-27 11:17:05 UTC (rev 597)
@@ -37,6 +37,10 @@
 
   TFileAttributeSet = set of TFileAttributes;
 
+const
+  ALL_FILES_ATTRIB_SET = [dfaHidden, dfaSysFile, dfaVolumeID, dfaDirectory, dfaArchive];
+
+type
   TFileInfoRec = record
   public
     Filename: string;
@@ -61,9 +65,9 @@
     /// internally used TSearchRec structure
     FSr: TSearchRec;
     /// true if FindFirst was called and returned no error code
-    FActive: boolean;
+    FActive: Boolean;
     /// number of matching files found
-    FMatchCount: integer;
+    FMatchCount: Integer;
   public
     /// <summary>
     /// Creates a TSimpleDirEnumerator, sets the Mask, MustHaveAttr and MayHaveAttr
@@ -73,8 +77,7 @@
     /// but the special '.' and '..' directories
     /// @param Mask is the file search mask and should include a path
     /// </summary>
-    constructor Create(const _Mask: string; _MayHaveAttr: TFileAttributeSet =
-      [dfaHidden, dfaSysFile, dfaVolumeID, dfaDirectory, dfaArchive]);
+    constructor Create(const _Mask: string; _MayHaveAttr: TFileAttributeSet = ALL_FILES_ATTRIB_SET);
     /// <summary>
     /// Destructor, will call FindClose if necessary
     /// </summary>
@@ -84,8 +87,7 @@
     /// @param IncludePath determines whether the List of filenames includes the full path or not
     /// </summary>
     class function Execute(const _Mask: string; _List: TStrings;
-      _MayHaveAttr: TFileAttributeSet = [dfaHidden, dfaSysFile, dfaVolumeID, dfaDirectory, dfaArchive];
-      _IncludePath: boolean = False): integer;
+      _MayHaveAttr: TFileAttributeSet = ALL_FILES_ATTRIB_SET; _IncludePath: Boolean = False): Integer;
     /// <summary>
     /// Calls SysUtils.FindFirst on first call and SysUtls.FindNext in later
     /// calls.
@@ -94,7 +96,7 @@
     ///       does not include the path
     /// @Returns true, if a matching file was found, false otherwise
     /// </summary>
-    function FindNext(out _Filename: string): boolean; overload;
+    function FindNext(out _Filename: string): Boolean; overload;
     /// <summary>
     /// Calls SysUtils.FindFirst on first call and SysUtls.FindNext in later
     /// calls. If it returns true, use the SR property to get information about
@@ -102,7 +104,7 @@
     /// the filename.
     /// @Returns true, if a matching file was found, false otherwise
     /// </summary>
-    function FindNext: boolean; overload;
+    function FindNext: Boolean; overload;
     /// <summary>
     /// Calls FindNext until it returns false, stores all filenames in List and
     /// returns the number of files found.
@@ -111,7 +113,7 @@
     /// @param IncludePath determines whether the List of filenames includes the full path or not
     /// @returns the number of matching files
     /// </summary>
-    function FindAll(_List: TStrings = nil; _IncludePath: boolean = False): integer;
+    function FindAll(_List: TStrings = nil; _IncludePath: Boolean = False): Integer;
     /// <summary>
     /// Calls FindClose so FindNext will start again. Reset does not change any
     /// properties (e.g. Mask, MustHaveAttr, MayHaveAttr)
@@ -121,7 +123,7 @@
     /// Returns the number of matches so far, that is the number of successful
     /// calls to FindNext
     /// </summary>
-    property MatchCount: integer read FMatchCount;
+    property MatchCount: Integer read FMatchCount;
     /// <summary>
     /// Returns the search mask
     /// </summary>
@@ -277,7 +279,7 @@
     ///                            directly DstDir or if subdirectories should
     ///                            be created, default is false
     /// </summary>
-    procedure SyncOneWay(const _SrcDir, _DstDir: string; _FlattenDirHierarchy: boolean = False);
+    procedure SyncOneWay(const _SrcDir, _DstDir: string; _FlattenDirHierarchy: Boolean = False);
     /// <summary>
     /// calls SyncOneWay(DirA, DirB) and SyncOneWay(DirB, DirA)
     /// (not implemented: if CheckContent=true, the content existing files will be checked and if
@@ -388,7 +390,7 @@
     /// @returns the name of the created directory
     /// </summary>
     class function CreateUniqueDirectory(_BaseDir: string = ''; const _Prefix: string = 'dz'): string;
-    class function CreateUniqueTempDir(_DeleteOnlyIfEmpty: boolean = False; _Prefix: string = 'dz'): IUniqueTempDir;
+    class function CreateUniqueTempDir(_DeleteOnlyIfEmpty: Boolean = False; _Prefix: string = 'dz'): IUniqueTempDir;
 
     /// <summary>
     /// Calls the Win32Api function GetTempPath but returns a string rather than
@@ -407,7 +409,7 @@
     ///        but just return false if moving the file fails.
     /// @returns true, if the file could be moved, false otherwise.
     /// </summary>
-    class function MoveFile(const _Source, _Dest: string; _RaiseException: boolean = True): boolean;
+    class function MoveFile(const _Source, _Dest: string; _RaiseException: Boolean = True): Boolean;
     /// <summary>
     /// Moves the file Source to Dest using the Windows MoveFileEx function.
     /// @param Source is a string containing the name of the existing file
@@ -420,7 +422,7 @@
     /// @returns true, if the file could be moved, false otherwise.
     /// </summary>
     class function MoveFileEx(const _Source, _Dest: string; _Flags: TMoveFileExFlagSet;
-      _RaiseException: boolean = True): boolean;
+      _RaiseException: Boolean = True): Boolean;
 
     /// <summary>
     /// Copies the file Source to Dest using the Windows CopyFile function.
@@ -437,8 +439,8 @@
     /// @returns true, if the file could be copied, false otherwise.
     /// @raises  EOSError if an error occurs and cfwRaiseException was passed
     /// </summary>
-    class function CopyFile(const _Source, _Dest: string; _FailIfExists: boolean = True;
-      _RaiseException: boolean = True; _ForceOverwrite: boolean = False): boolean; overload;
+    class function CopyFile(const _Source, _Dest: string; _FailIfExists: Boolean = True;
+      _RaiseException: Boolean = True; _ForceOverwrite: Boolean = False): Boolean; overload;
 
     /// <summary>
     /// Copies the file Source to Dest using the Windows CopyFile function.
@@ -454,7 +456,7 @@
     /// @raises  EOSError if an error occurs and cfwRaiseException was passed
     /// </summary>
     class function CopyFile(const _Source, _Dest: string;
-      _Flags: TCopyFileFlagSet = [cfRaiseException]): boolean; overload;
+      _Flags: TCopyFileFlagSet = [cfRaiseException]): Boolean; overload;
 
     /// <summary>
     /// Copies the file Source to Dest using the Windows CopyFileEx function which
@@ -491,7 +493,7 @@
     /// if FilesSkipped is given, all skipped files will be added to that list (may be nil)
     ///</summary>
     class function CopyMatchingFiles(const _Mask, _SrcDir, _DestDir: string; _Flags: TCopyFileFlagset;
-      _FilesSkipped: TStrings = nil): integer;
+      _FilesSkipped: TStrings = nil): Integer;
 
     /// <summary>
     /// Copies the file Source to Dest using the Windows MoveFileWithProgress function which
@@ -521,7 +523,7 @@
     /// @returns true, if the directory was created
     /// @raises EOSError if there was an error and RaiseException was true
     /// </summary>
-    class function CreateDir(const _DirectoryName: string; _RaiseException: boolean = True): boolean;
+    class function CreateDir(const _DirectoryName: string; _RaiseException: Boolean = True): Boolean;
 
     /// <summary>
     /// Creates a new directory, including the creation of parent directories as needed.
@@ -530,7 +532,7 @@
     /// @returns true, if the directory was created
     /// @raises EOSError if there was an error and RaiseException was true
     /// </summary>
-    class function ForceDir(const _DirectoryPath: string; _RaiseException: boolean = True): boolean;
+    class function ForceDir(const _DirectoryPath: string; _RaiseException: Boolean = True): Boolean;
 
     /// <summary>
     /// Sets a file's readonly flag
@@ -539,7 +541,7 @@
     /// @returns true, if the readonly flag has been changed
     /// @raises EOSError if there was an error and RaiseException was true
     /// </summary>
-    class function SetReadonly(const _Filename: string; _Set: boolean; _RaiseException: boolean = True): boolean;
+    class function SetReadonly(const _Filename: string; _Set: Boolean; _RaiseException: Boolean = True): Boolean;
 
     /// <summary>
     /// Deletes the file using the SysUtils.DeleteFile function.
@@ -554,8 +556,8 @@
     /// @returns true, if the file could be deleted, false otherwise.
     /// @raises EOSError if there was an error and RaiseException was true
     /// </summary>
-    class function DeleteFile(const _Filename: string; _RaiseException: boolean = True;
-      _Force: boolean = False): boolean;
+    class function DeleteFile(const _Filename: string; _RaiseException: Boolean = True;
+      _Force: Boolean = False): Boolean;
 
     /// <summary>
     /// Deletes all files in a directory matching a given filemask (non-recursive)
@@ -577,11 +579,11 @@
     /// @raises EOSError if there was an error and RaiseException was true
     /// </summary>
     class function DeleteMatchingFiles(const _Dir, _Mask: string;
-      _RaiseException: boolean = True; _Force: boolean = False): integer; overload;
+      _RaiseException: Boolean = True; _Force: Boolean = False): Integer; overload;
     class function DeleteMatchingFiles(const _Dir, _Mask: string; _ExceptMask: string = '';
-      _RaiseException: boolean = True; _Force: boolean = False): integer; overload; deprecated;
+      _RaiseException: Boolean = True; _Force: Boolean = False): Integer; overload; deprecated;
     class function DeleteMatchingFiles(const _Dir, _Mask: string; const _ExceptMasks: array of string;
-      _RaiseException: boolean = True; _Force: boolean = False): integer; overload;
+      _RaiseException: Boolean = True; _Force: Boolean = False): Integer; overload;
 
     ///<summary>
     /// Gets a list of directories matching the given mask.
@@ -593,7 +595,7 @@
     ///                    the full paths.
     /// @returns the number of matching directories
     ///</summary>
-    class function FindMatchingDirs(const _Mask: string; _sl: TStrings; _IncludePath: boolean = False): integer;
+    class function FindMatchingDirs(const _Mask: string; _sl: TStrings; _IncludePath: Boolean = False): Integer;
 
     ///<summary>
     /// Gets a list of files matching the given mask. Only regular files will be found, no
@@ -607,7 +609,7 @@
     ///                    the full paths.
     /// @returns the number of matching files
     ///</summary>
-    class function FindMatchingFiles(const _Mask: string; _sl: TStrings; _IncludePath: boolean = False): integer;
+    class function FindMatchingFiles(const _Mask: string; _sl: TStrings; _IncludePath: Boolean = False): Integer;
 
     /// <summary>
     /// tries to find a matching file
@@ -624,12 +626,12 @@
     /// need wildcards, use FindMatchingFile.
     /// @param RaiseException determines whether an exception should be raised if the file does not exist
     /// @raises Exception if the file does not exist and RaiseException is true
-    class function FileExists(const _Filename: string; _RaiseException: boolean = False): boolean;
+    class function FileExists(const _Filename: string; _RaiseException: Boolean = False): Boolean;
 
     ///<summary>
     /// @param RaiseException determines whether an exception should be raised if the directory does not exist
     /// @raises Exception if the directory does not exist and RaiseException is true
-    class function DirExists(const _DirName: string; _RaiseException: boolean = False): boolean;
+    class function DirExists(const _DirName: string; _RaiseException: Boolean = False): Boolean;
 
     /// <summary>
     /// deletes an empty directory using the SysUtils function RemoveDir
@@ -645,15 +647,15 @@
     /// @returns true, if the directory could be deleted, false otherwise.
     /// @raises EOSError if there was an error and RaiseException was true
     /// </summary>
-    class function RemoveDir(const _Dirname: string; _RaiseException: boolean = True;
-      _Force: boolean = False): boolean;
+    class function RemoveDir(const _Dirname: string; _RaiseException: Boolean = True;
+      _Force: Boolean = False): Boolean;
 
     /// <summary>
     /// function is deprecated, use DelDirTree instead!
     /// Note the different order of parameters of the new function!
     /// </summary>
-    class function DelTree(const _Dirname: string; _Force: boolean = False;
-      _RaiseException: boolean = True): boolean; deprecated;
+    class function DelTree(const _Dirname: string; _Force: Boolean = False;
+      _RaiseException: Boolean = True): Boolean; deprecated;
     /// <summary>
     /// Deletes a directory with all files and subdirectories.
     /// Note: This new function has a different order of parameters than
@@ -667,8 +669,8 @@
     /// @returns true, if the directory could be deleted, false otherwise.
     /// @raises EOSError if there was an error and RaiseException was true
     /// </summary>
-    class function DelDirTree(const _Dirname: string; _RaiseException: boolean = True;
-      _Force: boolean = False): boolean;
+    class function DelDirTree(const _Dirname: string; _RaiseException: Boolean = True;
+      _Force: Boolean = False): Boolean;
 
     /// <summary>
     /// reads a text file and returns its content as a string
@@ -685,7 +687,7 @@
     ///        the default is true, but you might not want that
     /// @returns true, if the string is a valid filename, false otherwise
     /// </summary>
-    class function IsValidFilename(const _s: string; _AllowDot: boolean = True): boolean; overload;
+    class function IsValidFilename(const _s: string; _AllowDot: Boolean = True): Boolean; overload;
     /// <summary>
     /// checks whether the given string is a valid filename (without path), that is
     /// does not contain one of the characters defined in INVALID_FILENAME_CHARS and
@@ -696,12 +698,12 @@
     ///        the default is true, but you might not want that
     /// @returns true, if the string is a valid filename, false otherwise
     /// </summary>
-    class function IsValidFilename(const _s: string; out _ErrPos: integer; _AllowDot: boolean = True): boolean; overload;
+    class function IsValidFilename(const _s: string; out _ErrPos: Integer; _AllowDot: Boolean = True): Boolean; overload;
 
-    class function ContainsWildcard(const _Mask: string): boolean;
+    class function ContainsWildcard(const _Mask: string): Boolean;
 
     /// <summary> Returns true if the file exists and is readonly </summary>
-    class function IsFileReadonly(const _Filename: string): boolean;
+    class function IsFileReadonly(const _Filename: string): Boolean;
 
     /// <summary>
     /// creates a backup of the file appending the current date and time to the base
@@ -731,17 +733,21 @@
     ///           and last access timestamp of the file.
     ///           @param Info will contain these values, only valid if result = true
     /// </summary>
-    class function TryGetFileInfo(const _Filename: string; out _Info: TFileInfoRec): boolean;
-    class function TryGetFileSize(const _Filename: string; out _Size: Int64): boolean;
+    class function TryGetFileInfo(const _Filename: string; out _Info: TFileInfoRec): Boolean;
+    class function TryGetFileSize(const _Filename: string; out _Size: Int64): Boolean;
     class function GetFileSize(const _Filename: string): Int64;
 
     /// <summary>
     /// Returns the free space (in bytes) on the disk with the given drive letter
     /// </summary>
-    class function DiskFree(_DriveLetter: AnsiChar): Int64;
-    class function GetVolumeName(_DriveLetter: AnsiChar): string;
+    class function DiskFree(_DriveLetter: AnsiChar): Int64; overload;
+    /// <summary>
+    /// Returns the free space (in bytes) on the disk on which the given directory is located
+    /// </summary>
+    class function DiskFree(const _Directory: string): Int64; overload;
+    class function GetVolumeName(_DriveLetter: Char): string;
     class function GetRemoteVolumeName(const _Share: string): string;
-    class procedure GetLocalVolumeNames(_sl: TStrings; _HdOnly: boolean = False; _IgnoreEmpty: Boolean = True);
+    class procedure GetLocalVolumeNames(_sl: TStrings; _HdOnly: Boolean = False; _IgnoreEmpty: Boolean = True);
 
     ///<summary> changes the "full" file extension where "full" means it handles multiple
     ///          extensions like .doc.exe </summary>
@@ -758,7 +764,7 @@
   /// <summary>
   /// callback event for generating a filename for the given generation
   ///  </summary>
-  TOnGenerateFilename = procedure(_Sender: TObject; _Generation: integer; var _Filename: string) of object;
+  TOnGenerateFilename = procedure(_Sender: TObject; _Generation: Integer; var _Filename: string) of object;
 type
   /// <summary>
   /// This class handles keeping generations of files, e.g. log files. The default
@@ -769,11 +775,11 @@
     FBaseName: string;
     FSuffix: string;
     FOnGenerateFilename: TOnGenerateFilename;
-    FMaxGenerations: integer;
-    FResultContainsNumber: boolean;
-    FOldestIsHighest: boolean;
-    FPrependZeros: integer;
-    function GenerateFilename(_Generation: integer): string;
+    FMaxGenerations: Integer;
+    FResultContainsNumber: Boolean;
+    FOldestIsHighest: Boolean;
+    FPrependZeros: Integer;
+    function GenerateFilename(_Generation: Integer): string;
   public
     /// <summary>
     /// @param BaseName is the base filename to which by default _<n> followed by
@@ -786,20 +792,20 @@
     /// <summary>
     /// generates the filename and returns it
     /// </summary>
-    function Execute(_KeepOriginal: boolean): string;
+    function Execute(_KeepOriginal: Boolean): string;
     /// <summary>
     /// the maximum of file generations that should be kept
     /// </summary>
-    property MaxGenerations: integer read FMaxGenerations write FMaxGenerations default 5;
+    property MaxGenerations: Integer read FMaxGenerations write FMaxGenerations default 5;
     /// <summary>
     /// should the resulting filename contain a number?
     /// </summary>
-    property ResultContainsNumber: boolean read FResultContainsNumber write FResultContainsNumber default False;
+    property ResultContainsNumber: Boolean read FResultContainsNumber write FResultContainsNumber default False;
     /// <summary>
     /// does the oldest file have the highest number?
     /// </summary>
-    property OldestIsHighest: boolean read FOldestIsHighest write FOldestIsHighest default True;
-    property PrependZeros: integer read FPrependZeros write FPrependZeros default 0;
+    property OldestIsHighest: Boolean read FOldestIsHighest write FOldestIsHighest default True;
+    property PrependZeros: Integer read FPrependZeros write FPrependZeros default 0;
     /// <summary>
     /// allows read access to the file's base name as passed to the constructor
     /// </summary>
@@ -864,7 +870,7 @@
 
 class function TSimpleDirEnumerator.Execute(const _Mask: string; _List: TStrings;
   _MayHaveAttr: TFileAttributeSet = [dfaHidden, dfaSysFile, dfaVolumeID, dfaDirectory, dfaArchive];
-  _IncludePath: boolean = False): integer;
+  _IncludePath: Boolean = False): Integer;
 var
   enum: TSimpleDirEnumerator;
 begin
@@ -876,7 +882,7 @@
   end;
 end;
 
-function TSimpleDirEnumerator.FindAll(_List: TStrings = nil; _IncludePath: boolean = False): integer;
+function TSimpleDirEnumerator.FindAll(_List: TStrings = nil; _IncludePath: Boolean = False): Integer;
 var
   s: string;
   Path: string;
@@ -893,12 +899,12 @@
   end;
 end;
 
-function TSimpleDirEnumerator.FindNext(out _Filename: string): boolean;
+function TSimpleDirEnumerator.FindNext(out _Filename: string): Boolean;
 var
-  Res: integer;
-  Attr: integer;
+  Res: Integer;
+  Attr: Integer;
 
-  function AttrOk(_EnumAttr: TFileAttributes; _SysAttr: integer): boolean;
+  function AttrOk(_EnumAttr: TFileAttributes; _SysAttr: Integer): Boolean;
   begin
     Result := True;
     if _EnumAttr in FMustHaveAttr then
@@ -906,7 +912,7 @@
         Result := False;
   end;
 
-  procedure CondAddAttr(_EnumAttr: TFileAttributes; _SysAttr: integer);
+  procedure CondAddAttr(_EnumAttr: TFileAttributes; _SysAttr: Integer);
   begin
     if _EnumAttr in FMayHaveAttr then
       Attr := Attr + _SysAttr;
@@ -956,7 +962,7 @@
   until False;
 end;
 
-function TSimpleDirEnumerator.FindNext: boolean;
+function TSimpleDirEnumerator.FindNext: Boolean;
 var
   s: string;
 begin
@@ -974,8 +980,8 @@
 
 class function TFileSystem.GetTempPath: string;
 var
-  Res: integer;
-  LastError: integer;
+  Res: Integer;
+  LastError: Integer;
 begin
   SetLength(Result, 1024);
   Res := Windows.GetTempPath(1024, PChar(Result));
@@ -1003,7 +1009,7 @@
   lpMaximumComponentLength, lpFileSystemFlags: LPDWORD;
   lpFileSystemNameBuffer: PChar; nFileSystemNameSize: DWORD): BOOL; stdcall; external kernel32 name 'GetVolumeInformationA';
 
-class function TFileSystem.GetVolumeName(_DriveLetter: AnsiChar): string;
+class function TFileSystem.GetVolumeName(_DriveLetter: Char): string;
 begin
   Result := GetRemoteVolumeName(_DriveLetter + ':\');
 end;
@@ -1020,7 +1026,7 @@
     Result := '';
 end;
 
-class procedure TFileSystem.GetLocalVolumeNames(_sl: TStrings; _HdOnly: boolean = False; _IgnoreEmpty: Boolean = True);
+class procedure TFileSystem.GetLocalVolumeNames(_sl: TStrings; _HdOnly: Boolean = False; _IgnoreEmpty: Boolean = True);
 type
   TDriveType = (dtUnknown, dtNoDrive, dtFloppy, dtFixed, dtNetwork, dtCDROM, dtRAM);
 var
@@ -1037,7 +1043,7 @@
     DriveChar := Char(DriveNum + Ord('a'));
     DriveType := TDriveType(Windows.GetDriveType(PChar(DriveChar + ':\')));
     if not _HdOnly or (DriveType = dtFixed) then begin
-      s := GetVolumeName(AnsiChar(DriveChar));
+      s := GetVolumeName(DriveChar);
       if s <> '' then begin
         _sl.AddObject(s, Pointer(DriveNum));
       end else begin
@@ -1051,7 +1057,7 @@
 end;
 
 class function TFileSystem.CreateDir(const _DirectoryName: string;
-  _RaiseException: boolean = True): boolean;
+  _RaiseException: Boolean = True): Boolean;
 var
   LastError: Cardinal;
 begin
@@ -1069,8 +1075,8 @@
 class function TFileSystem.CreateUniqueDirectory(_BaseDir: string = ''; const _Prefix: string = 'dz'): string;
 var
   Pid: DWord;
-  Counter: integer;
-  Ok: boolean;
+  Counter: Integer;
+  Ok: Boolean;
   s: string;
 begin
   if _BaseDir = '' then
@@ -1099,11 +1105,11 @@
     ///<summary> Path including trailing path delimiter </summary>
     function PathBS: string;
   public
-    constructor Create(const _Path: string; _DeleteOnlyIfEmpty: boolean = False);
+    constructor Create(const _Path: string; _DeleteOnlyIfEmpty: Boolean = False);
     destructor Destroy; override;
   end;
 
-class function TFileSystem.CreateUniqueTempDir(_DeleteOnlyIfEmpty: boolean = False; _Prefix: string = 'dz'): IUniqueTempDir;
+class function TFileSystem.CreateUniqueTempDir(_DeleteOnlyIfEmpty: Boolean = False; _Prefix: string = 'dz'): IUniqueTempDir;
 var
   s: string;
 begin
@@ -1114,7 +1120,7 @@
 class function TFileSystem.GetTempFileName(_Directory: string = ''; const _Prefix: string = 'dz';
   _Unique: word = 0): string;
 var
-  Res: integer;
+  Res: Integer;
   LastError: Cardinal;
 begin
   if _Directory = '' then
@@ -1154,10 +1160,10 @@
 //end;
 
 class function TFileSystem.TryGetFileInfo(const _Filename: string;
-  out _Info: TFileInfoRec): boolean;
+  out _Info: TFileInfoRec): Boolean;
 var
   sr: TSearchRec;
-  Res: integer;
+  Res: Integer;
 begin
   Res := FindFirst(_Filename, faAnyFile, sr);
   Result := (Res = 0);
@@ -1189,7 +1195,7 @@
 end;
 
 class function TFileSystem.TryGetFileSize(const _Filename: string;
-  out _Size: Int64): boolean;
+  out _Size: Int64): Boolean;
 var
   Info: TFileInfoRec;
 begin
@@ -1221,9 +1227,27 @@
   end;
 end;
 
+class function TFileSystem.DiskFree(const _Directory: string): Int64;
+var
+  TotalSpace: Int64;
+  ErrorMode: Cardinal;
+begin
+  ErrorMode := SetErrorMode(SEM_FAILCRITICALERRORS);
+  try
+    try
+      if not SysUtils.GetDiskFreeSpaceEx(PChar(_Directory), Result, TotalSpace, nil) then
+        Result := -1;
+    except
+      Result := -1;
+    end;
+  finally
+    SetErrorMode(ErrorMode);
+  end;
+end;
+
 class function TFileSystem.GetShortPathname(const _LongName: string): string;
 var
-  Res: integer;
+  Res: Integer;
   LastError: Cardinal;
 begin
   SetLength(Result, MAX_PATH);
@@ -1236,7 +1260,7 @@
   Result := PChar(Result); // truncate at first #0
 end;
 
-class function TFileSystem.MoveFile(const _Source, _Dest: string; _RaiseException: boolean = True): boolean;
+class function TFileSystem.MoveFile(const _Source, _Dest: string; _RaiseException: Boolean = True): Boolean;
 var
   LastError: Cardinal;
 begin
@@ -1249,7 +1273,7 @@
 end;
 
 class function TFileSystem.MoveFileEx(const _Source, _Dest: string; _Flags: TMoveFileExFlagSet;
-  _RaiseException: boolean): boolean;
+  _RaiseException: Boolean): Boolean;
 var
   LastError: Cardinal;
   Flags: DWORD;
@@ -1274,9 +1298,9 @@
   end;
 end;
 
-class function TFileSystem.SetReadonly(const _Filename: string; _Set: boolean; _RaiseException: boolean = True): boolean;
+class function TFileSystem.SetReadonly(const _Filename: string; _Set: Boolean; _RaiseException: Boolean = True): Boolean;
 var
-  Attr: integer;
+  Attr: Integer;
   LastError: Cardinal;
 begin
   Attr := FileGetAttr(_Filename);
@@ -1295,8 +1319,8 @@
     Result := True;
 end;
 
-class function TFileSystem.CopyFile(const _Source, _Dest: string; _FailIfExists: boolean = True;
-  _RaiseException: boolean = True; _ForceOverwrite: boolean = False): boolean;
+class function TFileSystem.CopyFile(const _Source, _Dest: string; _FailIfExists: Boolean = True;
+  _RaiseException: Boolean = True; _ForceOverwrite: Boolean = False): Boolean;
 var
   LastError: Cardinal;
 begin
@@ -1333,12 +1357,12 @@
   CopyFile(_Filename, Result, True);
 end;
 
-class function TFileSystem.ContainsWildcard(const _Mask: string): boolean;
+class function TFileSystem.ContainsWildcard(const _Mask: string): Boolean;
 begin
   Result := (Pos('?', _Mask) > 0) or (Pos('*', _Mask) > 0);
 end;
 
-class function TFileSystem.CopyFile(const _Source, _Dest: string; _Flags: TCopyFileFlagSet): boolean;
+class function TFileSystem.CopyFile(const _Source, _Dest: string; _Flags: TCopyFileFlagSet): Boolean;
 begin
   Result := CopyFile(_Source, _Dest,
     cfFailIfExists in _Flags,
@@ -1456,7 +1480,7 @@
 end;
 
 class function TFileSystem.CopyMatchingFiles(const _Mask, _SrcDir, _DestDir: string;
-  _Flags: TCopyFileFlagset; _FilesSkipped: TStrings = nil): integer;
+  _Flags: TCopyFileFlagset; _FilesSkipped: TStrings = nil): Integer;
 var
   Files: TStringList;
   s: string;
@@ -1531,10 +1555,10 @@
   end;
 end;
 
-class function TFileSystem.DeleteFile(const _Filename: string; _RaiseException: boolean = True;
-  _Force: boolean = False): boolean;
+class function TFileSystem.DeleteFile(const _Filename: string; _RaiseException: Boolean = True;
+  _Force: Boolean = False): Boolean;
 var
-  Attr: integer;
+  Attr: Integer;
   LastError: Cardinal;
 begin
   Result := SysUtils.DeleteFile(_Filename);
@@ -1552,22 +1576,22 @@
 end;
 
 class function TFileSystem.DeleteMatchingFiles(const _Dir, _Mask: string;
-  _RaiseException, _Force: boolean): integer;
+  _RaiseException, _Force: Boolean): Integer;
 begin
   Result := DeleteMatchingFiles(_Dir, _Mask, [], _RaiseException, _Force);
 end;
 
 class function TFileSystem.DeleteMatchingFiles(const _Dir, _Mask: string;
-  _ExceptMask: string; _RaiseException, _Force: boolean): integer;
+  _ExceptMask: string; _RaiseException, _Force: Boolean): Integer;
 begin
   Result := DeleteMatchingFiles(_Dir, _Mask, [_ExceptMask], _RaiseException, _Force);
 end;
 
 class function TFileSystem.DeleteMatchingFiles(const _Dir, _Mask: string;
   const _ExceptMasks: array of string; _RaiseException,
-  _Force: boolean): integer;
+  _Force: Boolean): Integer;
 
-  function MatchesAnyExceptMask(const _s: string): boolean;
+  function MatchesAnyExceptMask(const _s: string): Boolean;
   var
     i: Integer;
     Mask: string;
@@ -1606,7 +1630,7 @@
   end;
 end;
 
-class function TFileSystem.FileExists(const _Filename: string; _RaiseException: boolean = False): boolean;
+class function TFileSystem.FileExists(const _Filename: string; _RaiseException: Boolean = False): Boolean;
 var
   OldErrorMode: Cardinal;
 begin
@@ -1620,7 +1644,7 @@
     raise Exception.CreateFmt(_('File not found: %s'), [_Filename]);
 end;
 
-class function TFileSystem.DirExists(const _DirName: string; _RaiseException: boolean = False): boolean;
+class function TFileSystem.DirExists(const _DirName: string; _RaiseException: Boolean = False): Boolean;
 var
   OldErrorMode: Cardinal;
 begin
@@ -1635,7 +1659,7 @@
 end;
 
 class function TFileSystem.FindMatchingDirs(const _Mask: string; _sl: TStrings;
-  _IncludePath: boolean = False): integer;
+  _IncludePath: Boolean = False): Integer;
 var
   enum: TSimpleDirEnumerator;
 begin
@@ -1656,7 +1680,7 @@
 end;
 
 class function TFileSystem.FindMatchingFiles(const _Mask: string; _sl: TStrings;
-  _IncludePath: boolean): integer;
+  _IncludePath: Boolean): Integer;
 begin
   Result := TSimpleDirEnumerator.Execute(_Mask, _sl, [dfaArchive], _IncludePath);
 end;
@@ -1685,7 +1709,7 @@
     end;
 end;
 
-class function TFileSystem.ForceDir(const _DirectoryPath: string; _RaiseException: boolean = True): boolean;
+class function TFileSystem.ForceDir(const _DirectoryPath: string; _RaiseException: Boolean = True): Boolean;
 var
   LastError: Cardinal;
 begin
@@ -1707,9 +1731,9 @@
   end;
 end;
 
-class function TFileSystem.RemoveDir(const _Dirname: string; _RaiseException: boolean = True; _Force: boolean = False): boolean;
+class function TFileSystem.RemoveDir(const _Dirname: string; _RaiseException: Boolean = True; _Force: Boolean = False): Boolean;
 var
-  Attr: integer;
+  Attr: Integer;
   LastError: Cardinal;
 begin
   Result := SysUtils.RemoveDir(_Dirname);
@@ -1726,13 +1750,13 @@
   end;
 end;
 
-class function TFileSystem.DelTree(const _Dirname: string; _Force: boolean = False; _RaiseException: boolean = True): boolean;
+class function TFileSystem.DelTree(const _Dirname: string; _Force: Boolean = False; _RaiseException: Boolean = True): Boolean;
 begin
   Result := DelDirTree(_Dirname, _RaiseException, _Force);
 end;
 
 class function TFileSystem.DelDirTree(const _Dirname: string; _RaiseException,
-  _Force: boolean): boolean;
+  _Force: Boolean): Boolean;
 var
   sr: TSearchRec;
   Filename: string;
@@ -1780,7 +1804,7 @@
   end;
 end;
 
-class function TFileSystem.IsFileReadonly(const _Filename: string): boolean;
+class function TFileSystem.IsFileReadonly(const _Filename: string): Boolean;
 var
   Attributes: Word;
 begin
@@ -1791,7 +1815,7 @@
   end;
 end;
 
-class function TFileSystem.IsValidFilename(const _s: string; out _ErrPos: integer; _AllowDot: boolean = True): boolean;
+class function TFileSystem.IsValidFilename(const _s: string; out _ErrPos: Integer; _AllowDot: Boolean = True): Boolean;
 var
   i: Integer;
   NotAllowed: TCharSet;
@@ -1820,9 +1844,9 @@
   Result := True;
 end;
 
-class function TFileSystem.IsValidFilename(const _s: string; _AllowDot: boolean = True): boolean;
+class function TFileSystem.IsValidFilename(const _s: string; _AllowDot: Boolean = True): Boolean;
 var
-  ErrPos: integer;
+  ErrPos: Integer;
 begin
   Result := IsValidFilename(_s, ErrPos, _AllowDot);
 end;
@@ -1830,14 +1854,14 @@
 class function TFileSystem.ExtractFileExtFull(const _Filename: string): string;
 var
   p: Integer;
+  fn: string;
 begin
-  p := Pos('.', _Filename);
+  fn := ExtractFileName(_FileName);
+  p := Pos('.', fn);
   if p = 0 then
     Result := ''
   else
-    Result := TailStr(_Filename, p + 1);
-  if Result <> '' then
-    Result := '.' + Result;
+    Result := TailStr(fn, p);
 end;
 
 class function TFileSystem.RemoveFileExtFull(const _Filename: string): string;
@@ -1901,14 +1925,14 @@
   FSuffix := _Suffix;
 end;
 
-function TFileGenerationHandler.Execute(_KeepOriginal: boolean): string;
+function TFileGenerationHandler.Execute(_KeepOriginal: Boolean): string;
 
   function doNoNumberOldIsHighest(): string;
   var
     i: Integer;
     dst: string;
     src: string;
-    MaxGen: integer;
+    MaxGen: Integer;
   begin
     MaxGen := FMaxGenerations - 1;
     for i := MaxGen - 1 downto 1 do begin
@@ -1936,7 +1960,7 @@
     i: Integer;
     dst: string;
     src: string;
-    MaxGen: integer;
+    MaxGen: Integer;
   begin
     MaxGen := FMaxGenerations;
     for i := MaxGen - 1 downto 1 do begin
@@ -1953,7 +1977,7 @@
   function doNoNumberOldIsLowest(): string;
   var
     i: Integer;
-    MaxGen: integer;
+    MaxGen: Integer;
     src: string;
     dst: string;
     SlotFound: Boolean;
@@ -1993,7 +2017,7 @@
   function doNumberOldIsLowest(): string;
   var
     i: Integer;
-    MaxGen: integer;
+    MaxGen: Integer;
   begin
     MaxGen := FMaxGenerations;
     for i := 1 to MaxGen do begin
@@ -2029,7 +2053,7 @@
   end;
 end;
 
-function TFileGenerationHandler.GenerateFilename(_Generation: integer): string;
+function TFileGenerationHandler.GenerateFilename(_Generation: Integer): string;
 begin
   if _Generation = 0 then
     Result := FBaseName + FSuffix
@@ -2133,7 +2157,7 @@
   end;
 end;
 
-procedure TDirectorySync.SyncOneWay(const _SrcDir, _DstDir: string; _FlattenDirHierarchy: boolean = False);
+procedure TDirectorySync.SyncOneWay(const _SrcDir, _DstDir: string; _FlattenDirHierarchy: Boolean = False);
 var
   Filename: string;
   EnumA: TSimpleDirEnumerator;
@@ -2184,7 +2208,7 @@
 
 { TUniqueTempDir }
 
-constructor TUniqueTempDir.Create(const _Path: string; _DeleteOnlyIfEmpty: boolean = False);
+constructor TUniqueTempDir.Create(const _Path: string; _DeleteOnlyIfEmpty: Boolean = False);
 begin
   inherited Create;
   FPath := _Path;



From twm at mail.berlios.de  Sat Aug 27 13:17:33 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:17:33 +0200
Subject: [Dzchart-svncheckins] r598 - utilities/dzLib/trunk/src
Message-ID: <20110827111733.EFE0C481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:17:33 +0200 (Sat, 27 Aug 2011)
New Revision: 598

Modified:
   utilities/dzLib/trunk/src/u_dzShellApiUtils.pas
Log:
new methods GetProfile and GetProfileDir

Modified: utilities/dzLib/trunk/src/u_dzShellApiUtils.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzShellApiUtils.pas	2011-08-27 11:17:05 UTC (rev 597)
+++ utilities/dzLib/trunk/src/u_dzShellApiUtils.pas	2011-08-27 11:17:33 UTC (rev 598)
@@ -48,12 +48,15 @@
     function LoadSHFolder(var _SHGetFolderPath: TSHGetFolderPath): Integer;
   protected
     FAppHandle: THandle;
-    function GetSpecialFolder(_CSIDL: integer): string;
+    function GetSpecialFolder(_CSIDL: Integer): string;
   public
     ///<summary> Creates a TWindowsShell object,
     ///   @param ApplicationHandle is the application's handle (Application.Handle) </summary>
     constructor Create(_ApplicationHandle: THandle = 0);
     destructor Destroy; override;
+    ///<summary> returns the path to the user's profile folder (c:\documents and settings\<username>) </summary>
+    function GetProfile: string;
+    class function GetProfileDir(_ApplicationHandle: THandle = 0): string;
     ///<summary> returns the path to the 'My Documents' folder </summary>
     function GetMyDocuments: string;
     class function GetMyDocumentsDir(_ApplicationHandle: THandle = 0): string;
@@ -87,9 +90,9 @@
     class function GetSystemWindowsDir: string;
 
     // Warning: These functions will display System dialogs if there is a problem!
-    class function CopyDir(const fromDir, toDir: string): boolean;
-    class function DelDir(dir: string): boolean;
-    class function MoveDir(const fromDir, toDir: string): boolean;
+    class function CopyDir(const fromDir, toDir: string): Boolean;
+    class function DelDir(dir: string): Boolean;
+    class function MoveDir(const fromDir, toDir: string): Boolean;
   end;
 
 implementation
@@ -245,6 +248,21 @@
     end;
 end;
 
+function TWindowsShell.GetProfile: string;
+begin
+  Result := GetSpecialFolder(CSIDL_PROFILE);
+end;
+
+class function TWindowsShell.GetProfileDir(_ApplicationHandle: THandle): string;
+begin
+  with TWindowsShell.Create(_ApplicationHandle) do
+    try
+      Result := GetProfile;
+    finally
+      Free;
+    end;
+end;
+
 function TWindowsShell.GetProgramFiles: string;
 begin
   Result := GetSpecialFolder(CSIDL_PROGRAM_FILES);
@@ -330,7 +348,7 @@
   Result := PChar(Result);
 end;
 
-class function TWindowsShell.CopyDir(const fromDir, toDir: string): boolean;
+class function TWindowsShell.CopyDir(const fromDir, toDir: string): Boolean;
 var
   fos: TSHFileOpStruct;
 begin
@@ -342,7 +360,7 @@
   Result := (0 = ShFileOperation(fos));
 end;
 
-class function TWindowsShell.DelDir(dir: string): boolean;
+class function TWindowsShell.DelDir(dir: string): Boolean;
 var
   fos: TSHFileOpStruct;
 begin
@@ -353,7 +371,7 @@
   Result := (0 = ShFileOperation(fos));
 end;
 
-class function TWindowsShell.MoveDir(const fromDir, toDir: string): boolean;
+class function TWindowsShell.MoveDir(const fromDir, toDir: string): Boolean;
 var
   fos: TSHFileOpStruct;
 begin



From twm at mail.berlios.de  Sat Aug 27 13:18:17 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:18:17 +0200
Subject: [Dzchart-svncheckins] r599 - utilities/dzLib/trunk/src
Message-ID: <20110827111817.6D0D2481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:18:17 +0200 (Sat, 27 Aug 2011)
New Revision: 599

Modified:
   utilities/dzLib/trunk/src/u_dzTranslator.pas
Log:
dzGetText no longer inlined, it caused too many warnings/hints to be worthwile

Modified: utilities/dzLib/trunk/src/u_dzTranslator.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzTranslator.pas	2011-08-27 11:17:33 UTC (rev 598)
+++ utilities/dzLib/trunk/src/u_dzTranslator.pas	2011-08-27 11:18:17 UTC (rev 599)
@@ -18,7 +18,7 @@
   SysUtils,
 {$IFDEF gnugettext}
   // NOTE: If you don't want any translations, define "NO_TRANSLATION" for your project
-  gnugettext, // libs\dxgettext
+  gnugettext, // libs\dxgettext\lib
   languagecodes,
 {$ENDIF}
   Classes;
@@ -85,7 +85,7 @@
 {$ENDIF}
 end;
 
-function dzDGetText(const _s: string; const _TextDomain: string = ''): string; inline;
+function dzDGetText(const _s: string; const _TextDomain: string = ''): string; 
 begin
   Result := DGetText(_s, _TextDomain);
 end;



From twm at mail.berlios.de  Sat Aug 27 13:19:26 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:19:26 +0200
Subject: [Dzchart-svncheckins] r600 - utilities/dzLib/trunk/src
Message-ID: <20110827111926.83479481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:19:26 +0200 (Sat, 27 Aug 2011)
New Revision: 600

Modified:
   utilities/dzLib/trunk/src/u_dzVclUtils.pas
Log:
new function TEdit_TryTextToInt, TEdit_IsTextInt, TTabControl_GetSelectedObject and TListBox_GetSelected

Modified: utilities/dzLib/trunk/src/u_dzVclUtils.pas
===================================================================
--- utilities/dzLib/trunk/src/u_dzVclUtils.pas	2011-08-27 11:18:17 UTC (rev 599)
+++ utilities/dzLib/trunk/src/u_dzVclUtils.pas	2011-08-27 11:19:26 UTC (rev 600)
@@ -60,7 +60,7 @@
 ///<summary> Assigns the TBitBtn's glyph from the hex string (e.g. copied from .dfm)
 ///          if ContainsLength is true, the first 4 bytes (8 characters) contain the length of the
 ///          data (as is the case with the strings stored in the .dfm file) </summary>
-procedure TBitBtn_GlyphFromString(_btn: TBitBtn; const _GlyphStr: AnsiString; _ContainsLength: boolean = True);
+procedure TBitBtn_GlyphFromString(_btn: TBitBtn; const _GlyphStr: AnsiString; _ContainsLength: Boolean = True);
 
 ///<summary> This is meant as a replacement to the LockWindowUpate function which shouldn't really be used
 ///          any more.
@@ -72,7 +72,7 @@
 ///          @param Element is the integer to check for
 ///          @param Arr is the array to check
 ///          @returns true, if Arr contains Element </summary>
-function ArrayContains(_Element: integer; const _Arr: array of integer): boolean;
+function ArrayContains(_Element: Integer; const _Arr: array of Integer): Boolean;
 
 type
   ///<summary> used in ResizeStringGrid and ResizeDbGrid to specify additional options
@@ -92,9 +92,9 @@
 ///                         defaults to an empty set. </summary>
 procedure TGrid_Resize(_Grid: TCustomGrid); overload;
 procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet); overload;
-procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; _RowOffset: integer); overload;
-procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of integer); overload;
-procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of integer; _RowOffset: integer); overload;
+procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; _RowOffset: Integer); overload;
+procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of Integer); overload;
+procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of Integer; _RowOffset: Integer); overload;
 
 ///<summary> Resizes the columns of a TDbGrid to fit their contents
 ///          @param Grid is the TCustomDbGrid to work on
@@ -107,7 +107,7 @@
 ///          @param IncludeFixed determines whether the fixed rows/columns are also included
 ///          @returns a string containing the contents of the grid columns separated by TAB
 ///                   rows sepearated by CRLF. </summary>
-function TGrid_GetText(_Grid: TCustomGrid; _IncludeFixed: boolean = False): string; overload;
+function TGrid_GetText(_Grid: TCustomGrid; _IncludeFixed: Boolean = False): string; overload;
 
 ///<summary> Returns the content of a StringGrid as a string
 ///          @param Grid is the TCustomGrid to read from.
@@ -120,32 +120,32 @@
 ///          @param Grid is the string grid to export
 ///          @param Filename is the name of the text file to create
 ///          @param IncludeFixed determines whether the fixed rows/columns are also exported </summary>
-procedure TGrid_ExportToFile(_Grid: TCustomGrid; const _Filename: string; _IncludeFixed: boolean = False);
+procedure TGrid_ExportToFile(_Grid: TCustomGrid; const _Filename: string; _IncludeFixed: Boolean = False);
 
 ///<summary> exports the contents of the string grid as tab separated strings to a stream
 ///          @param Grid is the string grid to export
 ///          @param Stream is the stream to write to
 ///          @param IncludeFixed determines whether the fixed rows/columns are also exported </summary>
-procedure TGrid_ExportToStream(_Grid: TCustomGrid; _Stream: TStream; _IncludeFixed: boolean = False);
+procedure TGrid_ExportToStream(_Grid: TCustomGrid; _Stream: TStream; _IncludeFixed: Boolean = False);
 
 ///<summary> sets the row count, taking the fixed rows into account
 ///          @returns the new RowCount </summary>
-function TGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: integer): integer;
+function TGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: Integer): Integer;
 
 ///<summary> sets the nonfixd row count
 ///          @returns the new RowCount </summary>
-function TGrid_SetNonfixedRowCount(_Grid: TCustomGrid; _RowCount: integer): integer;
+function TGrid_SetNonfixedRowCount(_Grid: TCustomGrid; _RowCount: Integer): Integer;
 
 ///<summary> sets the column count, taking the fixed columns into account
 ///          @returns the new ColCount </summary>
-function TGrid_SetColCount(_Grid: TCustomGrid; _ColCount: integer): integer;
+function TGrid_SetColCount(_Grid: TCustomGrid; _ColCount: Integer): Integer;
 
 ///<summary> sets the nonfixd column count
 ///          @returns the new ColCount </summary>
-function TGrid_SetNonfixedColCount(_Grid: TCustomGrid; _ColCount: integer): integer;
+function TGrid_SetNonfixedColCount(_Grid: TCustomGrid; _ColCount: Integer): Integer;
 
 ///<summary> sets the grid's current row without triggering an OnClick event
-procedure TGrid_SetRowNoClick(_Grid: TCustomGrid; _Row: integer);
+procedure TGrid_SetRowNoClick(_Grid: TCustomGrid; _Row: Integer);
 
 ///<summary> sets the row count to FixedRows + 1 and clears all non-fixed cells </summary>
 procedure TStringGrid_Clear(_Grid: TStringGrid);
@@ -156,10 +156,10 @@
 ///          @param Grid is the grid to expand
 ///          @param Caption is the caption of the new column
 ///          @returns the index of the new column </summary>
-function TStringGrid_AddColumn(_Grid: TStringGrid; const _Caption: string): integer;
+function TStringGrid_AddColumn(_Grid: TStringGrid; const _Caption: string): Integer;
 
-procedure TStringGrid_SetNonfixedCell(_Grid: TStringGrid; _col, _row: integer; const _Text: string);
-function TStringGrid_GetNonfixedCell(_Grid: TStringGrid; _col, _row: integer): string;
+procedure TStringGrid_SetNonfixedCell(_Grid: TStringGrid; _col, _row: Integer; const _Text: string);
+function TStringGrid_GetNonfixedCell(_Grid: TStringGrid; _col, _row: Integer): string;
 
 ///<summary> exports the contents of the string grid to a tab separated text file (deprecated, use TGrid_ExportTofile instead)
 ///          @param Grid is the string grid to export
@@ -170,29 +170,29 @@
 ///          @param Grid is the TStringGrid to scroll
 ///          @param Top is the topmost row to scroll, if passed as -1 defaults to the first non-fixed row
 ///          @param Bottom is the bottommost row to scroll, if passed as -1 defaults to RowCount-1 </summary>
-procedure TStringGrid_ScrollUp(_Grid: TStringGrid; _Top: integer = -1; _Bottom: integer = -1);
+procedure TStringGrid_ScrollUp(_Grid: TStringGrid; _Top: Integer = -1; _Bottom: Integer = -1);
 
 ///<summary> sets the row count, taking the fixed rows into account  (deprecated, use TGrid_SetRowCount instead) </summary>
-procedure TStringGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: integer); deprecated; inline; // use TGrid_SetRowCount instead
+procedure TStringGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: Integer); deprecated; inline; // use TGrid_SetRowCount instead
 
 ///<summary> sets the column count, taking the fixed columns into account </summary>
-procedure TStringGrid_SetColCount(_Grid: TCustomGrid; _ColCount: integer); deprecated; inline; // use TGrid_SetColCount instead
+procedure TStringGrid_SetColCount(_Grid: TCustomGrid; _ColCount: Integer); deprecated; inline; // use TGrid_SetColCount instead
 
 ///<summary> deletes the given row from the string grid and moves all rows below it up by one,
 ///   if there is only one non-fixed row left, this row is cleared but not deleted.
 ///   @param Grid is the StringGrid to change
 ///   @param Row is the index of the row to delete, or -1 to delete the current row
 ///   @returns true, if the row was deleted </summary>
-function TStringGrid_DeleteRow(_Grid: TStringGrid; _Row: integer = -1): boolean;
+function TStringGrid_DeleteRow(_Grid: TStringGrid; _Row: Integer = -1): Boolean;
 
 ///<summary> inserts a row at the given index into the string grid and moves all rows below it down by one.
 ///          @param Grid is the StringGrid to change
 ///          @param Row is the index of the row to insert, or -1 to insert at the current row
 ///          @returns the inserted row index or -1 if the row cannot be inserted </summary>
-function TStringGrid_InsertRow(_Grid: TStringGrid; _Row: integer = -1): integer;
+function TStringGrid_InsertRow(_Grid: TStringGrid; _Row: Integer = -1): Integer;
 
 ///<summary> Appends a row to the string grid and returns the index of the new row </summary>
-function TStringGrid_AppendRow(_Grid: TStringGrid): integer;
+function TStringGrid_AppendRow(_Grid: TStringGrid): Integer;
 
 ///<summary> Tries to convert the grid cell to a double, if an error occurs, it raises
 ///          an exception and optionally focuses the cell.
@@ -203,7 +203,7 @@
 ///                           if it does not contain a valid value
 ///          @returns the cell's content as a double
 ///          @raises EConvertError if the cell's content could not be converted </summary>
-function TStringGrid_CellToDouble(_grid: TStringGrid; _Col, _Row: integer; _FocusCell: boolean = True): double;
+function TStringGrid_CellToDouble(_grid: TStringGrid; _Col, _Row: Integer; _FocusCell: Boolean = True): Double;
 
 ///<summary> Tries to convert the grid cell to an integer, if an error occurs, it raises
 ///          an exception and optionally focuses the cell.
@@ -214,16 +214,16 @@
 ///                           if it does not contain a valid value
 ///          @returns the cell's content as an integer
 ///          @raises EConvertError if the cell's content could not be converted </summary>
-function TStringGrid_CellToInt(_grid: TStringGrid; _Col, _Row: integer; _FocusCell: boolean = True): integer;
+function TStringGrid_CellToInt(_grid: TStringGrid; _Col, _Row: Integer; _FocusCell: Boolean = True): Integer;
 
 ///<summary> Deletes the top lines of the memo so it only contains Retain lines
 ///          @param Memo is the memo to work on
 ///          @param Retain is the number of lines to retain </summary>
-procedure TMemo_DeleteTopLines(_Memo: TMemo; _Retain: integer);
+procedure TMemo_DeleteTopLines(_Memo: TMemo; _Retain: Integer);
 
 ///<summary> Gets the cursor position (actually the start of the selection) of the memo </summary>
-function TMemo_GetCursorPos(_Memo: TMemo): integer;
-procedure TMemo_SetCursorPos(_Memo: TMemo; _CharIdx: integer);
+function TMemo_GetCursorPos(_Memo: TMemo): Integer;
+procedure TMemo_SetCursorPos(_Memo: TMemo; _CharIdx: Integer);
 procedure TMemo_ScrollToCursorPos(_Memo: TMemo);
 
 ///<summary> Scrolls the memo to the end </summary>
@@ -239,25 +239,33 @@
 ///                              if it does not contain a valid value or not
 ///          @returns the controls content as a double
 ///          @raises EConvertError if the controls content could not be converted </summary>
-function TEdit_TextToDouble(_ed: TCustomEdit; _FocusControl: boolean = True): double;
+function TEdit_TextToDouble(_ed: TCustomEdit; _FocusControl: Boolean = True): Double;
 
 ///<summary> Tries to convert the edit control text to a double, if an error occurs, it changes it's
 ///          color to ErrColor and returns false, otherwise it changes the color to OkColor and
 ///          returns true. </summary>
-function TEdit_TryTextToDouble(_ed: TEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean; overload;
-function TEdit_TryTextToDouble(_ed: TEdit; out _Value: double; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean; overload;
+function TEdit_TryTextToDouble(_ed: TEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
+function TEdit_TryTextToDouble(_ed: TEdit; out _Value: Double; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
 
-function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: extended;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean; overload;
-function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: double;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean; overload;
+function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: Extended;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
+function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: Double;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
 function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: single;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean; overload;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
 
-function TEdit_IsTextFloat(_ed: TCustomEdit; _MinValue, _MaxValue: extended;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean; overload;
-function TEdit_IsTextFloat(_ed: TCustomEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean; overload;
+function TEdit_IsTextFloat(_ed: TCustomEdit; _MinValue, _MaxValue: Extended;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
+function TEdit_IsTextFloat(_ed: TCustomEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
 
+function TEdit_TryTextToInt(_ed: TEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
+function TEdit_TryTextToInt(_ed: TCustomEdit; out _Value: Integer;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
+
+function TEdit_IsTextInt(_ed: TCustomEdit; _MinValue, _MaxValue: Integer;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
+function TEdit_IsTextInt(_ed: TCustomEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean; overload;
+
 ///<summary> Tries to convert the edit control text to an integer, if an error occurs, it raises
 ///          an exception and optionally focuses the control.
 ///          @param ed is the edit control
@@ -265,14 +273,14 @@
 ///                              if it does not contain a valid value
 ///          @returns the controls content as an integer
 ///          @raises EConvertError if the controls content could not be converted </summary>
-function TEdit_TextToInt(_ed: TCustomEdit; _FocusControl: boolean = True): integer; overload;
-function TEdit_TextToInt(_ed: TLabeledEdit; _FocusControl: boolean = True): integer; overload;
+function TEdit_TextToInt(_ed: TCustomEdit; _FocusControl: Boolean = True): Integer; overload;
+function TEdit_TextToInt(_ed: TLabeledEdit; _FocusControl: Boolean = True): Integer; overload;
 
 ///<summary> returns the contents of the tree view as a string with indentations
 ///          @param Tree is the TTreeView to process
 ///          @param Indentation is the number of spaces for indentation
 ///          @param Marker is a marker character to use for each item, #0 for no marker </summary>
-function TTreeView_GetAsText(_Tree: TTreeView; _Indentation: integer = 2; _Marker: char = #0): string;
+function TTreeView_GetAsText(_Tree: TTreeView; _Indentation: Integer = 2; _Marker: char = #0): string;
 
 ///<summary> adds a new TTabSheet with the given Caption to the PageControl and returns it </summary>
 function TPageControl_AddTabSheet(_PageControl: TPageControl; const _Caption: string): TTabSheet;
@@ -287,8 +295,8 @@
 ///         @param TabIndex is the index of the tab to draw
 ///         @param Rect is a TRect giving the drawing area
 ///         @param Active is a boolean that is true if the Tab is currently active </summary>
-procedure TPageControl_DrawTab(_PageControl: TPageControl; _TabIndex: integer;
-  const _Rect: TRect; _Active: boolean);
+procedure TPageControl_DrawTab(_PageControl: TPageControl; _TabIndex: Integer;
+  const _Rect: TRect; _Active: Boolean);
 
 ///<summary> Draws the tab text for a TTabControl as horizontal text, useful, if you
 ///          want to have the tabs on the left or right but don't want vertical text.
@@ -300,18 +308,19 @@
 ///         @param TabIndex is the index of the tab to draw
 ///         @param Rect is a TRect giving the drawing area
 ///         @param Active is a boolean that is true if the Tab is currently active </summary>
-procedure TTabControl_DrawTab(_TabControl: TTabControl; _TabIndex: integer;
-  const _Rect: TRect; _Active: boolean);
+procedure TTabControl_DrawTab(_TabControl: TTabControl; _TabIndex: Integer;
+  const _Rect: TRect; _Active: Boolean);
 
 ///<summary> Sets a TTabControl's tab width based on the text it displays, usefull
 ///          to display horizontal text in tabs on the left or right hand side </summary>
-procedure TTabControl_AdjustTabWidth(_TabControl: TTabControl; _Form: TForm; _MinWidth: integer = 80);
+procedure TTabControl_AdjustTabWidth(_TabControl: TTabControl; _Form: TForm; _MinWidth: Integer = 80);
 
 ///<summary> Gets the object associated with the currently selected tab
 ///          @param TabControl is the TTabControl to work on
 ///          @param Obj is the object of the selected tab, only valid if Result=true
 ///          @returns true, if TabIndex <> -1 </summary>
-function TTabControl_GetSelectedObject(_TabControl: TTabControl; out _Obj: pointer): boolean;
+function TTabControl_GetSelectedObject(_TabControl: TTabControl; out _Obj: pointer): Boolean; overload;
+function TTabControl_GetSelectedObject(_TabControl: TTabControl; out _Idx: Integer; out _Obj: pointer): Boolean; overload;
 
 ///<summary> Enables longer SimpleText (longer than 127 characters)
 ///          Call once to enable. Works, by adding a single panel with owner drawing and
@@ -328,7 +337,7 @@
 //           from the status bar's OnClick, OnMouseDown or OnMouseUp event handlers
 //           If the status bar does not have any panels (e.g. SimplePanel=true), this function
 //           will return 0.
-function TStatusBar_GetClickedPanel(_sb: TStatusBar): integer;
+function TStatusBar_GetClickedPanel(_sb: TStatusBar): Integer;
 
 type
   ///<summary> Interposer class for TStatusBar to allow longer than 127 characters in SimpleText </summary>
@@ -355,24 +364,24 @@
 ///          caption to reflect this
 ///          @param Control is the TControl to change
 ///          @param Enabled is a boolean with the new value for the Enabled property. </summary>
-procedure TControl_SetEnabled(_Control: TControl; _Enabled: boolean);
-procedure SetControlEnabled(_Control: TControl; _Enabled: boolean); deprecated; // use TControl_SetEnabled instead
+procedure TControl_SetEnabled(_Control: TControl; _Enabled: Boolean);
+procedure SetControlEnabled(_Control: TControl; _Enabled: Boolean); deprecated; // use TControl_SetEnabled instead
 
 ///<summary> sets the with of a ComboBox's dropdown  in pixels </summary>
-procedure TComboBox_SetDropdownWidth(_cmb: TCustomCombobox; _Pixels: integer);
+procedure TComboBox_SetDropdownWidth(_cmb: TCustomCombobox; _Pixels: Integer);
 
 ///<summary> Selects the entry in a combobox that has an object pointer matching Value
 ///          @param cmb is the TCustomCombobox (descendant) to select
 ///          @param Value is the desired object value
 ///          @returns true, if the value could be found, false otherwise </summary>
-function TComboBox_SelectByObject(_cmb: TCustomCombobox; _Value: pointer): boolean;
+function TComboBox_SelectByObject(_cmb: TCustomCombobox; _Value: pointer): Boolean;
 
 ///<summary> Gets the string of a combobox entry that has an object pointer matching Obj
 ///          @param cmb is the TCustomCombobox (descendant) to select
 ///          @param Obj is the desired object value
 ///          @param s is the string of the combobox entry, only valid if the function returns true
 ///          @returns true, if the object could be found, false otherwise </summary>
-function TComboBox_GetObjectCaption(_cmb: TCustomCombobox; _Obj: pointer; out _s: string): boolean;
+function TComboBox_GetObjectCaption(_cmb: TCustomCombobox; _Obj: pointer; out _s: string): Boolean;
 
 ///<summary> Gets the object pointer of the selected combobox item
 ///          @param cmb is the TCustomCombobox (descendant) to read from
@@ -382,9 +391,9 @@
 ///          @param FocusControl is a boolean which determines whether to focus the control
 ///                              if it does not contain a valid value, default = false
 ///          @returns true, if these out parameters are valid </summary>
-function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Obj: pointer; _FocusControl: boolean = False): boolean; overload; inline;
-function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Idx: integer;
-  out _Obj: pointer; _FocusControl: boolean = False): boolean; overload;
+function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Obj: pointer; _FocusControl: Boolean = False): Boolean; overload; inline;
+function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Idx: Integer;
+  out _Obj: pointer; _FocusControl: Boolean = False): Boolean; overload;
 
 ///<summary> Gets the caption of the selected combobox item
 ///          @param cmb is the TCustomCombobox (descendant) to read from
@@ -393,29 +402,29 @@
 ///                              if it does not contain a valid value, default = false
 ///          @returns true, if an item was selected </summary>
 function TComboBox_GetSelected(_cmb: TCustomComboBox; out _Item: string;
-  _FocusControl: boolean = False): boolean; overload;
+  _FocusControl: Boolean = False): Boolean; overload;
 function TComboBox_GetSelected(_cmb: TCustomComboBox): string; overload;
 
-function TComboBox_IsSelected(_cmb: TCustomComboBox; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TComboBox_IsSelected(_cmb: TCustomComboBox; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 
 ///<summary> Selects the item if it is in the list and returns the new ItemIndex
 ///          @param cmb is the TCustomCombobox (descendant) to use
 ///          @param Item is the item to select
 ///          @param DefaultIdx is the ItemIndex to use if no item matches.
 ///          @returns the index of the newly selected item or -1 if it doesn't exist </summary>
-function TComboBox_Select(_cmb: TCustomComboBox; const _Item: string; _DefaultIdx: integer = -1): integer;
+function TComboBox_Select(_cmb: TCustomComboBox; const _Item: string; _DefaultIdx: Integer = -1): Integer;
 
 ///<summary> Calls the protected Change method of the combobox </summary>
 procedure TComboBox_Change(_cmb: TCustomCombo);
 
 ///<summary> Selects an item (or no Item, if Idx = -1) without triggering an OnChange event
 ///          (I am not even sure whether setting the item index always triggers an OnChange event.) </summary>
-procedure TComboBox_SelectWithoutChangeEvent(_cmb: TComboBox; _Idx: integer);
+procedure TComboBox_SelectWithoutChangeEvent(_cmb: TComboBox; _Idx: Integer);
 
 ///<summary> Sets the control to readonly by adding a TPanel as parent and disable it. Note that this does
 ///          not grey out the control as the Enabled property would.
 ///          This is meant for controls that do not have a readonly property like TComboBox or TCheckBox. </summary>
-procedure TControl_SetReadonly(_ctrl: TControl; _ReadOnly: boolean);
+procedure TControl_SetReadonly(_ctrl: TControl; _ReadOnly: Boolean);
 
 ///<summary> Gets the object pointer of the selected listbox item
 ///          @param lst is the TCustomListbox (descendant) to read from
@@ -423,7 +432,7 @@
 ///          @param Obj is the value of the object pointer of the selected item, only valid
 ///                     if the function returns true
 ///          @returns true, if out parameters are valid </summary>
-function TListBox_GetSelectedObject(_lst: TCustomListbox; out _Idx: integer; out _Obj: pointer): boolean;
+function TListBox_GetSelectedObject(_lst: TCustomListbox; out _Idx: Integer; out _Obj: pointer): Boolean;
 
 ///<summary> Gets the caption of the selected listbox item
 ///          @param cmb is the TCustomListbox (descendant) to read from
@@ -432,29 +441,30 @@
 ///                              if it does not contain a valid value, default = false
 ///          @returns true, if an item was selected </summary>
 function TListBox_GetSelected(_lb: TCustomListBox; out _Item: string;
-  _FocusControl: boolean = False): boolean; overload;
+  _FocusControl: Boolean = False): Boolean; overload;
 function TListBox_GetSelected(_lb: TCustomListBox): string; overload;
+function TListBox_GetSelected(_lb: TCustomListBox; out _Idx: Integer; out _Item: string): Boolean; overload;
 
 ///<summary> @Returns the number of selected items in the ListBox
 ///          @param Selected will contain the selected items as well as the
 ///                          associated objects. May be passed as NIL if only the count
 ///                          is required. </summary>
-function TListBox_GetSelected(_lb: TCustomListBox; _Selected: TStrings): integer; overload;
+function TListBox_GetSelected(_lb: TCustomListBox; _Selected: TStrings): Integer; overload;
 
 ///<summary> Selects the item if it is in the list and returns the new ItemIndex
 ///          @param lb is the TCustomListbox (descendant) to use
 ///          @param Item is the item to select
 ///          @param DefaultIdx is the ItemIndex to use if no item matches.
 ///          @returns the index of the newly selected item or -1 if it doesn't exist </summary>
-function TListBox_Select(_lb: TCustomListBox; const _Item: string; _DefaultIdx: integer = -1): integer;
+function TListBox_Select(_lb: TCustomListBox; const _Item: string; _DefaultIdx: Integer = -1): Integer;
 
 ///<summary> Deletes the selected listbox item
 ///          @param lst is the TCustomListbox (descendant) to read from
 ///          @param Idx is the listbox's ItemIndex, only valid if the function returns true
 ///   @returns true, if these values are valid </summary>
-function TListBox_DeleteSelected(_lst: TCustomListbox; out _Idx: integer): boolean; overload;
-function TListBox_DeleteSelected(_lst: TCustomListbox): boolean; overload;
-function TListBox_DeleteSelected(_lst: TCustomListBox; out _s: string): boolean; overload;
+function TListBox_DeleteSelected(_lst: TCustomListbox; out _Idx: Integer): Boolean; overload;
+function TListBox_DeleteSelected(_lst: TCustomListbox): Boolean; overload;
+function TListBox_DeleteSelected(_lst: TCustomListBox; out _s: string): Boolean; overload;
 
 procedure TListBox_UnselectAll(_lb: TCustomListbox);
 
@@ -462,24 +472,24 @@
 procedure TListbox_ClearWithObjects(_lst: TCustomListBox);
 
 ///<summary> Returns the nunber of items that are checked </summary>
-function TCheckListBox_GetCheckedCount(_clb: TCheckListBox): integer;
+function TCheckListBox_GetCheckedCount(_clb: TCheckListBox): Integer;
 procedure TCheckListBox_DeleteDisabled(_clb: TCheckListBox);
-procedure TCheckListBox_InvertCheckmarks(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
+procedure TCheckListBox_InvertCheckmarks(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
 procedure TCheckListBox_UncheckAll(_clb: TCheckListBox);
-procedure TCheckListBox_CheckAll(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
+procedure TCheckListBox_CheckAll(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
 ///<summary> Returns the checked items and the objects associated in them
 ///          @param clb is the TCheckListBox
 ///          @param Checked is a TStrings to which the selected items and objects are to be added
 ///          @param IncludeDisabled determines whether the disabled items should also be returned if they are checked
 ///          @returns the number of Items in Checked </summary>
-function TCheckListBox_GetChecked(_clb: TCheckListBox; _Checked: TStrings; _IncludeDisabled: boolean = False): integer; overload;
-function TCheckListBox_GetChecked(_clb: TCheckListbox; _IncludeDisabled: boolean = False): string; overload;
+function TCheckListBox_GetChecked(_clb: TCheckListBox; _Checked: TStrings; _IncludeDisabled: Boolean = False): Integer; overload;
+function TCheckListBox_GetChecked(_clb: TCheckListbox; _IncludeDisabled: Boolean = False): string; overload;
 ///<summary> Returns the objects associated with the checked items
 ///          @param clb is the TCheckListBox
 ///          @param Objects is a TList to which the selected objects are to be added
 ///          @param IncludeDisabled determines whether the disabled items should also be returned if they are checked
 ///          @returns the number of Items in Objects </summary>
-function TCheckListBox_GetCheckedObjects(_clb: TCheckListBox; _Objects: TList; _IncludeDisabled: boolean = False): integer;
+function TCheckListBox_GetCheckedObjects(_clb: TCheckListBox; _Objects: TList; _IncludeDisabled: Boolean = False): Integer;
 ///<summary> Checks all items contained in the Checked string list
 ///          @param clb is the TCheckListBox to modify
 ///          @param Checked is a string list containing the items to be checked
@@ -489,13 +499,13 @@
 ///                               event should be suppressed.
 ///          @returns the number of items that have been checked. </summary>
 function TCheckListBox_SetChecked(_clb: TCheckListBox; _Checked: TStrings;
-  _UncheckOthers: boolean = True; _SuppressClick: boolean = False): integer;
+  _UncheckOthers: Boolean = True; _SuppressClick: Boolean = False): Integer;
 
 ///<summary> sets the checked property without triggering an OnClickCheck event </summary>
-procedure TCheckListBox_SetCheckedNoClick(_clb: TCheckListBox; _Idx: integer; _Checked: boolean);
+procedure TCheckListBox_SetCheckedNoClick(_clb: TCheckListBox; _Idx: Integer; _Checked: Boolean);
 
-procedure TCheckListBox_CheckSelected(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
-procedure TCheckListBox_UncheckSelected(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
+procedure TCheckListBox_CheckSelected(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
+procedure TCheckListBox_UncheckSelected(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
 
 ///<summary> Makes the given TCheckListBox readonly by assigning a special
 ///          method to its OnClickCheck event or makes it ReadWrite again
@@ -504,7 +514,7 @@
 ///          @param ChangeColor determines whether to change the background color
 ///                             to clWindow (ReadWrite) and clBtnFace (ReadOnly)
 ///                             respectively. Defaults to true </summary>
-procedure TCheckListBox_Readonly(_clb: TCheckListBox; _ReadOnly: boolean; _ChangeColor: boolean = True);
+procedure TCheckListBox_Readonly(_clb: TCheckListBox; _ReadOnly: Boolean; _ChangeColor: Boolean = True);
 
 ///<summary> Gets the caption of the given or selected item in the RadioGroup
 ///          @param rg is the TCustomRadioGroup descendant to read
@@ -514,12 +524,12 @@
 ///          @param Idx is the item index to read, defaults to -1 meaning 'selected item'
 ///          @returns true, if the caption could be read </summary>
 function TRadioGroup_GetItemCaption(_rg: TCustomRadioGroup;
-  out _Caption: string; _Idx: integer = -1): boolean;
+  out _Caption: string; _Idx: Integer = -1): Boolean;
 
 ///<summary> Selects the item in the radio group with the given caption,
 ///          returns the item's index or -1 if no item matched.
 ///          Comparison is case insensitive </summary>
-function TRadioGroup_Select(_rg: TCustomRadioGroup; const _Item: string; _DefaultIdx: integer = -1): integer;
+function TRadioGroup_Select(_rg: TCustomRadioGroup; const _Item: string; _DefaultIdx: Integer = -1): Integer;
 
 ///<summary> Gets the object pointer of the selected RadioGroup item
 ///          @param cmb is the TCustomListbox (descendant) to read from
@@ -527,7 +537,7 @@
 ///          @param Obj is the value of the object pointer of the selected item, only valid
 ///                     if the function returns true
 ///          @returns true, if the out parameters are valid </summary>
-function TRadioGroup_GetSelectedObject(_rg: TCustomRadioGroup; out _Idx: integer; out _Obj: pointer): boolean;
+function TRadioGroup_GetSelectedObject(_rg: TCustomRadioGroup; out _Idx: Integer; out _Obj: pointer): Boolean;
 
 ///<summary> Writes a TPicture object to a String. The Format is
 ///          <pictureformat>#26<picturedata> </summary>
@@ -548,13 +558,13 @@
 ///          @param Re is a TRichEdit
 ///          @param Row is the row number (0 based)
 ///          @returns the character offset (0 based) of the first character of the row </summary>
-function TRichEdit_RowToCharIndex(_Re: TRichEdit; _Row: integer): integer;
+function TRichEdit_RowToCharIndex(_Re: TRichEdit; _Row: Integer): Integer;
 
 ///<summary> Returns the row which contains the given character index </summary>
-function TRichEdit_CharIndexToRow(_Re: TRichEdit; _Idx: integer): integer;
+function TRichEdit_CharIndexToRow(_Re: TRichEdit; _Idx: Integer): Integer;
 
 ///<summary> Returns the current row number (0 based) of the RichEdit </summary>
-function TRichEdit_GetCurrentRow(_Re: TRichEdit): integer;
+function TRichEdit_GetCurrentRow(_Re: TRichEdit): Integer;
 
 ///<summary> Scrolls the rich edit to the current caret position </summary>
 procedure TRichEdit_ScrollToCaret(_Re: TRichEdit);
@@ -566,15 +576,15 @@
 ///          with 16 pixels distance from the upper and 8 pixels from the left border.
 ///          It is assumed that the control already has the correct x position, only
 ///          Top will be adjusted. </summary>
-function AddLabeledControl(_Idx: integer; const _Caption: string; _ctrl: TControl): TLabel;
+function AddLabeledControl(_Idx: Integer; const _Caption: string; _ctrl: TControl): TLabel;
 
 ///<summary> Calculates the height for writing a Text on a control </summary>
-function CalcTextHeight(_Ctrl: TWinControl; const _Text: string; _Width: integer = -1): integer; overload;
-function CalcTextHeight(_Ctrl: TGraphicControl; const _Text: string; _Width: integer = -1): integer; overload;
+function CalcTextHeight(_Ctrl: TWinControl; const _Text: string; _Width: Integer = -1): Integer; overload;
+function CalcTextHeight(_Ctrl: TGraphicControl; const _Text: string; _Width: Integer = -1): Integer; overload;
 
 ///<summary> I don't quite remember what this is supposed to do and where it is used,
 ///          Please, if you find a call to this function somewhere, tell me. -- twm </summary>
-function TStringGrid_IsScrollBarVisible(_Grid: TCustomGrid; _Code: integer): boolean;
+function TStringGrid_IsScrollBarVisible(_Grid: TCustomGrid; _Code: Integer): Boolean;
 
 ///<summary> Returns the path to the application's executable including the trailing backslash </summary>
 function GetApplicationPath: string; deprecated; // use TApplication_GetExePath instead
@@ -583,7 +593,7 @@
 procedure TControl_Center(_Child: TControl; _Parent: TControl);
 
 ///<summary> sets the Checked property without firing an OnClick event </summary>
-procedure TCheckBox_SetCheckedNoOnClick(_Chk: TCustomCheckBox; _Checked: boolean);
+procedure TCheckBox_SetCheckedNoOnClick(_Chk: TCustomCheckBox; _Checked: Boolean);
 
 ///<summary> centers a form on the given point, but makes sure the form is fully visible </summary>
 procedure TForm_CenterOn(_frm: TForm; _Center: TPoint); overload;
@@ -591,14 +601,14 @@
 procedure TForm_CenterOn(_frm: TForm; _Center: TWinControl); overload;
 
 ///<summary> tries to focus the given control, returns false if that's not possible </summary>
-function TWinControl_SetFocus(_Ctrl: TWinControl): boolean;
+function TWinControl_SetFocus(_Ctrl: TWinControl): Boolean;
 
 ///<summary> returns the full path of the executable (without the filename but including
 ///          a backslash) </summary>
 function TApplication_GetExePath: string;
 
 ///<summary> returns true, if the application's executable contains version information </summary>
-function TApplication_HasVersionInfo: boolean;
+function TApplication_HasVersionInfo: Boolean;
 
 ///<summary> switches off "Windows Ghosting" in Win 2000 and XP
 ///          This is a workaround for the bug that modal forms sometimes aren't modal in W2K and XP.
@@ -619,24 +629,24 @@
 
 ///<summary> Unselect all items, if WithSelectEvents is false, OnSelectItem events will be temporarily
 ///          disabled. </summary>
-procedure TListView_UnselectAll(_lv: TListView; _WithSelectEvents: boolean = True);
+procedure TListView_UnselectAll(_lv: TListView; _WithSelectEvents: Boolean = True);
 
 ///<summary> Returns the number of selected items in the ListView </summary>
-function TListView_GetSelectedCount(_lv: TListView): integer;
+function TListView_GetSelectedCount(_lv: TListView): Integer;
 
-function TListView_GetSelected(_Lv: TListView; out _Idx: integer): boolean; overload;
-function TListView_GetSelected(_lv: TListView; out _Item: TListItem): boolean; overload;
+function TListView_GetSelected(_Lv: TListView; out _Idx: Integer): Boolean; overload;
+function TListView_GetSelected(_lv: TListView; out _Item: TListItem): Boolean; overload;
 
 ///<summary> Returns the first item in the radio group with the caption ItemText </summary>
 function TRadioGroup_GetButton(_rg: TRadioGroup; _ItemText: string): TRadioButton; overload;
 ///<summary> Returns the ItemIdx'th item in the radio group </summary>
-function TRadioGroup_GetButton(_rg: TRadioGroup; _ItemIdx: integer): TRadioButton; overload;
+function TRadioGroup_GetButton(_rg: TRadioGroup; _ItemIdx: Integer): TRadioButton; overload;
 
 ///<summary> Returns the Checked value of a TCheckbox or TRadioButton (which both descend from TButtonControl) </summary>
-function TButtonControl_GetChecked(_bctrl: TButtonControl): boolean;
+function TButtonControl_GetChecked(_bctrl: TButtonControl): Boolean;
 
 ///<summary> Sets the Checked value of a TCheckbox or TRadioButton (which both descend from TButtonControl) </summary>
-procedure TButtonControl_SetChecked(_bctrl: TButtonControl; _Value: boolean);
+procedure TButtonControl_SetChecked(_bctrl: TButtonControl; _Value: Boolean);
 
 ///<summary> Sets the Caption value of a TCheckbox or TRadioButton (which both descend from TButtonControl) </summary>
 procedure TButtonControl_SetCaption(_bctrl: TButtonControl; _Value: string);
@@ -649,7 +659,7 @@
 //          the function returns true. If they are different, it calls the action's Execute
 //          method and returns its result.
 //          @returns true, if Execute was called and returned true, false otherwise </summary>
-function TAction_SetCheckedExecute(_act: TCustomAction; _Checked: boolean): boolean;
+function TAction_SetCheckedExecute(_act: TCustomAction; _Checked: Boolean): Boolean;
 
 ///<summary> Sets the caption of a groupbox in the form '<prefix:><filename>' shortening the
 ///          filename in the path part using '..' so the file name itself should be visible.
@@ -683,13 +693,13 @@
   Result := dzDGetText(_s, 'dzlib');
 end;
 
-procedure TBitBtn_GlyphFromString(_btn: TBitBtn; const _GlyphStr: AnsiString; _ContainsLength: boolean = True);
+procedure TBitBtn_GlyphFromString(_btn: TBitBtn; const _GlyphStr: AnsiString; _ContainsLength: Boolean = True);
 var
   st: TMemoryStream;
   s: AnsiString;
   Buf: array of byte;
   res: Integer;
-  Size: integer;
+  Size: Integer;
 begin
   if _ContainsLength then
     s := LowerCase(Copy(_GlyphStr, 9))
@@ -715,7 +725,7 @@
   TGridHack = class(TCustomGrid);
   TDbGridHack = class(TCustomDbGrid);
 
-function TGrid_GetText(_Grid: TCustomGrid; _IncludeFixed: boolean = False): string;
+function TGrid_GetText(_Grid: TCustomGrid; _IncludeFixed: Boolean = False): string;
 var
   Selection: TGridRect;
   Grid: TGridHack;
@@ -763,7 +773,7 @@
   end;
 end;
 
-procedure TGrid_ExportToStream(_Grid: TCustomGrid; _Stream: TStream; _IncludeFixed: boolean = False);
+procedure TGrid_ExportToStream(_Grid: TCustomGrid; _Stream: TStream; _IncludeFixed: Boolean = False);
 var
   s: string;
 begin
@@ -771,7 +781,7 @@
   TStream_WriteStringLn(_Stream, s);
 end;
 
-procedure TGrid_ExportToFile(_Grid: TCustomGrid; const _Filename: string; _IncludeFixed: boolean = False);
+procedure TGrid_ExportToFile(_Grid: TCustomGrid; const _Filename: string; _IncludeFixed: Boolean = False);
 var
   t: Text;
   s: string;
@@ -786,7 +796,7 @@
   end;
 end;
 
-function TGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: integer): integer;
+function TGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: Integer): Integer;
 var
   Grid: TGridHack;
 begin
@@ -798,7 +808,7 @@
   Grid.RowCount := Result;
 end;
 
-function TGrid_SetColCount(_Grid: TCustomGrid; _ColCount: integer): integer;
+function TGrid_SetColCount(_Grid: TCustomGrid; _ColCount: Integer): Integer;
 var
   Grid: TGridHack;
 begin
@@ -810,7 +820,7 @@
   Grid.ColCount := Result;
 end;
 
-function TGrid_SetNonfixedColCount(_Grid: TCustomGrid; _ColCount: integer): integer;
+function TGrid_SetNonfixedColCount(_Grid: TCustomGrid; _ColCount: Integer): Integer;
 var
   Grid: TGridHack;
 begin
@@ -819,7 +829,7 @@
   Grid.ColCount := Result;
 end;
 
-function TGrid_SetNonfixedRowCount(_Grid: TCustomGrid; _RowCount: integer): integer;
+function TGrid_SetNonfixedRowCount(_Grid: TCustomGrid; _RowCount: Integer): Integer;
 var
   Grid: TGridHack;
 begin
@@ -828,17 +838,17 @@
   Grid.RowCount := Result;
 end;
 
-procedure TStringGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: integer);
+procedure TStringGrid_SetRowCount(_Grid: TCustomGrid; _RowCount: Integer);
 begin
   TGrid_SetRowCount(_Grid, _RowCount);
 end;
 
-procedure TStringGrid_SetColCount(_Grid: TCustomGrid; _ColCount: integer);
+procedure TStringGrid_SetColCount(_Grid: TCustomGrid; _ColCount: Integer);
 begin
   TGrid_SetColCount(_Grid, _ColCount);
 end;
 
-procedure TGrid_SetRowNoClick(_Grid: TCustomGrid; _Row: integer);
+procedure TGrid_SetRowNoClick(_Grid: TCustomGrid; _Row: Integer);
 var
   Event: TNotifyEvent;
 var
@@ -861,24 +871,24 @@
 
 procedure TStringGrid_Clear(_Grid: TStringGrid);
 var
-  c: integer;
+  c: Integer;
 begin
   _Grid.RowCount := _Grid.FixedRows + 1;
   for c := _Grid.FixedCols to _Grid.ColCount - 1 do
     _Grid.Cells[c, _Grid.FixedRows] := '';
 end;
 
-procedure TStringGrid_SetNonfixedCell(_Grid: TStringGrid; _col, _row: integer; const _Text: string);
+procedure TStringGrid_SetNonfixedCell(_Grid: TStringGrid; _col, _row: Integer; const _Text: string);
 begin
   _Grid.Cells[_col + _Grid.FixedCols, _row + _Grid.FixedRows] := _Text;
 end;
 
-function TStringGrid_GetNonfixedCell(_Grid: TStringGrid; _col, _row: integer): string;
+function TStringGrid_GetNonfixedCell(_Grid: TStringGrid; _col, _row: Integer): string;
 begin
   Result := _Grid.Cells[_col + _Grid.FixedCols, _row + _Grid.FixedRows];
 end;
 
-function TStringGrid_AddColumn(_Grid: TStringGrid; const _Caption: string): integer;
+function TStringGrid_AddColumn(_Grid: TStringGrid; const _Caption: string): Integer;
 var
   i: Integer;
 begin
@@ -894,7 +904,7 @@
   _Grid.Cells[Result, 0] := _Caption;
 end;
 
-procedure TStringGrid_ScrollUp(_Grid: TStringGrid; _Top: integer = -1; _Bottom: integer = -1);
+procedure TStringGrid_ScrollUp(_Grid: TStringGrid; _Top: Integer = -1; _Bottom: Integer = -1);
 var
   r: Integer;
   c: Integer;
@@ -912,10 +922,10 @@
       _Grid.Cells[c, _Bottom] := '';
 end;
 
-function TStringGrid_DeleteRow(_Grid: TStringGrid; _Row: integer): boolean;
+function TStringGrid_DeleteRow(_Grid: TStringGrid; _Row: Integer): Boolean;
 var
-  r: integer;
-  c: integer;
+  r: Integer;
+  c: Integer;
 begin
   Assert(Assigned(_Grid));
   Assert(_Grid.FixedRows < _Grid.RowCount);
@@ -944,7 +954,7 @@
   Result := True;
 end;
 
-function TStringGrid_InsertRow(_Grid: TStringGrid; _Row: integer = -1): integer;
+function TStringGrid_InsertRow(_Grid: TStringGrid; _Row: Integer = -1): Integer;
 var
   r: Integer;
   c: Integer;
@@ -968,13 +978,13 @@
   Result := _Row;
 end;
 
-function TStringGrid_AppendRow(_Grid: TStringGrid): integer;
+function TStringGrid_AppendRow(_Grid: TStringGrid): Integer;
 begin
   Result := _Grid.RowCount;
   _Grid.RowCount := Result + 1;
 end;
 
-function TStringGrid_CellToDouble(_grid: TStringGrid; _Col, _Row: integer; _FocusCell: boolean = True): double;
+function TStringGrid_CellToDouble(_grid: TStringGrid; _Col, _Row: Integer; _FocusCell: Boolean = True): Double;
 var
   s: string;
 begin
@@ -989,7 +999,7 @@
   end;
 end;
 
-function TStringGrid_CellToInt(_grid: TStringGrid; _Col, _Row: integer; _FocusCell: boolean = True): integer;
+function TStringGrid_CellToInt(_grid: TStringGrid; _Col, _Row: Integer; _FocusCell: Boolean = True): Integer;
 var
   s: string;
 begin
@@ -1023,7 +1033,7 @@
   end;
 end;
 
-function TEdit_TextToDouble(_ed: TCustomEdit; _FocusControl: boolean = True): double;
+function TEdit_TextToDouble(_ed: TCustomEdit; _FocusControl: Boolean = True): Double;
 var
   s: string;
 begin
@@ -1036,7 +1046,7 @@
   end;
 end;
 
-function TEdit_TryTextToDouble(_ed: TEdit; out _Value: double; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TEdit_TryTextToDouble(_ed: TEdit; out _Value: Double; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
   s: string;
 begin
@@ -1048,9 +1058,9 @@
     _ed.Color := _ErrColor;
 end;
 
-function TEdit_TryTextToDouble(_ed: TEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TEdit_TryTextToDouble(_ed: TEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
-  Value: double;
+  Value: Double;
 begin
   Result := TEdit_TryTextToDouble(_ed, Value, _OkColor, _ErrColor);
 end;
@@ -1059,8 +1069,8 @@
   TEditHack = class(TCustomEdit)
   end;
 
-function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: extended;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: Extended;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
   s: string;
 begin
@@ -1072,8 +1082,8 @@
     TEditHack(_ed).Color := _ErrColor;
 end;
 
-function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: double;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: Double;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
   s: string;
 begin
@@ -1086,7 +1096,7 @@
 end;
 
 function TEdit_TryTextToFloat(_ed: TCustomEdit; out _Value: single;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
   s: string;
 begin
@@ -1098,8 +1108,8 @@
     TEditHack(_ed).Color := _ErrColor;
 end;
 
-function TEdit_IsTextFloat(_ed: TCustomEdit; _MinValue, _MaxValue: extended;
-  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TEdit_IsTextFloat(_ed: TCustomEdit; _MinValue, _MaxValue: Extended;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
   Value: Extended;
 begin
@@ -1114,18 +1124,60 @@
     TEditHack(_ed).Color := _ErrColor;
 end;
 
-function TEdit_IsTextFloat(_ed: TCustomEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TEdit_IsTextFloat(_ed: TCustomEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
   Value: Extended;
 begin
   Result := TEdit_TryTextToFloat(_ed, Value, _OkColor, _ErrColor);
 end;
 
-function TEdit_TextToInt(_ed: TCustomEdit; _FocusControl: boolean = True): integer;
+function TEdit_IsTextInt(_ed: TCustomEdit; _MinValue, _MaxValue: Integer;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 var
+  Value: Integer;
+begin
+  Result := TEdit_TryTextToInt(_ed, Value, _OkColor, _ErrColor);
+  if not Result then
+    exit;
+  Result := (_MinValue < Value) and (Value < _MaxValue);
+  if Result then
+    TEditHack(_ed).Color := _OkColor
+  else
+    TEditHack(_ed).Color := _ErrColor;
+end;
+
+function TEdit_IsTextInt(_ed: TCustomEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
+var
+  Value: Integer;
+begin
+  Result := TEdit_TryTextToInt(_ed, Value, _OkColor, _ErrColor);
+end;
+
+function TEdit_TryTextToInt(_ed: TCustomEdit; out _Value: Integer;
+  _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
+var
   s: string;
 begin
   s := _ed.Text;
+  Result := TryStrToInt(s, _Value);
+  if Result then
+    TEditHack(_ed).Color := _OkColor
+  else
+    TEditHack(_ed).Color := _ErrColor;
+end;
+
+function TEdit_TryTextToInt(_ed: TEdit; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
+var
+  Value: Integer;
+begin
+  Result := TEdit_TryTextToInt(_ed, Value, _OkColor, _ErrColor);
+end;
+
+function TEdit_TextToInt(_ed: TCustomEdit; _FocusControl: Boolean = True): Integer;
+var
+  s: string;
+begin
+  s := _ed.Text;
   if not TryStrToInt(s, Result) then begin
     if _FocusControl then begin
       _ed.SetFocus;
@@ -1134,7 +1186,7 @@
   end;
 end;
 
-function TEdit_TextToInt(_ed: TLabeledEdit; _FocusControl: boolean = True): integer;
+function TEdit_TextToInt(_ed: TLabeledEdit; _FocusControl: Boolean = True): Integer;
 var
   s: string;
 begin
@@ -1147,9 +1199,9 @@
   end;
 end;
 
-function TTreeView_GetAsText(_Tree: TTreeView; _Indentation: integer = 2; _Marker: char = #0): string;
+function TTreeView_GetAsText(_Tree: TTreeView; _Indentation: Integer = 2; _Marker: char = #0): string;
 var
-  Level: integer;
+  Level: Integer;
   Marker: string;
 
   function GetSubnodes(_tn: TTreeNode): string;
@@ -1180,9 +1232,9 @@
   Result := GetSubnodes(_Tree.Items.GetFirstNode);
 end;
 
-function ArrayContains(_Element: integer; const _Arr: array of integer): boolean;
+function ArrayContains(_Element: Integer; const _Arr: array of Integer): Boolean;
 var
-  i: integer;
+  i: Integer;
 begin
   Result := False;
   for i := low(_Arr) to High(_Arr) do begin
@@ -1192,9 +1244,9 @@
   end;
 end;
 
-procedure HandleRow(_Grid: TGridHack; _Col, _Row: integer; var _MinWidth: integer);
+procedure HandleRow(_Grid: TGridHack; _Col, _Row: Integer; var _MinWidth: Integer);
 var
-  ColWidth: integer;
+  ColWidth: Integer;
   ColText: string;
 begin
   ColText := _Grid.GetEditText(_Col, _Row);
@@ -1213,28 +1265,28 @@
   TGrid_Resize(_Grid, _Options, [], -1);
 end;
 
-procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; _RowOffset: integer);
+procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; _RowOffset: Integer);
 begin
   TGrid_Resize(_Grid, _Options, [], _RowOffset);
 end;
 
-procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of integer);
+procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of Integer);
 begin
   TGrid_Resize(_Grid, _Options, _ConstantCols, -1);
 end;
 
-procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of integer; _RowOffset: integer);
+procedure TGrid_Resize(_Grid: TCustomGrid; _Options: TResizeOptionSet; const _ConstantCols: array of Integer; _RowOffset: Integer);
 var
-  Col, Row: integer;
+  Col, Row: Integer;
   Grid: TGridHack;
-  MinWidth: integer;
-  MinCol: integer;
-  MaxCol: integer;
-  MaxRow: integer;
-  ColWidths: array of integer;
-  FirstRow: integer;
-  SumWidths: integer;
-  Additional: integer;
+  MinWidth: Integer;
+  MinCol: Integer;
+  MaxCol: Integer;
+  MaxRow: Integer;
+  ColWidths: array of Integer;
+  FirstRow: Integer;
+  SumWidths: Integer;
+  Additional: Integer;
 begin
   Grid := TGridHack(_Grid);
   MaxCol := Grid.ColCount - 1;
@@ -1296,18 +1348,18 @@
 
 procedure TDbGrid_Resize(_Grid: TCustomDbGrid; _Options: TResizeOptionSet = []);
 var
-  Col, Row: integer;
+  Col, Row: Integer;
   Grid: TDbGridHack;
-  MinWidth: integer;
-  ColWidth: integer;
+  MinWidth: Integer;
+  ColWidth: Integer;
   ColText: string;
-  MinCol: integer;
-  MaxCol: integer;
-  MaxRow: integer;
-  ColWidths: array of integer;
-  FirstRow: integer;
-  SumWidths: integer;
-  Additional: integer;
+  MinCol: Integer;
+  MaxCol: Integer;
+  MaxRow: Integer;
+  ColWidths: array of Integer;
+  FirstRow: Integer;
+  SumWidths: Integer;
+  Additional: Integer;
   DBColumn: TColumn;
 begin
   Grid := TDbGridHack(_Grid);
@@ -1367,9 +1419,9 @@
 end;
 
 procedure DrawTab(_TabControl: TCustomTabControl; const _Caption: string;
-  const _Rect: TRect; _Active: boolean);
+  const _Rect: TRect; _Active: Boolean);
 var
-  TopOffs: integer;
+  TopOffs: Integer;
 begin
   if _Active then
     TopOffs := 4
@@ -1378,23 +1430,23 @@
   _TabControl.Canvas.TextRect(_Rect, _Rect.Left + 4, _Rect.Top + TopOffs, _Caption);
 end;
 
-procedure TPageControl_DrawTab(_PageControl: TPageControl; _TabIndex: integer;
-  const _Rect: TRect; _Active: boolean);
+procedure TPageControl_DrawTab(_PageControl: TPageControl; _TabIndex: Integer;
+  const _Rect: TRect; _Active: Boolean);
 begin
   DrawTab(_PageControl, _PageControl.Pages[_TabIndex].Caption, _Rect, _Active);
 end;
 
-procedure TTabControl_DrawTab(_TabControl: TTabControl; _TabIndex: integer;
-  const _Rect: TRect; _Active: boolean);
+procedure TTabControl_DrawTab(_TabControl: TTabControl; _TabIndex: Integer;
+  const _Rect: TRect; _Active: Boolean);
 begin
   DrawTab(_TabControl, _TabControl.Tabs[_TabIndex], _Rect, _Active);
 end;
 
-procedure TTabControl_AdjustTabWidth(_TabControl: TTabControl; _Form: TForm; _MinWidth: integer = 80);
+procedure TTabControl_AdjustTabWidth(_TabControl: TTabControl; _Form: TForm; _MinWidth: Integer = 80);
 var
-  i: integer;
-  MinWidth: integer;
-  w: integer;
+  i: Integer;
+  MinWidth: Integer;
+  w: Integer;
 begin
   MinWidth := _MinWidth;
   for i := 0 to _TabControl.Tabs.Count - 1 do begin
@@ -1413,7 +1465,7 @@
   end;
 end;
 
-function TTabControl_GetSelectedObject(_TabControl: TTabControl; out _Obj: pointer): boolean;
+function TTabControl_GetSelectedObject(_TabControl: TTabControl; out _Obj: pointer): Boolean;
 var
   Idx: Integer;
 begin
@@ -1423,6 +1475,14 @@
     _Obj := _TabControl.Tabs.Objects[Idx];
 end;
 
+function TTabControl_GetSelectedObject(_TabControl: TTabControl; out _Idx: Integer; out _Obj: pointer): Boolean;
+begin
+  _Idx := _TabControl.TabIndex;
+  Result := (_Idx <> -1);
+  if Result then
+    _Obj := _TabControl.Tabs.Objects[_Idx];
+end;
+
 type
   // Note: This class is never instantiated, only the DrawPanel method will be used
   //       without ever referencing the self pointer (which is NIL), so it should work
@@ -1462,14 +1522,14 @@
   _StatusBar.Invalidate;
 end;
 
-procedure SetControlEnabled(_Control: TControl; _Enabled: boolean);
+procedure SetControlEnabled(_Control: TControl; _Enabled: Boolean);
 begin
   TControl_SetEnabled(_Control, _Enabled);
 end;
 
-procedure TControl_SetEnabled(_Control: TControl; _Enabled: boolean);
+procedure TControl_SetEnabled(_Control: TControl; _Enabled: Boolean);
 var
-  i: integer;
+  i: Integer;
   Container: TWinControl;
   ctrl: TControl;
 begin
@@ -1487,15 +1547,15 @@
   TComboBoxHack = class(TCustomCombobox)
   end;
 
-procedure TComboBox_SetDropdownWidth(_cmb: TCustomCombobox; _Pixels: integer);
+procedure TComboBox_SetDropdownWidth(_cmb: TCustomCombobox; _Pixels: Integer);
 begin
   _cmb.HandleNeeded;
   _cmb.Perform(CB_SETDROPPEDWIDTH, _Pixels, 0);
 end;
 
-function TComboBox_SelectByObject(_cmb: TCustomCombobox; _Value: pointer): boolean;
+function TComboBox_SelectByObject(_cmb: TCustomCombobox; _Value: pointer): Boolean;
 var
-  i: integer;
+  i: Integer;
 begin
   for i := 0 to _cmb.Items.Count - 1 do begin
     Result := (_cmb.Items.Objects[i] = _Value);
@@ -1507,9 +1567,9 @@
   Result := False;
 end;
 
-function TComboBox_GetObjectCaption(_cmb: TCustomCombobox; _Obj: pointer; out _s: string): boolean;
+function TComboBox_GetObjectCaption(_cmb: TCustomCombobox; _Obj: pointer; out _s: string): Boolean;
 var
-  i: integer;
+  i: Integer;
 begin
   for i := 0 to _cmb.Items.Count - 1 do begin
     Result := (_cmb.Items.Objects[i] = _Obj);
@@ -1521,15 +1581,15 @@
   Result := False;
 end;
 
-function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Obj: pointer; _FocusControl: boolean = False): boolean;
+function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Obj: pointer; _FocusControl: Boolean = False): Boolean;
 var
-  Idx: integer;
+  Idx: Integer;
 begin
   Result := TComboBox_GetSelectedObject(_cmb, Idx, _Obj, _FocusControl);
 end;
 
-function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Idx: integer;
-  out _Obj: pointer; _FocusControl: boolean = False): boolean;
+function TComboBox_GetSelectedObject(_cmb: TCustomCombobox; out _Idx: Integer;
+  out _Obj: pointer; _FocusControl: Boolean = False): Boolean;
 begin
   _Idx := _cmb.ItemIndex;
   Result := (_Idx <> -1);
@@ -1540,9 +1600,9 @@
 end;
 
 function TComboBox_GetSelected(_cmb: TCustomComboBox; out _Item: string;
-  _FocusControl: boolean = False): boolean;
+  _FocusControl: Boolean = False): Boolean;
 var
-  Idx: integer;
+  Idx: Integer;
 begin
   Idx := _cmb.ItemIndex;
   Result := Idx <> -1;
@@ -1559,9 +1619,9 @@
 end;
 
 function TListBox_GetSelected(_lb: TCustomListBox; out _Item: string;
-  _FocusControl: boolean = False): boolean;
+  _FocusControl: Boolean = False): Boolean;
 var
-  Idx: integer;
+  Idx: Integer;
 begin
   Idx := _lb.ItemIndex;
   Result := Idx <> -1;
@@ -1577,7 +1637,15 @@
     raise EdzListBoxNoSelection(_('No item selected in listbox'));
 end;
 
-function TListBox_GetSelected(_lb: TCustomListBox; _Selected: TStrings): integer;
+function TListBox_GetSelected(_lb: TCustomListBox; out _Idx: Integer; out _Item: string): Boolean;
+begin
+  _Idx := _lb.ItemIndex;
+  Result := _Idx <> -1;
+  if Result then
+    _Item := _lb.Items[_Idx]
+end;
+
+function TListBox_GetSelected(_lb: TCustomListBox; _Selected: TStrings): Integer;
 var
   i: Integer;
 begin
@@ -1591,7 +1659,7 @@
   end;
 end;
 
-function TComboBox_IsSelected(_cmb: TCustomComboBox; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): boolean;
+function TComboBox_IsSelected(_cmb: TCustomComboBox; _OkColor: TColor = clWindow; _ErrColor: TColor = clYellow): Boolean;
 begin
   Result := (_cmb.ItemIndex <> -1);
   if Result then
@@ -1600,7 +1668,7 @@
     TComboBoxHack(_cmb).Color := _ErrColor;
 end;
 
-function TListBox_GetSelectedObject(_lst: TCustomListbox; out _Idx: integer; out _Obj: pointer): boolean;
+function TListBox_GetSelectedObject(_lst: TCustomListbox; out _Idx: Integer; out _Obj: pointer): Boolean;
 begin
   _Idx := _lst.ItemIndex;
   Result := _Idx <> -1;
@@ -1608,7 +1676,7 @@
     _Obj := _lst.Items.Objects[_Idx];
 end;
 
-function TListBox_DeleteSelected(_lst: TCustomListbox; out _Idx: integer): boolean;
+function TListBox_DeleteSelected(_lst: TCustomListbox; out _Idx: Integer): Boolean;
 begin
   _Idx := _lst.ItemIndex;
   Result := _Idx <> -1;
@@ -1616,7 +1684,7 @@
     _lst.Items.Delete(_Idx);
 end;
 
-function TListBox_DeleteSelected(_lst: TCustomListBox; out _s: string): boolean; overload;
+function TListBox_DeleteSelected(_lst: TCustomListBox; out _s: string): Boolean; overload;
 var
   Idx: Integer;
 begin
@@ -1628,9 +1696,9 @@
   end;
 end;
 
-function TListBox_DeleteSelected(_lst: TCustomListbox): boolean;
+function TListBox_DeleteSelected(_lst: TCustomListbox): Boolean;
 var
-  Idx: integer;
+  Idx: Integer;
 begin
   Result := TListBox_DeleteSelected(_lst, Idx);
 end;
@@ -1649,7 +1717,7 @@
   _lst.Items.Clear;
 end;
 
-function TCheckListBox_GetCheckedCount(_clb: TCheckListBox): integer;
+function TCheckListBox_GetCheckedCount(_clb: TCheckListBox): Integer;
 var
   i: Integer;
 begin
@@ -1659,7 +1727,7 @@
       Inc(Result);
 end;
 
-procedure TCheckListBox_CheckAll(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
+procedure TCheckListBox_CheckAll(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
 var
   i: Integer;
 begin
@@ -1675,7 +1743,7 @@
     _clb.Checked[i] := False;
 end;
 
-procedure TCheckListBox_InvertCheckmarks(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
+procedure TCheckListBox_InvertCheckmarks(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
 var
   i: Integer;
 begin
@@ -1683,7 +1751,7 @@
     _clb.Checked[i] := not _clb.Checked[i] and (_IncludeDisabled or _clb.ItemEnabled[i]);
 end;
 
-procedure TCheckListBox_CheckSelected(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
+procedure TCheckListBox_CheckSelected(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
 var
   i: Integer;
 begin
@@ -1692,7 +1760,7 @@
       _clb.Checked[i] := True;
 end;
 
-procedure TCheckListBox_UncheckSelected(_clb: TCheckListBox; _IncludeDisabled: boolean = False);
+procedure TCheckListBox_UncheckSelected(_clb: TCheckListBox; _IncludeDisabled: Boolean = False);
 var
   i: Integer;
 begin
@@ -1703,14 +1771,14 @@
 
 procedure TCheckListBox_DeleteDisabled(_clb: TCheckListBox);
 var
-  i: integer;
+  i: Integer;
 begin
   for i := _clb.Items.Count - 1 downto 0 do
     if not _clb.ItemEnabled[i] then
       _clb.Items.Delete(i);
 end;
 
-procedure TCheckListBox_SetCheckedNoClick(_clb: TCheckListBox; _Idx: integer; _Checked: boolean);
+procedure TCheckListBox_SetCheckedNoClick(_clb: TCheckListBox; _Idx: Integer; _Checked: Boolean);
 var
   Event: TNotifyEvent;
 begin
@@ -1724,10 +1792,10 @@
 end;
 
 function TCheckListBox_SetChecked(_clb: TCheckListBox; _Checked: TStrings;
-  _UncheckOthers: boolean = True; _SuppressClick: boolean = False): integer;
+  _UncheckOthers: Boolean = True; _SuppressClick: Boolean = False): Integer;
 var
-  i: integer;
-  Idx: integer;
+  i: Integer;
+  Idx: Integer;
 begin
   Result := 0;
   for i := 0 to _clb.Items.Count - 1 do begin
@@ -1747,7 +1815,7 @@
   end;
 end;
 
-function TCheckListBox_GetChecked(_clb: TCheckListBox; _Checked: TStrings; _IncludeDisabled: boolean = False): integer;
+function TCheckListBox_GetChecked(_clb: TCheckListBox; _Checked: TStrings; _IncludeDisabled: Boolean = False): Integer;
 var
   i: Integer;
 begin
@@ -1757,7 +1825,7 @@
   Result := _Checked.Count;
 end;
 
-function TCheckListBox_GetChecked(_clb: TCheckListbox; _IncludeDisabled: boolean = False): string; overload;
+function TCheckListBox_GetChecked(_clb: TCheckListbox; _IncludeDisabled: Boolean = False): string; overload;
 var
   sl: TStringList;
 begin
@@ -1770,7 +1838,7 @@
   end;
 end;
 
-function TCheckListBox_GetCheckedObjects(_clb: TCheckListBox; _Objects: TList; _IncludeDisabled: boolean = False): integer;
+function TCheckListBox_GetCheckedObjects(_clb: TCheckListBox; _Objects: TList; _IncludeDisabled: Boolean = False): Integer;
 var
   i: Integer;
 begin
@@ -1783,7 +1851,7 @@
   Result := _Objects.Count;
 end;
 
-function TComboBox_Select(_cmb: TCustomComboBox; const _Item: string; _DefaultIdx: integer = -1): integer;
+function TComboBox_Select(_cmb: TCustomComboBox; const _Item: string; _DefaultIdx: Integer = -1): Integer;
 begin
   Result := _Cmb.Items.IndexOf(_Item);
   if Result = -1 then
@@ -1800,7 +1868,7 @@
   TComboHack(_cmb).Change;
 end;
 
-procedure TComboBox_SelectWithoutChangeEvent(_cmb: TComboBox; _Idx: integer);
+procedure TComboBox_SelectWithoutChangeEvent(_cmb: TComboBox; _Idx: Integer);
 var
   Event: TNotifyEvent;
 begin
@@ -1813,7 +1881,7 @@
   end;
 end;
 
-procedure TControl_SetReadonly(_ctrl: TControl; _ReadOnly: boolean);
+procedure TControl_SetReadonly(_ctrl: TControl; _ReadOnly: Boolean);
 var
   Panel: TPanel;
   comp: TComponent;
@@ -1852,7 +1920,7 @@
   Panel.Enabled := False;
 end;
 
-function TListBox_Select(_lb: TCustomListBox; const _Item: string; _DefaultIdx: integer = -1): integer;
+function TListBox_Select(_lb: TCustomListBox; const _Item: string; _DefaultIdx: Integer = -1): Integer;
 begin
   Result := _lb.Items.IndexOf(_Item);
   if Result = -1 then
@@ -1864,7 +1932,7 @@
   TRadioGroupHack = class(TCustomRadioGroup);
 
 function TRadioGroup_GetItemCaption(_rg: TCustomRadioGroup;
-  out _Caption: string; _Idx: integer = -1): boolean;
+  out _Caption: string; _Idx: Integer = -1): Boolean;
 var
   Hack: TRadioGroupHack;
 begin
@@ -1876,7 +1944,7 @@
     _Caption := StripHotKey(Hack.Items[_Idx]);
 end;
 
-function TRadioGroup_Select(_rg: TCustomRadioGroup; const _Item: string; _DefaultIdx: integer = -1): integer;
+function TRadioGroup_Select(_rg: TCustomRadioGroup; const _Item: string; _DefaultIdx: Integer = -1): Integer;
 var
   Hack: TRadioGroupHack;
   i: Integer;
@@ -1892,7 +1960,7 @@
   Result := Hack.ItemIndex;
 end;
 
-function TRadioGroup_GetSelectedObject(_rg: TCustomRadioGroup; out _Idx: integer; out _Obj: pointer): boolean;
+function TRadioGroup_GetSelectedObject(_rg: TCustomRadioGroup; out _Idx: Integer; out _Obj: pointer): Boolean;
 var
   Hack: TRadioGroupHack;
 begin
@@ -1952,7 +2020,7 @@
   st: TStringStream;
   Klasse: string;
   Data: string;
-  p: integer;
+  p: Integer;
   GraphicClass: TGraphicClass;
   GraphicObj: TGraphic;
 begin
@@ -1977,7 +2045,7 @@
   end;
 end;
 
-function AddLabeledControl(_Idx: integer; const _Caption: string; _ctrl: TControl): TLabel;
+function AddLabeledControl(_Idx: Integer; const _Caption: string; _ctrl: TControl): TLabel;
 begin
   Result := TLabel.Create(_ctrl.Owner);
   Result.Parent := _ctrl.Parent;
@@ -1987,7 +2055,7 @@
   Result.Top := _ctrl.Top + (_ctrl.Height - Result.Height) div 2;
 end;
 
-function CalcTextHeight(_Ctrl: TWinControl; const _Text: string; _Width: integer = -1): integer;
+function CalcTextHeight(_Ctrl: TWinControl; const _Text: string; _Width: Integer = -1): Integer;
 var
   Rect: TRect;
 begin
@@ -2003,7 +2071,7 @@
   TGraphicControlHack = class(TGraphicControl)
   end;
 
-function CalcTextHeight(_Ctrl: TGraphicControl; const _Text: string; _Width: integer = -1): integer; overload;
+function CalcTextHeight(_Ctrl: TGraphicControl; const _Text: string; _Width: Integer = -1): Integer; overload;
 var
   Rect: TRect;
 begin
@@ -2017,9 +2085,9 @@
 type
   THackGrid = class(TCustomGrid);
 
-function TStringGrid_IsScrollBarVisible(_Grid: TCustomGrid; _Code: integer): boolean;
+function TStringGrid_IsScrollBarVisible(_Grid: TCustomGrid; _Code: Integer): Boolean;
 var
-  Min, Max: integer;
+  Min, Max: Integer;
   Grid: THackGrid;
 begin
   Result := False;
@@ -2039,17 +2107,17 @@
   Result := IncludeTrailingPathDelimiter(ExtractFilePath(Application.ExeName));
 end;
 
-function TRichEdit_RowToCharIndex(_Re: TRichEdit; _Row: integer): integer;
+function TRichEdit_RowToCharIndex(_Re: TRichEdit; _Row: Integer): Integer;
 begin
   Result := _Re.Perform(EM_LINEINDEX, _Row, 0);
 end;
 
-function TRichEdit_CharIndexToRow(_Re: TRichEdit; _Idx: integer): integer;
+function TRichEdit_CharIndexToRow(_Re: TRichEdit; _Idx: Integer): Integer;
 begin
   Result := _Re.Perform(EM_LINEFROMCHAR, _Idx, 0);
 end;
 
-function TRichEdit_GetCurrentRow(_Re: TRichEdit): integer;
+function TRichEdit_GetCurrentRow(_Re: TRichEdit): Integer;
 begin
   Result := TRichEdit_CharIndexToRow(_Re, _Re.SelStart);
 end;
@@ -2078,7 +2146,7 @@
   THackCheckBox = class(TCustomCheckBox)
   end;
 
-procedure TCheckBox_SetCheckedNoOnClick(_Chk: TCustomCheckBox; _Checked: boolean);
+procedure TCheckBox_SetCheckedNoOnClick(_Chk: TCustomCheckBox; _Checked: Boolean);
 var
   Chk: THackCheckBox;
 begin
@@ -2115,7 +2183,7 @@
   end;
 end;
 
-function TWinControl_SetFocus(_Ctrl: TWinControl): boolean;
+function TWinControl_SetFocus(_Ctrl: TWinControl): Boolean;
 begin
   Result := _Ctrl.CanFocus;
   if Result then
@@ -2270,7 +2338,7 @@
   Result := FileFormats;
 end;
 
-procedure TMemo_DeleteTopLines(_Memo: TMemo; _Retain: integer);
+procedure TMemo_DeleteTopLines(_Memo: TMemo; _Retain: Integer);
 const
   EmptyStr: PChar = '';
 var
@@ -2286,15 +2354,15 @@
   if (Offset < 0) or (cnt = 0) then
     Offset := SendMessage(_Memo.Handle, EM_LINELENGTH, 0, 0);
   SendMessage(_Memo.Handle, EM_SETSEL, 0, Offset);
-  SendMessage(_Memo.Handle, EM_REPLACESEL, 0, Longint(EmptyStr));
+  SendMessage(_Memo.Handle, EM_REPLACESEL, 0, LongInt(EmptyStr));
 end;
 
-function TMemo_GetCursorPos(_Memo: TMemo): integer;
+function TMemo_GetCursorPos(_Memo: TMemo): Integer;
 begin
-  SendMessage(_Memo.Handle, EM_GETSEL, integer(@Result), 0);
+  SendMessage(_Memo.Handle, EM_GETSEL, Integer(@Result), 0);
 end;
 
-procedure TMemo_SetCursorPos(_Memo: TMemo; _CharIdx: integer);
+procedure TMemo_SetCursorPos(_Memo: TMemo; _CharIdx: Integer);
 begin
   SendMessage(_Memo.Handle, EM_SETSEL, _CharIdx, _CharIdx);
   TMemo_ScrollToCursorPos(_Memo);
@@ -2318,7 +2386,7 @@
   Result := ExtractFilePath(Application.ExeName);
 end;
 
-function TApplication_HasVersionInfo: boolean;
+function TApplication_HasVersionInfo: Boolean;
 var
   Handle: THandle;
   Size: DWORD;
@@ -2392,7 +2460,7 @@
   Result := TListViewEndUpdateClass.Create(_lv);
 end;
 
-function TRadioGroup_GetButton(_rg: TRadioGroup; _ItemIdx: integer): TRadioButton;
+function TRadioGroup_GetButton(_rg: TRadioGroup; _ItemIdx: Integer): TRadioButton;
 // taken from http://delphi.about.com/od/adptips2006/qt/radiogroupbtns.htm
 begin
   if (_ItemIdx < 0) or (_ItemIdx >= _rg.Items.Count) then
@@ -2404,8 +2472,8 @@
 function TRadioGroup_GetButton(_rg: TRadioGroup; _ItemText: string): TRadioButton;
 // taken from http://delphi.about.com/od/adptips2006/qt/radiogroupbtns.htm
 var
-  cnt: integer;
-  Idx: integer;
+  cnt: Integer;
+  Idx: Integer;
 begin
   Idx := -1;
   for cnt := 0 to -1 + _rg.Items.Count do begin
@@ -2421,12 +2489,12 @@
   THackButtonControl = class(TButtonControl)
   end;
 
-function TButtonControl_GetChecked(_bctrl: TButtonControl): boolean;
+function TButtonControl_GetChecked(_bctrl: TButtonControl): Boolean;
 begin
   Result := THackButtonControl(_bctrl).Checked;
 end;
 
-procedure TButtonControl_SetChecked(_bctrl: TButtonControl; _Value: boolean);
+procedure TButtonControl_SetChecked(_bctrl: TButtonControl; _Value: Boolean);
 begin
   THackButtonControl(_bctrl).Checked := _Value;
 end;
@@ -2436,7 +2504,7 @@
   THackButtonControl(_bctrl).Caption := _Value;
 end;
 
-procedure TListView_UnselectAll(_lv: TListView; _WithSelectEvents: boolean = True);
+procedure TListView_UnselectAll(_lv: TListView; _WithSelectEvents: Boolean = True);
 var
   i: Integer;
   Event: TLVSelectItemEvent;
@@ -2452,7 +2520,7 @@
   end;
 end;
 
-function TListView_GetSelectedCount(_lv: TListView): integer;
+function TListView_GetSelectedCount(_lv: TListView): Integer;
 var
   i: Integer;
 begin
@@ -2462,9 +2530,9 @@
       Inc(Result);
 end;
 
-function TListView_GetSelected(_Lv: TListView; out _Idx: integer): boolean;
+function TListView_GetSelected(_Lv: TListView; out _Idx: Integer): Boolean;
 var
-  Idx: integer;
+  Idx: Integer;
 begin
   Idx := _Lv.ItemIndex;
   Result := (Idx <> -1);
@@ -2472,7 +2540,7 @@
     _Idx := Idx;
 end;
 
-function TListView_GetSelected(_lv: TListView; out _Item: TListItem): boolean;
+function TListView_GetSelected(_lv: TListView; out _Item: TListItem): Boolean;
 var
   Item: TListItem;
 begin
@@ -2482,7 +2550,7 @@
     _Item := Item;
 end;
 
-function TAction_SetCheckedExecute(_act: TCustomAction; _Checked: boolean): boolean;
+function TAction_SetCheckedExecute(_act: TCustomAction; _Checked: Boolean): Boolean;
 begin
   Result := _act.Checked <> _Checked;
   if Result then
@@ -2504,7 +2572,7 @@
   grp.Caption := Result;
 end;
 
-function TStatusBar_GetClickedPanel(_sb: TStatusBar): integer;
+function TStatusBar_GetClickedPanel(_sb: TStatusBar): Integer;
 // call this to determine which panel of a TStatusBar has been clicked
 // Note: This assumes, that the status bar actually was clicked, so only call it
 //       from the status bar's OnClick, OnMouseDown or OnMouseUp event handlers
@@ -2598,12 +2666,12 @@
 begin
   inherited Create;
   FCtrl := _Ctrl;
-  SendMessage(FCtrl.Handle, WM_SETREDRAW, integer(LongBool(False)), 0);
+  SendMessage(FCtrl.Handle, WM_SETREDRAW, Integer(LongBool(False)), 0);
 end;
 
 destructor TWinControlLocker.Destroy;
 begin
-  SendMessage(FCtrl.Handle, WM_SETREDRAW, integer(LongBool(True)), 0);
+  SendMessage(FCtrl.Handle, WM_SETREDRAW, Integer(LongBool(True)), 0);
   RedrawWindow(FCtrl.Handle, nil, 0, RDW_ERASE or RDW_INVALIDATE or RDW_ALLCHILDREN);
   inherited;
 end;
@@ -2617,7 +2685,7 @@
 var
   gblCheckListBoxHelper: TCheckListBoxHelper = nil;
 
-procedure TCheckListBox_Readonly(_clb: TCheckListBox; _ReadOnly: boolean; _ChangeColor: boolean = True);
+procedure TCheckListBox_Readonly(_clb: TCheckListBox; _ReadOnly: Boolean; _ChangeColor: Boolean = True);
 begin
   if _ReadOnly then begin
     if not Assigned(gblCheckListBoxHelper) then
@@ -2635,7 +2703,7 @@
 procedure TCheckListBoxHelper.HandleClickCheck(_Sender: TObject);
 var
   clb: TCheckListBox;
-  Idx: integer;
+  Idx: Integer;
 begin
   clb := _Sender as TCheckListBox;
   Idx := clb.ItemIndex;



From twm at mail.berlios.de  Sat Aug 27 13:19:42 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:19:42 +0200
Subject: [Dzchart-svncheckins] r601 - in utilities/dzLib/trunk/translations:
	de en fr
Message-ID: <20110827111942.DB7FE481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:19:42 +0200 (Sat, 27 Aug 2011)
New Revision: 601

Modified:
   utilities/dzLib/trunk/translations/de/dzlib.po
   utilities/dzLib/trunk/translations/en/dzlib.po
   utilities/dzLib/trunk/translations/fr/dzlib.po
Log:
updated translations

Modified: utilities/dzLib/trunk/translations/de/dzlib.po
===================================================================
--- utilities/dzLib/trunk/translations/de/dzlib.po	2011-08-27 11:19:26 UTC (rev 600)
+++ utilities/dzLib/trunk/translations/de/dzlib.po	2011-08-27 11:19:42 UTC (rev 601)
@@ -6,7 +6,7 @@
 msgid ""
 msgstr ""
 "Project-Id-Version: dzLib 1.0\n"
-"POT-Creation-Date: 2011-03-23 08:54\n"
+"POT-Creation-Date: 2011-07-27 11:20\n"
 "PO-Revision-Date: 2010-07-13 10:18+0100\n"
 "Last-Translator: Thomas Mueller <info at schniering.com>\n"
 "Language-Team: Thomas Mueller <dzlib at dummzeuch.de>\n"
@@ -17,115 +17,115 @@
 "X-Poedit-Language: German\n"
 "X-Poedit-Country: GERMANY\n"
 
-#: u_dzClassUtils.pas:445
+#: u_dzClassUtils.pas:464
 msgid "no matching object found"
 msgstr "kein passendes Objekt gefunden"
 
-#: u_dzClassUtils.pas:483
+#: u_dzClassUtils.pas:502
 #, object-pascal-format
 msgid "Invalid empty string value in ini file for [%s]%s"
 msgstr "Ung?ltige Leerstring-Wert in ini-Datei f?r [%s]%s"
 
-#: u_dzClassUtils.pas:526
+#: u_dzClassUtils.pas:545
 #, object-pascal-format
 msgid "Invalid floating point value \"%s\" in ini file for [%s]%s"
 msgstr "Ung?ltiger Flie?kommawert \"%s\" in ini-Datei f?r [%s]%s"
 
-#: u_dzClassUtils.pas:548
+#: u_dzClassUtils.pas:567
 #, object-pascal-format
 msgid "Invalid date value \"%s\" in ini file for [%s]%s"
 msgstr "Ung?ltiger Datumswert \"%s\" in ini-Datei f?r [%s]%s"
 
-#: u_dzClassUtils.pas:562
+#: u_dzClassUtils.pas:581
 #, object-pascal-format
 msgid "Invalid integer value \"%s\" in ini file for [%s]%s"
 msgstr "Ung?ltiger Ganzzahlwert \"%s\" in ini-Datei f?r [%s]%s"
 
-#: u_dzConvertUtils.pas:397
+#: u_dzConvertUtils.pas:402
 #, object-pascal-format
 msgid "Digit out of range %s"
 msgstr "Ung?ltige Ziffer %s"
 
-#: u_dzConvertUtils.pas:410
+#: u_dzConvertUtils.pas:415
 #, object-pascal-format
 msgid "Digit #%d (%s) out of range"
 msgstr "Ung?ltige Ziffer #%d (%s)"
 
-#: u_dzConvertUtils.pas:618
+#: u_dzConvertUtils.pas:623
 #, object-pascal-format
 msgid "\"%s\" is not a valid integer value: %s"
 msgstr "\"%s\" ist kein g?ltiger Integerwert: %s"
 
-#: u_dzConvertUtils.pas:636
+#: u_dzConvertUtils.pas:652
 #, object-pascal-format
 msgid "\"%s\" is not a valid Int64 value: %s"
 msgstr "\"%s\" ist kein g?ltiger Int64 Wert: %s"
 
-#: u_dzConvertUtils.pas:702
+#: u_dzConvertUtils.pas:718
 #, object-pascal-format
 msgid "\"%s\" is not a valid floating point value: %s"
 msgstr "\"%s\" ist kein g?ltiger Flie?kommawert: %s"
 
-#: u_dzConvertUtils.pas:708
+#: u_dzConvertUtils.pas:724
 #, no-object-pascal-format
 msgid "%.2f EiB"
 msgstr "%.2f EiB"
 
-#: u_dzConvertUtils.pas:710
+#: u_dzConvertUtils.pas:726
 #, no-object-pascal-format
 msgid "%.2f PiB"
 msgstr "%.2f PiB"
 
-#: u_dzConvertUtils.pas:712
+#: u_dzConvertUtils.pas:728
 #, no-object-pascal-format
 msgid "%.2f TiB"
 msgstr "%.2f TiB"
 
-#: u_dzConvertUtils.pas:714
+#: u_dzConvertUtils.pas:730
 #, no-object-pascal-format
 msgid "%.2f GiB"
 msgstr "%.2f GiB"
 
-#: u_dzConvertUtils.pas:716
+#: u_dzConvertUtils.pas:732
 #, no-object-pascal-format
 msgid "%.2f MiB"
 msgstr "%.2f MiB"
 
-#: u_dzConvertUtils.pas:718
+#: u_dzConvertUtils.pas:734
 #, no-object-pascal-format
 msgid "%.2f KiB"
 msgstr "%.2f KiB"
 
-#: u_dzConvertUtils.pas:720
+#: u_dzConvertUtils.pas:736
 #, object-pascal-format
 msgid "%d Bytes"
 msgstr "%d Bytes"
 
 #. Days and hours, ignore minutes and seconds
-#: u_dzConvertUtils.pas:727
+#: u_dzConvertUtils.pas:743
 #, object-pascal-format
 msgid "%dd %dh"
 msgstr "%dd %dh"
 
 #. Hours and minutes, ignore seconds
-#: u_dzConvertUtils.pas:730
+#: u_dzConvertUtils.pas:746
 #, object-pascal-format
 msgid "%dh %dm"
 msgstr "%dh %dm"
 
 #. Minutes and seconds
-#: u_dzConvertUtils.pas:733
+#: u_dzConvertUtils.pas:749
 #, object-pascal-format
 msgid "%dm %ds"
 msgstr "%dm %ds"
 
 #. Seconds only
-#: u_dzConvertUtils.pas:736
+#: u_dzConvertUtils.pas:752
 #, object-pascal-format
 msgid "%ds"
 msgstr "%ds"
 
-#: u_dzConvertUtils.pas:776
+#: u_dzConvertUtils.pas:792
 #, object-pascal-format
 msgid "Length of byte array (%d) does not match size of a LongWord (%d)"
 msgstr "L?nge des Byte-Arrays (%d) stimmt nicht mit der Gr??e eines Longwords (%d) ?berein"
@@ -137,96 +137,126 @@
 msgid "DLL entry point not initialized"
 msgstr "DLL Einsprungpunkt nicht initialisiert"
 
+#: u_dzDatasetHelpers.pas:238
+#, object-pascal-format
+msgid "Field \"%s\" not found in table \"%s\"."
+msgstr "Feld \"%s\" nicht in Tabelle \"%s\" gefunden."
+
+#: u_dzDatasetHelpers.pas:479
+#, object-pascal-format
+msgid "SetParamByName is not supported for a %s."
+msgstr "SetParamByName wird f?r %s nicht unterst?tzt."
+
+#: u_dzDatasetHelpers.pas:484
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s."
+msgstr "SetParamByName wird f?r %s nicht unterst?tzt."
+
 #. Do not use ParamByName -> only works if param is unique
-#: u_dzDatasetHelpers.pas:534 u_dzDatasetHelpers.pas:553
+#: u_dzDatasetHelpersADO.pas:69
 #, object-pascal-format
-msgid "SetParamByName is not supported for a %s (only TQuery and TAdoDataset descendants)."
-msgstr "SetParamByName wird f?r %s nicht unterst?tzt (nur TQuery- und TAdoDataset-Abk?mmlinge)"
+msgid "SetParamByName is not supported for a %s (only TADODataSet descendants)."
+msgstr "SetParamByName wird f?r %s nicht unterst?tzt (nur TADODataSet-Abk?mmlinge)."
 
-#: u_dzDateUtils.pas:99
+#: u_dzDatasetHelpersADO.pas:82
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s (only TADODataSet descendants)."
+msgstr "TrySetParamByName wird f?r %s nicht unterst?tzt (nur TADODataSet-Abk?mmlinge)."
+
+#: u_dzDatasetHelpersBDE.pas:43
+#, object-pascal-format
+msgid "SetParamByName is not supported for a %s (only TQuery descendants)."
+msgstr "SetParamByName wird f?r %s nicht unterst?tzt (nur TQuery-Abk?mmlinge)"
+
+#: u_dzDatasetHelpersBDE.pas:56
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s (only TQuery descendants)."
+msgstr "TrySetParamByName wird f?r %s nicht unterst?tzt (nur TQuery-Abk?mmlinge)."
+
+#: u_dzDateUtils.pas:112
 msgid "Monday"
 msgstr "Montag"
 
-#: u_dzDateUtils.pas:100
+#: u_dzDateUtils.pas:113
 msgid "Tuesday"
 msgstr "Dienstag"
 
-#: u_dzDateUtils.pas:101
+#: u_dzDateUtils.pas:114
 msgid "Wednesday"
 msgstr "Mittwoch"
 
-#: u_dzDateUtils.pas:102
+#: u_dzDateUtils.pas:115
 msgid "Thursday"
 msgstr "Donnerstag"
 
-#: u_dzDateUtils.pas:103
+#: u_dzDateUtils.pas:116
 msgid "Friday"
 msgstr "Freitag"
 
-#: u_dzDateUtils.pas:104
+#: u_dzDateUtils.pas:117
 msgid "Saturday"
 msgstr "Samstag"
 
-#: u_dzDateUtils.pas:105
+#: u_dzDateUtils.pas:118
 msgid "Sunday"
 msgstr "Sonntag"
 
 #. should never happen ...
-#: u_dzDateUtils.pas:108
+#: u_dzDateUtils.pas:121
 #, object-pascal-format
 msgid "Invalid value for DayOfWeek: %d"
 msgstr "Ung?ltiger Wert f?r DayOfWeek: %d"
 
-#: u_dzDateUtils.pas:115
+#: u_dzDateUtils.pas:128
 msgid "January"
 msgstr "Januar"
 
-#: u_dzDateUtils.pas:116
+#: u_dzDateUtils.pas:129
 msgid "February"
 msgstr "Februar"
 
-#: u_dzDateUtils.pas:117
+#: u_dzDateUtils.pas:130
 msgid "March"
 msgstr "M?rz"
 
-#: u_dzDateUtils.pas:118
+#: u_dzDateUtils.pas:131
 msgid "April"
 msgstr "April"
 
-#: u_dzDateUtils.pas:119
+#: u_dzDateUtils.pas:132
 msgid "May"
 msgstr "Mai"
 
-#: u_dzDateUtils.pas:120
+#: u_dzDateUtils.pas:133
 msgid "June"
 msgstr "Juni"
 
-#: u_dzDateUtils.pas:121
+#: u_dzDateUtils.pas:134
 msgid "July"
 msgstr "Juli"
 
-#: u_dzDateUtils.pas:122
+#: u_dzDateUtils.pas:135
 msgid "August"
 msgstr "August"
 
-#: u_dzDateUtils.pas:123
+#: u_dzDateUtils.pas:136
 msgid "September"
 msgstr "September"
 
-#: u_dzDateUtils.pas:124
+#: u_dzDateUtils.pas:137
 msgid "October"
 msgstr "Oktober"
 
-#: u_dzDateUtils.pas:125
+#: u_dzDateUtils.pas:138
 msgid "November"
 msgstr "November"
 
-#: u_dzDateUtils.pas:126
+#: u_dzDateUtils.pas:139
 msgid "December"
 msgstr "Dezember"
 
 #. should never happen ...
-#: u_dzDateUtils.pas:129
+#: u_dzDateUtils.pas:142
 #, object-pascal-format
 msgid "Invalid month number %d"
 msgstr "Ung?ltige Monatsnummer %d"
@@ -312,63 +342,63 @@
 msgstr "Ung?ltige Dateiflags"
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:945
+#: u_dzFileUtils.pas:991
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath"
 msgstr "TFileSystem.GetTempPath: %1:s (code: %0:d) beim Aufruf von Windows.GetTempPath"
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:953
+#: u_dzFileUtils.pas:999
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath (2nd)"
 msgstr "TFileSystem.GetTempPath: %1:s (code: %0:d) beim Aufruf von Windows.GetTempPath (zweiter)"
 
-#: u_dzFileUtils.pas:1005
+#: u_dzFileUtils.pas:1051
 msgid "<no volume name>"
 msgstr "<kein Volume-Name>"
 
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1024 u_dzFileUtils.pas:1629
+#: u_dzFileUtils.pas:1070 u_dzFileUtils.pas:1730
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) creating directory \"%s\""
 msgstr "Fehler %%1:s (%%0:d) beim Erstellen des Verzeichnisses \"%s\""
 
-#: u_dzFileUtils.pas:1048
+#: u_dzFileUtils.pas:1094
 #, object-pascal-format
 msgid "Could not find a unique directory name based on \"%s\""
 msgstr "Konnte keinen eindeutigen Verzeichnisnamen basierend auf \"%s\" finden."
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:1087
+#: u_dzFileUtils.pas:1133
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempFilename: %1:s (Code: %0:d) calling Windows.GetTempFileName"
 msgstr "TFileSystem.GetTempFilename: %1:s (Code: %0:d) beim Aufruf von Windows.GetTempFileName"
 
-#: u_dzFileUtils.pas:1142 u_dzFileUtils.pas:1148
+#: u_dzFileUtils.pas:1188 u_dzFileUtils.pas:1194
 #, object-pascal-format
 msgid "File not found: \"%s\""
 msgstr "Datei nicht gefunden: \"%s\""
 
-#: u_dzFileUtils.pas:1193
+#: u_dzFileUtils.pas:1257
 #, no-object-pascal-format
 msgid "TFileSystem.GetShortPathname: %1:s (Code: %0:d) calling Windows.GetShortPathname"
 msgstr "TFileSystem.GetShortPathname: %1:s (Code: %0:d) beim Aufruf von Windows.GetShortPathname"
 
-#: u_dzFileUtils.pas:1195
+#: u_dzFileUtils.pas:1259
 #, object-pascal-format
 msgid "Short pathname is longer than MAX_PATH (%d) characters"
 msgstr "Kurzer Pfad ist l?nger als MAX_PATH (%d) Zeichen"
 
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1207 u_dzFileUtils.pas:1233
+#: u_dzFileUtils.pas:1271 u_dzFileUtils.pas:1297
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while trying to move \"%s\" to \"%s\"."
 msgstr "Fehler %%1:s (%%0:d) beim Verschieben von \"%s\" nach \"%s\"."
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1251
+#: u_dzFileUtils.pas:1315
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while changing the readonly flag of \"%s\""
 msgstr "Fehler %%1:s (%%0:d) beim ?ndern des Schreibschutz-Flags von \"%s\""
@@ -376,96 +406,96 @@
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1271 u_dzFileUtils.pas:1397 u_dzFileUtils.pas:1470
+#: u_dzFileUtils.pas:1335 u_dzFileUtils.pas:1471 u_dzFileUtils.pas:1544
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while trying to copy \"%s\" to \"%s\"."
 msgstr "Fehler %%1:s (%%0:d) beim Kopieren von \"%s\" nach \"%s\"."
 
-#: u_dzFileUtils.pas:1385
+#: u_dzFileUtils.pas:1459
 #, object-pascal-format
 msgid "Error %s (%s) in progress callback while trying to copy \"%s\" to \"%s\"."
 msgstr "Fehler %s (%s) im Fortschritts-Callback beim Kopieren von \"%s\" nach \"%s\"."
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1500
+#: u_dzFileUtils.pas:1574
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) deleting file \"%s\""
 msgstr "Fehler %%1:s (%%0:d) beim L?schen der Datei \"%s\""
 
-#: u_dzFileUtils.pas:1570
+#: u_dzFileUtils.pas:1644
 #, object-pascal-format
 msgid "File not found: %s"
 msgstr "Datei nicht gefunden: %s"
 
-#: u_dzFileUtils.pas:1584
+#: u_dzFileUtils.pas:1658
 #, object-pascal-format
 msgid "Directory not found: %s"
 msgstr "Verzeichnis nicht gefunden: \"%s\""
 
 #. ForceDirectories can raise EInOutError if the directory path contains empty parts
-#: u_dzFileUtils.pas:1621
+#: u_dzFileUtils.pas:1722
 #, object-pascal-format
 msgid "Error creating directory \"%s\": %s (%s)"
 msgstr "Fehler beim Erstellen des Verzeichnisses \"%s\": %s (%s)"
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1648
+#: u_dzFileUtils.pas:1749
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) deleting directory \"%s\""
 msgstr "Fehler %%1:s (%%0:d) beim L?schen des Verzeichnisses \"%s\""
 
-#: u_dzFileUtils.pas:1666
+#: u_dzFileUtils.pas:1767
 #, object-pascal-format
 msgid "\"%s\" does not exist or is not a directory"
 msgstr "\"%s\" existiert nicht oder ist kein Verzeichnis"
 
-#: u_dzFileUtils.pas:1940
+#: u_dzFileUtils.pas:2041
 msgid "Combination of ResultContainsNumber and KeepOriginal is not allowed"
 msgstr "Kombination von ResultContainsNumber und KeepOriginal ist nicht erlaubt"
 
-#: u_dzGoogleTranslate.pas:238
+#: u_dzGoogleTranslate.pas:246
 #, object-pascal-format
 msgid "Parsing error on JSON answer: Root object size is %d not 3."
 msgstr "Parsing-Fehler der JSON Antwort: Gr??e des Root Objekts ist %d nicht 3."
 
-#: u_dzGoogleTranslate.pas:243
+#: u_dzGoogleTranslate.pas:251
 #, object-pascal-format
 msgid "Parsing error on JSON answer: First pair name is \"%s\" not \"responseData\"."
 msgstr "Parsing-Fehler der JSON Antwort: Das erste Paar ist \"%s\" nicht \"responseData\"."
 
-#: u_dzGoogleTranslate.pas:250
+#: u_dzGoogleTranslate.pas:258
 #, object-pascal-format
 msgid "Parsing error on JSON answer: responseData object size is %d not 1."
 msgstr "Parsing-Fehler der JSON Antwort: Gr??? des responseData Objekts ist %d nicht 1."
 
-#: u_dzGoogleTranslate.pas:254
+#: u_dzGoogleTranslate.pas:262
 #, object-pascal-format
 msgid "Parsing error on JSON answer: First responseData pair is \"%s\" not \"translatedText\"."
 msgstr "Parsing-Fehler der JSON Antwort: Erstes responseData Paar ist \"%s\" nicht \"translatedText\"."
 
-#: u_dzGoogleTranslate.pas:257
+#: u_dzGoogleTranslate.pas:265
 msgid "Parsing error on JSON answer: translatedText data is not a string."
 msgstr "Parsing-Fehler der JSON Antwort: translatedText ist keine Zeichenkette."
 
-#: u_dzGoogleTranslate.pas:260
+#: u_dzGoogleTranslate.pas:268
 msgid "Parsing error on JSON answer: responseData is neither NULL nor an object."
 msgstr "Parsing-Fehler der JSON Antwort: responseData ist weder NULL noch ein Objekt."
 
-#: u_dzGoogleTranslate.pas:264
+#: u_dzGoogleTranslate.pas:272
 #, object-pascal-format
 msgid "Parsing error on JSON answer: Second pair name is \"%s\" not \"responseDetails\"."
 msgstr "Parsing-Fehler der JSON Antwort: Name des zweiten Paares ist \"%s\" nicht \"responseDetails\"."
 
-#: u_dzGoogleTranslate.pas:271
+#: u_dzGoogleTranslate.pas:279
 msgid "Parsing error on JSON answer: responseDetails is neither NULL nor a string."
 msgstr "Parsing-Fehler der JSON Antwort: responseDetails ist weder NULL noch eine Zeichenkette."
 
-#: u_dzGoogleTranslate.pas:275
+#: u_dzGoogleTranslate.pas:283
 #, object-pascal-format
 msgid "Parsing error on JSON answer: Thrid pair name is \"%s\" not \"responseStatus\"."
 msgstr "Parsing-Fehler der JSON Antwort: Name des dritten Paares ist \"%s\" nicht \"responseStatus\"."
 
-#: u_dzGoogleTranslate.pas:278
+#: u_dzGoogleTranslate.pas:286
 msgid "Parsing error on JSON answer: responseStatus is not a number."
 msgstr "Parsing-Fehler der JSON Antwort: responsestatus ist keine Zahl."
 
@@ -489,7 +519,7 @@
 msgid "Error \"%1:s (%0:d)\" while trying to acquire mutex."
 msgstr "Fehler %1:s (%0:d) beim Versuch das Mutex zu erwerben."
 
-#: u_dzNameValueList.pas:98 u_dzUnsortedNameValueList.pas:88
+#: u_dzNameValueList.pas:99 u_dzUnsortedNameValueList.pas:88
 #: u_dzNameValueList.pas:96
 #, object-pascal-format
 msgid "Entry \"%s\" not found."
@@ -629,34 +659,34 @@
 msgid "Variant can not be converted to %s"
 msgstr "Variant kann nicht nach %s konvertiert werden"
 
-#: u_dzVclUtils.pas:660
+#: u_dzVclUtils.pas:712
 #, object-pascal-format
 msgid "Glyph string contained invalid character at position %d."
 msgstr "Der Glyph-Text beinhaltet ein ung?ltiges Zeichen an Position %d."
 
-#: u_dzVclUtils.pas:940 u_dzVclUtils.pas:987
+#: u_dzVclUtils.pas:998 u_dzVclUtils.pas:1045
 #, object-pascal-format
 msgid "\"%s\" is not a valid floating point value."
 msgstr "\"%s\" ist kein g?ltiger Flie?kommawert."
 
-#: u_dzVclUtils.pas:955 u_dzVclUtils.pas:1019 u_dzVclUtils.pas:1032
+#: u_dzVclUtils.pas:1013 u_dzVclUtils.pas:1185 u_dzVclUtils.pas:1198
 #, object-pascal-format
 msgid "\"%s\" is not a valid integer value."
 msgstr "\"%s\" ist kein g?ltiger Integerwert."
 
-#: u_dzVclUtils.pas:1430
+#: u_dzVclUtils.pas:1618
 msgid "No item selected in combobox"
 msgstr "Kein Eintrag der Combobox ausgew?hlt"
 
-#: u_dzVclUtils.pas:1449
+#: u_dzVclUtils.pas:1637
 msgid "No item selected in listbox"
 msgstr "Kein Eintrag der Listbox ausgew?hlt"
 
-#: u_dzVclUtils.pas:2013
+#: u_dzVclUtils.pas:2227
 msgid "JPEG Files"
 msgstr "JPEG Dateien"
 
-#: u_dzVclUtils.pas:2465
+#: u_dzVclUtils.pas:2729
 msgid "Ctrl+Return to 'click' right button."
 msgstr "Strg+Enter zum 'Klicken' des rechten Buttons."
 
@@ -730,11 +760,11 @@
 msgid "Invalid modal result %d."
 msgstr "Ung?ltiger modaler R?ckgabewert %d."
 
-#: w_dzDialog.pas:522
+#: w_dzDialog.pas:526
 msgid "Do not show again."
 msgstr "Nicht nochmal anzeigen."
 
-#: w_dzDialog.pas:604
+#: w_dzDialog.pas:608
 #, object-pascal-format
 msgid ""
 "An error occurred:\n"
@@ -744,42 +774,42 @@
 "%s"
 
 #. 400;
-#: w_dzDialog.pas:628
+#: w_dzDialog.pas:632
 msgid "Additional information:"
 msgstr "Erweiterte Informationen:"
 
-#: w_dzDialog.pas:648 w_dzDialog.pas:758 w_dzDialog.pas:805
+#: w_dzDialog.pas:652 w_dzDialog.pas:762 w_dzDialog.pas:809
 msgid "&Details >>"
 msgstr "&Details >>"
 
-#: w_dzDialog.pas:808
+#: w_dzDialog.pas:812
 msgid "&Details <<"
 msgstr "&Details <<"
 
-#: w_dzProgress.pas:95
+#: w_dzProgress.pas:96
 #, object-pascal-format
 msgid "Progress (%d%%)"
 msgstr "Fortschritt (%d%%)"
 
-#: w_dzProgress.pas:106
+#: w_dzProgress.pas:105
 msgid "Do you really want to abort?"
 msgstr "Wollen Sie wirklich abbrechen?"
 
-#: w_dzProgress.pas:171
+#: w_dzProgress.pas:170
 #, no-object-pascal-format
 msgid "must not contain a % at the end"
 msgstr "darf am Ende kein % enthalten"
 
-#: w_dzProgress.pas:180
+#: w_dzProgress.pas:179
 #, no-object-pascal-format
 msgid "\"%\" must be followed by \"d\" or \"%\"."
 msgstr "Auf \"%\" muss \"d\" oder \"%\" folgen"
 
-#: w_dzProgress.pas:186
+#: w_dzProgress.pas:185
 msgid "too many parameters"
 msgstr "Zuviele Parameter"
 
-#: w_dzProgress.pas:198
+#: w_dzProgress.pas:197
 #, object-pascal-format
 msgid "Invalid FormCaption, %s"
 msgstr "Ung?ltige Formular?berschrift \"%s\""

Modified: utilities/dzLib/trunk/translations/en/dzlib.po
===================================================================
--- utilities/dzLib/trunk/translations/en/dzlib.po	2011-08-27 11:19:26 UTC (rev 600)
+++ utilities/dzLib/trunk/translations/en/dzlib.po	2011-08-27 11:19:42 UTC (rev 601)
@@ -6,7 +6,7 @@
 msgid ""
 msgstr ""
 "Project-Id-Version: dzLib 1.0\n"
-"POT-Creation-Date: 2011-03-23 08:54\n"
+"POT-Creation-Date: 2011-07-27 11:20\n"
 "PO-Revision-Date: 2010-07-13 10:18+0100\n"
 "Last-Translator: Thomas Mueller <info at schniering.com>\n"
 "Language-Team: Thomas Mueller <dzlib at dummzeuch.de>\n"
@@ -17,115 +17,115 @@
 "X-Poedit-Language: English\n"
 "X-Poedit-Country: UNITED STATES\n"
 
-#: u_dzClassUtils.pas:445
+#: u_dzClassUtils.pas:464
 msgid "no matching object found"
 msgstr "no matching object found"
 
-#: u_dzClassUtils.pas:483
+#: u_dzClassUtils.pas:502
 #, object-pascal-format
 msgid "Invalid empty string value in ini file for [%s]%s"
 msgstr "Invalid empty string value in ini file for [%s]%s"
 
-#: u_dzClassUtils.pas:526
+#: u_dzClassUtils.pas:545
 #, object-pascal-format
 msgid "Invalid floating point value \"%s\" in ini file for [%s]%s"
 msgstr "Invalid floating point value \"%s\" in ini file for [%s]%s"
 
-#: u_dzClassUtils.pas:548
+#: u_dzClassUtils.pas:567
 #, object-pascal-format
 msgid "Invalid date value \"%s\" in ini file for [%s]%s"
 msgstr "Invalid date value \"%s\" in ini file for [%s]%s"
 
-#: u_dzClassUtils.pas:562
+#: u_dzClassUtils.pas:581
 #, object-pascal-format
 msgid "Invalid integer value \"%s\" in ini file for [%s]%s"
 msgstr "Invalid integer value \"%s\" in ini file for [%s]%s"
 
-#: u_dzConvertUtils.pas:397
+#: u_dzConvertUtils.pas:402
 #, object-pascal-format
 msgid "Digit out of range %s"
 msgstr "Digit out of range %s"
 
-#: u_dzConvertUtils.pas:410
+#: u_dzConvertUtils.pas:415
 #, object-pascal-format
 msgid "Digit #%d (%s) out of range"
 msgstr "Digit #%d (%s) out of range"
 
-#: u_dzConvertUtils.pas:618
+#: u_dzConvertUtils.pas:623
 #, object-pascal-format
 msgid "\"%s\" is not a valid integer value: %s"
 msgstr "\"%s\" is not a valid integer value: %s"
 
-#: u_dzConvertUtils.pas:636
+#: u_dzConvertUtils.pas:652
 #, object-pascal-format
 msgid "\"%s\" is not a valid Int64 value: %s"
 msgstr "\"%s\" is not a valid Int64 value: %s"
 
-#: u_dzConvertUtils.pas:702
+#: u_dzConvertUtils.pas:718
 #, object-pascal-format
 msgid "\"%s\" is not a valid floating point value: %s"
 msgstr "\"%s\" is not a valid floating point value: %s"
 
-#: u_dzConvertUtils.pas:708
+#: u_dzConvertUtils.pas:724
 #, no-object-pascal-format
 msgid "%.2f EiB"
 msgstr "%.2f EiB"
 
-#: u_dzConvertUtils.pas:710
+#: u_dzConvertUtils.pas:726
 #, no-object-pascal-format
 msgid "%.2f PiB"
 msgstr "%.2f PiB"
 
-#: u_dzConvertUtils.pas:712
+#: u_dzConvertUtils.pas:728
 #, no-object-pascal-format
 msgid "%.2f TiB"
 msgstr "%.2f TiB"
 
-#: u_dzConvertUtils.pas:714
+#: u_dzConvertUtils.pas:730
 #, no-object-pascal-format
 msgid "%.2f GiB"
 msgstr "%.2f GiB"
 
-#: u_dzConvertUtils.pas:716
+#: u_dzConvertUtils.pas:732
 #, no-object-pascal-format
 msgid "%.2f MiB"
 msgstr "%.2f MiB"
 
-#: u_dzConvertUtils.pas:718
+#: u_dzConvertUtils.pas:734
 #, no-object-pascal-format
 msgid "%.2f KiB"
 msgstr "%.2f KiB"
 
-#: u_dzConvertUtils.pas:720
+#: u_dzConvertUtils.pas:736
 #, object-pascal-format
 msgid "%d Bytes"
 msgstr "%d Bytes"
 
 #. Days and hours, ignore minutes and seconds
-#: u_dzConvertUtils.pas:727
+#: u_dzConvertUtils.pas:743
 #, object-pascal-format
 msgid "%dd %dh"
 msgstr "%dd %dh"
 
 #. Hours and minutes, ignore seconds
-#: u_dzConvertUtils.pas:730
+#: u_dzConvertUtils.pas:746
 #, object-pascal-format
 msgid "%dh %dm"
 msgstr "%dh %dm"
 
 #. Minutes and seconds
-#: u_dzConvertUtils.pas:733
+#: u_dzConvertUtils.pas:749
 #, object-pascal-format
 msgid "%dm %ds"
 msgstr "%dm %ds"
 
 #. Seconds only
-#: u_dzConvertUtils.pas:736
+#: u_dzConvertUtils.pas:752
 #, object-pascal-format
 msgid "%ds"
 msgstr "%ds"
 
-#: u_dzConvertUtils.pas:776
+#: u_dzConvertUtils.pas:792
 #, object-pascal-format
 msgid "Length of byte array (%d) does not match size of a LongWord (%d)"
 msgstr "Length of byte array (%d) does not match size of a LongWord (%d)"
@@ -137,96 +137,126 @@
 msgid "DLL entry point not initialized"
 msgstr "DLL entry point not initialized"
 
+#: u_dzDatasetHelpers.pas:238
+#, object-pascal-format
+msgid "Field \"%s\" not found in table \"%s\"."
+msgstr "Field \"%s\" not found in table \"%s\"."
+
+#: u_dzDatasetHelpers.pas:479
+#, object-pascal-format
+msgid "SetParamByName is not supported for a %s."
+msgstr "SetParamByName is not supported for a %s."
+
+#: u_dzDatasetHelpers.pas:484
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s."
+msgstr "TrySetParamByName is not supported for a %s."
+
 #. Do not use ParamByName -> only works if param is unique
-#: u_dzDatasetHelpers.pas:534 u_dzDatasetHelpers.pas:553
+#: u_dzDatasetHelpersADO.pas:69
 #, object-pascal-format
-msgid "SetParamByName is not supported for a %s (only TQuery and TAdoDataset descendants)."
-msgstr "SetParamByName is not supported for a %s (only TQuery and TAdoDataset descendants)."
+msgid "SetParamByName is not supported for a %s (only TADODataSet descendants)."
+msgstr "SetParamByName is not supported for a %s (only TADODataSet descendants)."
 
-#: u_dzDateUtils.pas:99
+#: u_dzDatasetHelpersADO.pas:82
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s (only TADODataSet descendants)."
+msgstr "TrySetParamByName is not supported for a %s (only TADODataSet descendants)."
+
+#: u_dzDatasetHelpersBDE.pas:43
+#, object-pascal-format
+msgid "SetParamByName is not supported for a %s (only TQuery descendants)."
+msgstr "SetParamByName is not supported for a %s (only TQuery descendants)."
+
+#: u_dzDatasetHelpersBDE.pas:56
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s (only TQuery descendants)."
+msgstr "TrySetParamByName is not supported for a %s (only TQuery descendants)."
+
+#: u_dzDateUtils.pas:112
 msgid "Monday"
 msgstr "Monday"
 
-#: u_dzDateUtils.pas:100
+#: u_dzDateUtils.pas:113
 msgid "Tuesday"
 msgstr "Tuesday"
 
-#: u_dzDateUtils.pas:101
+#: u_dzDateUtils.pas:114
 msgid "Wednesday"
 msgstr "Wednesday"
 
-#: u_dzDateUtils.pas:102
+#: u_dzDateUtils.pas:115
 msgid "Thursday"
 msgstr "Thursday"
 
-#: u_dzDateUtils.pas:103
+#: u_dzDateUtils.pas:116
 msgid "Friday"
 msgstr "Friday"
 
-#: u_dzDateUtils.pas:104
+#: u_dzDateUtils.pas:117
 msgid "Saturday"
 msgstr "Saturday"
 
-#: u_dzDateUtils.pas:105
+#: u_dzDateUtils.pas:118
 msgid "Sunday"
 msgstr "Sunday"
 
 #. should never happen ...
-#: u_dzDateUtils.pas:108
+#: u_dzDateUtils.pas:121
 #, object-pascal-format
 msgid "Invalid value for DayOfWeek: %d"
 msgstr "Invalid value for DayOfWeek: %d"
 
-#: u_dzDateUtils.pas:115
+#: u_dzDateUtils.pas:128
 msgid "January"
 msgstr "January"
 
-#: u_dzDateUtils.pas:116
+#: u_dzDateUtils.pas:129
 msgid "February"
 msgstr "February"
 
-#: u_dzDateUtils.pas:117
+#: u_dzDateUtils.pas:130
 msgid "March"
 msgstr "March"
 
-#: u_dzDateUtils.pas:118
+#: u_dzDateUtils.pas:131
 msgid "April"
 msgstr "April"
 
-#: u_dzDateUtils.pas:119
+#: u_dzDateUtils.pas:132
 msgid "May"
 msgstr "May"
 
-#: u_dzDateUtils.pas:120
+#: u_dzDateUtils.pas:133
 msgid "June"
 msgstr "June"
 
-#: u_dzDateUtils.pas:121
+#: u_dzDateUtils.pas:134
 msgid "July"
 msgstr "July"
 
-#: u_dzDateUtils.pas:122
+#: u_dzDateUtils.pas:135
 msgid "August"
 msgstr "August"
 
-#: u_dzDateUtils.pas:123
+#: u_dzDateUtils.pas:136
 msgid "September"
 msgstr "September"
 
-#: u_dzDateUtils.pas:124
+#: u_dzDateUtils.pas:137
 msgid "October"
 msgstr "October"
 
-#: u_dzDateUtils.pas:125
+#: u_dzDateUtils.pas:138
 msgid "November"
 msgstr "November"
 
-#: u_dzDateUtils.pas:126
+#: u_dzDateUtils.pas:139
 msgid "December"
 msgstr "December"
 
 #. should never happen ...
-#: u_dzDateUtils.pas:129
+#: u_dzDateUtils.pas:142
 #, object-pascal-format
 msgid "Invalid month number %d"
 msgstr "Invalid month number %d"
@@ -312,63 +342,63 @@
 msgstr "Invalid file flags"
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:945
+#: u_dzFileUtils.pas:991
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath"
 msgstr "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath"
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:953
+#: u_dzFileUtils.pas:999
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath (2nd)"
 msgstr "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath (2nd)"
 
-#: u_dzFileUtils.pas:1005
+#: u_dzFileUtils.pas:1051
 msgid "<no volume name>"
 msgstr "<no volume name>"
 
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1024 u_dzFileUtils.pas:1629
+#: u_dzFileUtils.pas:1070 u_dzFileUtils.pas:1730
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) creating directory \"%s\""
 msgstr "Error %%1:s (%%0:d) creating directory \"%s\""
 
-#: u_dzFileUtils.pas:1048
+#: u_dzFileUtils.pas:1094
 #, object-pascal-format
 msgid "Could not find a unique directory name based on \"%s\""
 msgstr "Could not find a unique directory name based on \"%s\""
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:1087
+#: u_dzFileUtils.pas:1133
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempFilename: %1:s (Code: %0:d) calling Windows.GetTempFileName"
 msgstr "TFileSystem.GetTempFilename: %1:s (Code: %0:d) calling Windows.GetTempFileName"
 
-#: u_dzFileUtils.pas:1142 u_dzFileUtils.pas:1148
+#: u_dzFileUtils.pas:1188 u_dzFileUtils.pas:1194
 #, object-pascal-format
 msgid "File not found: \"%s\""
 msgstr "File not found: \"%s\""
 
-#: u_dzFileUtils.pas:1193
+#: u_dzFileUtils.pas:1257
 #, no-object-pascal-format
 msgid "TFileSystem.GetShortPathname: %1:s (Code: %0:d) calling Windows.GetShortPathname"
 msgstr "TFileSystem.GetShortPathname: %1:s (Code: %0:d) calling Windows.GetShortPathname"
 
-#: u_dzFileUtils.pas:1195
+#: u_dzFileUtils.pas:1259
 #, object-pascal-format
 msgid "Short pathname is longer than MAX_PATH (%d) characters"
 msgstr "Short pathname is longer than MAX_PATH (%d) characters"
 
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1207 u_dzFileUtils.pas:1233
+#: u_dzFileUtils.pas:1271 u_dzFileUtils.pas:1297
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while trying to move \"%s\" to \"%s\"."
 msgstr "Error %%1:s (%%0:d) while trying to move \"%s\" to \"%s\"."
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1251
+#: u_dzFileUtils.pas:1315
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while changing the readonly flag of \"%s\""
 msgstr "Error %%1:s (%%0:d) while changing the readonly flag of \"%s\""
@@ -376,96 +406,96 @@
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1271 u_dzFileUtils.pas:1397 u_dzFileUtils.pas:1470
+#: u_dzFileUtils.pas:1335 u_dzFileUtils.pas:1471 u_dzFileUtils.pas:1544
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while trying to copy \"%s\" to \"%s\"."
 msgstr "Error %%1:s (%%0:d) while trying to copy \"%s\" to \"%s\"."
 
-#: u_dzFileUtils.pas:1385
+#: u_dzFileUtils.pas:1459
 #, object-pascal-format
 msgid "Error %s (%s) in progress callback while trying to copy \"%s\" to \"%s\"."
 msgstr "Error %s (%s) in progress callback while trying to copy \"%s\" to \"%s\"."
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1500
+#: u_dzFileUtils.pas:1574
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) deleting file \"%s\""
 msgstr "Error %%1:s (%%0:d) deleting file \"%s\""
 
-#: u_dzFileUtils.pas:1570
+#: u_dzFileUtils.pas:1644
 #, object-pascal-format
 msgid "File not found: %s"
 msgstr "File not found: %s"
 
-#: u_dzFileUtils.pas:1584
+#: u_dzFileUtils.pas:1658
 #, object-pascal-format
 msgid "Directory not found: %s"
 msgstr "Directory not found: %s"
 
 #. ForceDirectories can raise EInOutError if the directory path contains empty parts
-#: u_dzFileUtils.pas:1621
+#: u_dzFileUtils.pas:1722
 #, object-pascal-format
 msgid "Error creating directory \"%s\": %s (%s)"
 msgstr "Error creating directory \"%s\": %s (%s)"
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1648
+#: u_dzFileUtils.pas:1749
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) deleting directory \"%s\""
 msgstr "Error %%1:s (%%0:d) deleting directory \"%s\""
 
-#: u_dzFileUtils.pas:1666
+#: u_dzFileUtils.pas:1767
 #, object-pascal-format
 msgid "\"%s\" does not exist or is not a directory"
 msgstr "\"%s\" does not exist or is not a directory"
 
-#: u_dzFileUtils.pas:1940
+#: u_dzFileUtils.pas:2041
 msgid "Combination of ResultContainsNumber and KeepOriginal is not allowed"
 msgstr "Combination of ResultContainsNumber and KeepOriginal is not allowed"
 
-#: u_dzGoogleTranslate.pas:238
+#: u_dzGoogleTranslate.pas:246
 #, object-pascal-format
 msgid "Parsing error on JSON answer: Root object size is %d not 3."
 msgstr "Parsing error on JSON answer: Root object size is %d not 3."
 
-#: u_dzGoogleTranslate.pas:243
+#: u_dzGoogleTranslate.pas:251
 #, object-pascal-format
 msgid "Parsing error on JSON answer: First pair name is \"%s\" not \"responseData\"."
 msgstr "Parsing error on JSON answer: First pair name is \"%s\" not \"responseData\"."
 
-#: u_dzGoogleTranslate.pas:250
+#: u_dzGoogleTranslate.pas:258
 #, object-pascal-format
 msgid "Parsing error on JSON answer: responseData object size is %d not 1."
 msgstr "Parsing error on JSON answer: responseData object size is %d not 1."
 
-#: u_dzGoogleTranslate.pas:254
+#: u_dzGoogleTranslate.pas:262
 #, object-pascal-format
 msgid "Parsing error on JSON answer: First responseData pair is \"%s\" not \"translatedText\"."
 msgstr "Parsing error on JSON answer: First responseData pair is \"%s\" not \"translatedText\"."
 
-#: u_dzGoogleTranslate.pas:257
+#: u_dzGoogleTranslate.pas:265
 msgid "Parsing error on JSON answer: translatedText data is not a string."
 msgstr "Parsing error on JSON answer: translatedText data is not a string."
 
-#: u_dzGoogleTranslate.pas:260
+#: u_dzGoogleTranslate.pas:268
 msgid "Parsing error on JSON answer: responseData is neither NULL nor an object."
 msgstr "Parsing error on JSON answer: responseData is neither NULL nor an object."
 
-#: u_dzGoogleTranslate.pas:264
+#: u_dzGoogleTranslate.pas:272
 #, object-pascal-format
 msgid "Parsing error on JSON answer: Second pair name is \"%s\" not \"responseDetails\"."
 msgstr "Parsing error on JSON answer: Second pair name is \"%s\" not \"responseDetails\"."
 
-#: u_dzGoogleTranslate.pas:271
+#: u_dzGoogleTranslate.pas:279
 msgid "Parsing error on JSON answer: responseDetails is neither NULL nor a string."
 msgstr "Parsing error on JSON answer: responseDetails is neither NULL nor a string."
 
-#: u_dzGoogleTranslate.pas:275
+#: u_dzGoogleTranslate.pas:283
 #, object-pascal-format
 msgid "Parsing error on JSON answer: Thrid pair name is \"%s\" not \"responseStatus\"."
 msgstr "Parsing error on JSON answer: Thrid pair name is \"%s\" not \"responseStatus\"."
 
-#: u_dzGoogleTranslate.pas:278
+#: u_dzGoogleTranslate.pas:286
 msgid "Parsing error on JSON answer: responseStatus is not a number."
 msgstr "Parsing error on JSON answer: responseStatus is not a number."
 
@@ -489,7 +519,7 @@
 msgid "Error \"%1:s (%0:d)\" while trying to acquire mutex."
 msgstr "Error \"%1:s (%0:d)\" while trying to acquire mutex."
 
-#: u_dzNameValueList.pas:98 u_dzUnsortedNameValueList.pas:88
+#: u_dzNameValueList.pas:99 u_dzUnsortedNameValueList.pas:88
 #: u_dzNameValueList.pas:96
 #, object-pascal-format
 msgid "Entry \"%s\" not found."
@@ -629,34 +659,34 @@
 msgid "Variant can not be converted to %s"
 msgstr "Variant can not be converted to %s"
 
-#: u_dzVclUtils.pas:660
+#: u_dzVclUtils.pas:712
 #, object-pascal-format
 msgid "Glyph string contained invalid character at position %d."
 msgstr "Glyph string contained invalid character at position %d."
 
-#: u_dzVclUtils.pas:940 u_dzVclUtils.pas:987
+#: u_dzVclUtils.pas:998 u_dzVclUtils.pas:1045
 #, object-pascal-format
 msgid "\"%s\" is not a valid floating point value."
 msgstr "\"%s\" is not a valid floating point value."
 
-#: u_dzVclUtils.pas:955 u_dzVclUtils.pas:1019 u_dzVclUtils.pas:1032
+#: u_dzVclUtils.pas:1013 u_dzVclUtils.pas:1185 u_dzVclUtils.pas:1198
 #, object-pascal-format
 msgid "\"%s\" is not a valid integer value."
 msgstr "\"%s\" is not a valid integer value."
 
-#: u_dzVclUtils.pas:1430
+#: u_dzVclUtils.pas:1618
 msgid "No item selected in combobox"
 msgstr "No item selected in combobox"
 
-#: u_dzVclUtils.pas:1449
+#: u_dzVclUtils.pas:1637
 msgid "No item selected in listbox"
 msgstr "No item selected in listbox"
 
-#: u_dzVclUtils.pas:2013
+#: u_dzVclUtils.pas:2227
 msgid "JPEG Files"
 msgstr "JPEG Files"
 
-#: u_dzVclUtils.pas:2465
+#: u_dzVclUtils.pas:2729
 msgid "Ctrl+Return to 'click' right button."
 msgstr "Ctrl+Return to 'click' right button."
 
@@ -730,11 +760,11 @@
 msgid "Invalid modal result %d."
 msgstr "Invalid modal result %d."
 
-#: w_dzDialog.pas:522
+#: w_dzDialog.pas:526
 msgid "Do not show again."
 msgstr "Do not show again."
 
-#: w_dzDialog.pas:604
+#: w_dzDialog.pas:608
 #, object-pascal-format
 msgid ""
 "An error occurred:\n"
@@ -744,42 +774,42 @@
 "%s"
 
 #. 400;
-#: w_dzDialog.pas:628
+#: w_dzDialog.pas:632
 msgid "Additional information:"
 msgstr "Additional information:"
 
-#: w_dzDialog.pas:648 w_dzDialog.pas:758 w_dzDialog.pas:805
+#: w_dzDialog.pas:652 w_dzDialog.pas:762 w_dzDialog.pas:809
 msgid "&Details >>"
 msgstr "&Details >>"
 
-#: w_dzDialog.pas:808
+#: w_dzDialog.pas:812
 msgid "&Details <<"
 msgstr "&Details <<"
 
-#: w_dzProgress.pas:95
+#: w_dzProgress.pas:96
 #, object-pascal-format
 msgid "Progress (%d%%)"
 msgstr "Progress (%d%%)"
 
-#: w_dzProgress.pas:106
+#: w_dzProgress.pas:105
 msgid "Do you really want to abort?"
 msgstr "Do you really want to abort?"
 
-#: w_dzProgress.pas:171
+#: w_dzProgress.pas:170
 #, no-object-pascal-format
 msgid "must not contain a % at the end"
 msgstr "must not contain a % at the end"
 
-#: w_dzProgress.pas:180
+#: w_dzProgress.pas:179
 #, no-object-pascal-format
 msgid "\"%\" must be followed by \"d\" or \"%\"."
 msgstr "\"%\" must be followed by \"d\" or \"%\"."
 
-#: w_dzProgress.pas:186
+#: w_dzProgress.pas:185
 msgid "too many parameters"
 msgstr "too many parameters"
 
-#: w_dzProgress.pas:198
+#: w_dzProgress.pas:197
 #, object-pascal-format
 msgid "Invalid FormCaption, %s"
 msgstr "Invalid FormCaption, %s"

Modified: utilities/dzLib/trunk/translations/fr/dzlib.po
===================================================================
--- utilities/dzLib/trunk/translations/fr/dzlib.po	2011-08-27 11:19:26 UTC (rev 600)
+++ utilities/dzLib/trunk/translations/fr/dzlib.po	2011-08-27 11:19:42 UTC (rev 601)
@@ -6,7 +6,7 @@
 msgid ""
 msgstr ""
 "Project-Id-Version: dzLib\n"
-"POT-Creation-Date: 2011-03-23 08:54\n"
+"POT-Creation-Date: 2011-07-27 11:20\n"
 "PO-Revision-Date: 2010-10-10 20:17+0100\n"
 "Last-Translator: RH\n"
 "Language-Team: Thomas Mueller <dzlib at dummzeuch.de>\n"
@@ -17,117 +17,117 @@
 "X-Poedit-Language: French\n"
 "X-Poedit-Country: FRANCE\n"
 
-#: u_dzClassUtils.pas:445
+#: u_dzClassUtils.pas:464
 msgid "no matching object found"
 msgstr "aucun objet correspondant trouv?"
 
-#: u_dzClassUtils.pas:483
+#: u_dzClassUtils.pas:502
 #, object-pascal-format
 msgid "Invalid empty string value in ini file for [%s]%s"
 msgstr "Cha?ne valeur non valide dans le fichier ini pour [%s]%s"
 
-#: u_dzClassUtils.pas:526
+#: u_dzClassUtils.pas:545
 #, fuzzy, object-pascal-format
 msgid "Invalid floating point value \"%s\" in ini file for [%s]%s"
 msgstr "valeur du point flottante non valide %s dans le fichier ini pour [%s]%s"
 
-#: u_dzClassUtils.pas:548
+#: u_dzClassUtils.pas:567
 #, fuzzy, object-pascal-format
 msgid "Invalid date value \"%s\" in ini file for [%s]%s"
 msgstr "valeur enti?re non valide \"%s\" dans le fichier ini pour [%s]%s"
 
-#: u_dzClassUtils.pas:562
+#: u_dzClassUtils.pas:581
 #, object-pascal-format
 msgid "Invalid integer value \"%s\" in ini file for [%s]%s"
 msgstr "valeur enti?re non valide \"%s\" dans le fichier ini pour [%s]%s"
 
-#: u_dzConvertUtils.pas:397
+#: u_dzConvertUtils.pas:402
 #, object-pascal-format
 msgid "Digit out of range %s"
 msgstr "Chiffre hors d'echelle %s"
 
-#: u_dzConvertUtils.pas:410
+#: u_dzConvertUtils.pas:415
 #, object-pascal-format
 msgid "Digit #%d (%s) out of range"
 msgstr "Chiffre #%d (%s) hors d'echelle"
 
-#: u_dzConvertUtils.pas:618
+#: u_dzConvertUtils.pas:623
 #, object-pascal-format
 msgid "\"%s\" is not a valid integer value: %s"
 msgstr "\"%s\" n'est pas une valeur d?cimale correcte: %s"
 
-#: u_dzConvertUtils.pas:636
+#: u_dzConvertUtils.pas:652
 #, object-pascal-format
 msgid "\"%s\" is not a valid Int64 value: %s"
 msgstr "\"%s\" n'est pas une valeur Int64 correcte: %s"
 
-#: u_dzConvertUtils.pas:702
+#: u_dzConvertUtils.pas:718
 #, object-pascal-format
 msgid "\"%s\" is not a valid floating point value: %s"
 msgstr "\"%s\" n'est pas une nombre d?cimal valable: %s"
 
-#: u_dzConvertUtils.pas:708
+#: u_dzConvertUtils.pas:724
 #, no-object-pascal-format
 msgid "%.2f EiB"
 msgstr "%.2f Eio"
 
-#: u_dzConvertUtils.pas:710
+#: u_dzConvertUtils.pas:726
 #, no-object-pascal-format
 msgid "%.2f PiB"
 msgstr "%.2f Pio"
 
 # Terrabyte ?
-#: u_dzConvertUtils.pas:712
+#: u_dzConvertUtils.pas:728
 #, no-object-pascal-format
 msgid "%.2f TiB"
 msgstr "%.2f Tio"
 
-#: u_dzConvertUtils.pas:714
+#: u_dzConvertUtils.pas:730
 #, no-object-pascal-format
 msgid "%.2f GiB"
 msgstr "%.2f Gio"
 
-#: u_dzConvertUtils.pas:716
+#: u_dzConvertUtils.pas:732
 #, no-object-pascal-format
 msgid "%.2f MiB"
 msgstr "%.2f Mio"
 
-#: u_dzConvertUtils.pas:718
+#: u_dzConvertUtils.pas:734
 #, no-object-pascal-format
 msgid "%.2f KiB"
 msgstr "%.2f Kio"
 
-#: u_dzConvertUtils.pas:720
+#: u_dzConvertUtils.pas:736
 #, object-pascal-format
 msgid "%d Bytes"
 msgstr "%d Octets"
 
 #. Days and hours, ignore minutes and seconds
-#: u_dzConvertUtils.pas:727
+#: u_dzConvertUtils.pas:743
 #, object-pascal-format
 msgid "%dd %dh"
 msgstr "%dd %dh"
 
 #. Hours and minutes, ignore seconds
-#: u_dzConvertUtils.pas:730
+#: u_dzConvertUtils.pas:746
 #, object-pascal-format
 msgid "%dh %dm"
 msgstr "%dh %dm"
 
 #. Minutes and seconds
-#: u_dzConvertUtils.pas:733
+#: u_dzConvertUtils.pas:749
 #, object-pascal-format
 msgid "%dm %ds"
 msgstr "%dm %ds"
 
 # Label: ignore
 #. Seconds only
-#: u_dzConvertUtils.pas:736
+#: u_dzConvertUtils.pas:752
 #, object-pascal-format
 msgid "%ds"
 msgstr "%ds"
 
-#: u_dzConvertUtils.pas:776
+#: u_dzConvertUtils.pas:792
 #, object-pascal-format
 msgid "Length of byte array (%d) does not match size of a LongWord (%d)"
 msgstr "Longueur du tableau d'octets (%d) ne correspond pas ? la taille d'un LongWord %d"
@@ -139,96 +139,126 @@
 msgid "DLL entry point not initialized"
 msgstr "DLL entr?e non initialis?e"
 
+#: u_dzDatasetHelpers.pas:238
+#, fuzzy, object-pascal-format
+msgid "Field \"%s\" not found in table \"%s\"."
+msgstr "Fichier non trouv?: \"%s\""
+
+#: u_dzDatasetHelpers.pas:479
+#, object-pascal-format
+msgid "SetParamByName is not supported for a %s."
+msgstr "SetParamByName n'est pas support? pour %s."
+
+#: u_dzDatasetHelpers.pas:484
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s."
+msgstr "TrySetParamByName n'est pas support? pour %s."
+
 #. Do not use ParamByName -> only works if param is unique
-#: u_dzDatasetHelpers.pas:534 u_dzDatasetHelpers.pas:553
+#: u_dzDatasetHelpersADO.pas:69
 #, object-pascal-format
-msgid "SetParamByName is not supported for a %s (only TQuery and TAdoDataset descendants)."
-msgstr "SetParamByName n'est pas support? pour %s (seulement TQuery et TAdoDataset descendants)."
+msgid "SetParamByName is not supported for a %s (only TADODataSet descendants)."
+msgstr "SetParamByName n'est pas support? pour %s (seulement TAdoDataset descendants)."
 
-#: u_dzDateUtils.pas:99
+#: u_dzDatasetHelpersADO.pas:82
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s (only TADODataSet descendants)."
+msgstr "TrySetParamByName n'est pas support? pour %s (seulement TAdoDataset descendants)."
+
+#: u_dzDatasetHelpersBDE.pas:43
+#, object-pascal-format
+msgid "SetParamByName is not supported for a %s (only TQuery descendants)."
+msgstr "SetParamByName n'est pas support? pour %s (seulement TQuery descendants)."
+
+#: u_dzDatasetHelpersBDE.pas:56
+#, object-pascal-format
+msgid "TrySetParamByName is not supported for a %s (only TQuery descendants)."
+msgstr "TrySetParamByName n'est pas support? pour %s (seulement TQuery descendants)."
+
+#: u_dzDateUtils.pas:112
 msgid "Monday"
 msgstr "Lundi"
 
-#: u_dzDateUtils.pas:100
+#: u_dzDateUtils.pas:113
 msgid "Tuesday"
 msgstr "Mardi"
 
-#: u_dzDateUtils.pas:101
+#: u_dzDateUtils.pas:114
 msgid "Wednesday"
 msgstr "Mercredi"
 
-#: u_dzDateUtils.pas:102
+#: u_dzDateUtils.pas:115
 msgid "Thursday"
 msgstr "Jeudi"
 
-#: u_dzDateUtils.pas:103
+#: u_dzDateUtils.pas:116
 msgid "Friday"
 msgstr "Vendredi"
 
-#: u_dzDateUtils.pas:104
+#: u_dzDateUtils.pas:117
 msgid "Saturday"
 msgstr "Samedi"
 
-#: u_dzDateUtils.pas:105
+#: u_dzDateUtils.pas:118
 msgid "Sunday"
 msgstr "Dimanche"
 
 #. should never happen ...
-#: u_dzDateUtils.pas:108
+#: u_dzDateUtils.pas:121
 #, object-pascal-format
 msgid "Invalid value for DayOfWeek: %d"
 msgstr "Valeur non valide pour DayOfWeek: %d"
 
-#: u_dzDateUtils.pas:115
+#: u_dzDateUtils.pas:128
 msgid "January"
 msgstr "Janvier"
 
-#: u_dzDateUtils.pas:116
+#: u_dzDateUtils.pas:129
 msgid "February"
 msgstr "F?vrier"
 
-#: u_dzDateUtils.pas:117
+#: u_dzDateUtils.pas:130
 msgid "March"
 msgstr "Mars"
 
-#: u_dzDateUtils.pas:118
+#: u_dzDateUtils.pas:131
 msgid "April"
 msgstr "Avril"
 
-#: u_dzDateUtils.pas:119
+#: u_dzDateUtils.pas:132
 msgid "May"
 msgstr "Mai"
 
-#: u_dzDateUtils.pas:120
+#: u_dzDateUtils.pas:133
 msgid "June"
 msgstr "Juin"
 
-#: u_dzDateUtils.pas:121
+#: u_dzDateUtils.pas:134
 msgid "July"
 msgstr "Juillet"
 
-#: u_dzDateUtils.pas:122
+#: u_dzDateUtils.pas:135
 msgid "August"
 msgstr "Ao?t"
 
-#: u_dzDateUtils.pas:123
+#: u_dzDateUtils.pas:136
 msgid "September"
 msgstr "Septembre"
 
-#: u_dzDateUtils.pas:124
+#: u_dzDateUtils.pas:137
 msgid "October"
 msgstr "Octobre"
 
-#: u_dzDateUtils.pas:125
+#: u_dzDateUtils.pas:138
 msgid "November"
 msgstr "Novembre"
 
-#: u_dzDateUtils.pas:126
+#: u_dzDateUtils.pas:139
 msgid "December"
 msgstr "D?cembre"
 
 #. should never happen ...
-#: u_dzDateUtils.pas:129
+#: u_dzDateUtils.pas:142
 #, object-pascal-format
 msgid "Invalid month number %d"
 msgstr "Num?ro du mois non valide %d"
@@ -314,63 +344,63 @@
 msgstr "Flags fichiers non valide"
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:945
+#: u_dzFileUtils.pas:991
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath"
 msgstr "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath"
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:953
+#: u_dzFileUtils.pas:999
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath (2nd)"
 msgstr "TFileSystem.GetTempPath: %1:s (code: %0:d) calling Windows.GetTempPath (2nd)"
 
-#: u_dzFileUtils.pas:1005
+#: u_dzFileUtils.pas:1051
 msgid "<no volume name>"
 msgstr ""
 
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1024 u_dzFileUtils.pas:1629
+#: u_dzFileUtils.pas:1070 u_dzFileUtils.pas:1730
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) creating directory \"%s\""
 msgstr "Erreur %%1:s (%%0:d) lors de la cr?ation du r?pertoire \"%s\""
 
-#: u_dzFileUtils.pas:1048
+#: u_dzFileUtils.pas:1094
 #, object-pascal-format
 msgid "Could not find a unique directory name based on \"%s\""
 msgstr "Impossible de trouver un nom de r?pertoire unique sur la base de \"%s\""
 
 #. GetLastError must be called before _(), otherwise the error code gets lost
-#: u_dzFileUtils.pas:1087
+#: u_dzFileUtils.pas:1133
 #, no-object-pascal-format
 msgid "TFileSystem.GetTempFilename: %1:s (Code: %0:d) calling Windows.GetTempFileName"
 msgstr "TFileSystem.GetTempFilename: %1:s (Code: %0:d) calling Windows.GetTempFileName"
 
-#: u_dzFileUtils.pas:1142 u_dzFileUtils.pas:1148
+#: u_dzFileUtils.pas:1188 u_dzFileUtils.pas:1194
 #, object-pascal-format
 msgid "File not found: \"%s\""
 msgstr "Fichier non trouv?: \"%s\""
 
-#: u_dzFileUtils.pas:1193
+#: u_dzFileUtils.pas:1257
 #, no-object-pascal-format
 msgid "TFileSystem.GetShortPathname: %1:s (Code: %0:d) calling Windows.GetShortPathname"
 msgstr "TFileSystem.GetShortPathname: %1:s (Code: %0:d) calling Windows.GetShortPathname"
 
-#: u_dzFileUtils.pas:1195
+#: u_dzFileUtils.pas:1259
 #, object-pascal-format
 msgid "Short pathname is longer than MAX_PATH (%d) characters"
 msgstr "La longueur du chemin de fichier d?passe MAX_PATH (%d) caract?res"
 
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1207 u_dzFileUtils.pas:1233
+#: u_dzFileUtils.pas:1271 u_dzFileUtils.pas:1297
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while trying to move \"%s\" to \"%s\"."
 msgstr "Erreur %%1:s (%%0:d) lors du d?placement de \"%s\" vers \"%s\"."
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1251
+#: u_dzFileUtils.pas:1315
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while changing the readonly flag of \"%s\""
 msgstr "Erreur %%1:s (%%0:d) lors du changement de l'indicateur lecture seule de \"%s\""
@@ -378,109 +408,109 @@
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1271 u_dzFileUtils.pas:1397 u_dzFileUtils.pas:1470
+#: u_dzFileUtils.pas:1335 u_dzFileUtils.pas:1471 u_dzFileUtils.pas:1544
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) while trying to copy \"%s\" to \"%s\"."
 msgstr "Erreur %%1:s (%%0:d) lors de la copie de \"%s\" vers \"%s\"."
 
-#: u_dzFileUtils.pas:1385
+#: u_dzFileUtils.pas:1459
 #, object-pascal-format
 msgid "Error %s (%s) in progress callback while trying to copy \"%s\" to \"%s\"."
 msgstr "Erreur %s?(%s)  dans processus callback en essayant de copier \"%s\" vers \"%s\"."
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1500
+#: u_dzFileUtils.pas:1574
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) deleting file \"%s\""
 msgstr "Erreur %%1:s (%%0:d) lors de l'effacement du fichier \"%s\""
 
-#: u_dzFileUtils.pas:1570
+#: u_dzFileUtils.pas:1644
 #, object-pascal-format
 msgid "File not found: %s"
 msgstr "Fichier non trouv?: %s"
 
-#: u_dzFileUtils.pas:1584
+#: u_dzFileUtils.pas:1658
 #, object-pascal-format
 msgid "Directory not found: %s"
 msgstr "R?pertoire non trouv?: %s"
 
 #. ForceDirectories can raise EInOutError if the directory path contains empty parts
-#: u_dzFileUtils.pas:1621
+#: u_dzFileUtils.pas:1722
 #, object-pascal-format
 msgid "Error creating directory \"%s\": %s (%s)"
 msgstr "Erreur lors de la creation du r?pertoire \"%s\": %s (%s)"
 
 #. duplicate % so they get passed through the format function
-#: u_dzFileUtils.pas:1648
+#: u_dzFileUtils.pas:1749
 #, object-pascal-format
 msgid "Error %%1:s (%%0:d) deleting directory \"%s\""
 msgstr "Erreur %%1:s (%%0:d) lors de l'effacement du r?pertoire \"%s\""
 
-#: u_dzFileUtils.pas:1666
+#: u_dzFileUtils.pas:1767
 #, object-pascal-format
 msgid "\"%s\" does not exist or is not a directory"
 msgstr "\"%s\" n'existe pas ou n'est pas un r?p?rtoire"
 
-#: u_dzFileUtils.pas:1940
+#: u_dzFileUtils.pas:2041
 msgid "Combination of ResultContainsNumber and KeepOriginal is not allowed"
 msgstr "Combinaison de ResultContainsNumber et KeepOriginal n'est pas possible"
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:238
+#: u_dzGoogleTranslate.pas:246
 #, fuzzy, object-pascal-format
 msgid "Parsing error on JSON answer: Root object size is %d not 3."
 msgstr "Erreur d'analyse sur la r?ponse JSON: taille de l'objet racine est %d non pas 3."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:243
+#: u_dzGoogleTranslate.pas:251
 #, fuzzy, object-pascal-format
 msgid "Parsing error on JSON answer: First pair name is \"%s\" not \"responseData\"."
 msgstr "Erreur d'analyse sur la r?ponse JSON: nom de la premi?re paire est ? %s ?et non? responseData \"."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:250
+#: u_dzGoogleTranslate.pas:258
 #, fuzzy, object-pascal-format
 msgid "Parsing error on JSON answer: responseData object size is %d not 1."
 msgstr "Erreur d'analyse sur la r?ponse JSON: taille de l'objet est responseData %d n'est pas 1."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:254
+#: u_dzGoogleTranslate.pas:262
 #, fuzzy, object-pascal-format
 msgid "Parsing error on JSON answer: First responseData pair is \"%s\" not \"translatedText\"."
 msgstr "Erreur d'analyse sur la r?ponse JSON: paire responseData premier est \" %s \"et non\" translatedText \"."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:257
+#: u_dzGoogleTranslate.pas:265
 #, fuzzy
 msgid "Parsing error on JSON answer: translatedText data is not a string."
 msgstr "Erreur d'analyse sur la r?ponse JSON: donn?es translatedText n'est pas une cha?ne."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:260
+#: u_dzGoogleTranslate.pas:268
 #, fuzzy
 msgid "Parsing error on JSON answer: responseData is neither NULL nor an object."
 msgstr "Erreur d'analyse sur la r?ponse JSON: responseData n'est ni NULL, ni un objet."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:264
+#: u_dzGoogleTranslate.pas:272
 #, fuzzy, object-pascal-format
 msgid "Parsing error on JSON answer: Second pair name is \"%s\" not \"responseDetails\"."
 msgstr "Erreur d'analyse sur la r?ponse JSON: Deuxi?me paire nom est ? %s ?et non? responseDetails \"."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:271
+#: u_dzGoogleTranslate.pas:279
 #, fuzzy
 msgid "Parsing error on JSON answer: responseDetails is neither NULL nor a string."
 msgstr "Erreur d'analyse sur la r?ponse JSON: responseDetails n'est ni NULL ni une cha?ne."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:275
+#: u_dzGoogleTranslate.pas:283
 #, fuzzy, object-pascal-format
 msgid "Parsing error on JSON answer: Thrid pair name is \"%s\" not \"responseStatus\"."
 msgstr "Erreur d'analyse sur la r?ponse JSON: Troisi?me paire nom est ? %s ?et non? responseStatus \"."
 
 # Label: auto
-#: u_dzGoogleTranslate.pas:278
+#: u_dzGoogleTranslate.pas:286
 #, fuzzy
 msgid "Parsing error on JSON answer: responseStatus is not a number."
 msgstr "Erreur d'analyse sur la r?ponse JSON: responseStatus n'est pas un nombre."
@@ -505,7 +535,7 @@
 msgid "Error \"%1:s (%0:d)\" while trying to acquire mutex."
 msgstr "Error \"%1:s (%0:d)\"  lors d'aquisition de mutex."
 
-#: u_dzNameValueList.pas:98 u_dzUnsortedNameValueList.pas:88
+#: u_dzNameValueList.pas:99 u_dzUnsortedNameValueList.pas:88
 #: u_dzNameValueList.pas:96
 #, object-pascal-format
 msgid "Entry \"%s\" not found."
@@ -645,35 +675,35 @@
 msgid "Variant can not be converted to %s"
 msgstr "Un variant ne peut pas ?tre converti en %s"
 
-#: u_dzVclUtils.pas:660
+#: u_dzVclUtils.pas:712
 #, object-pascal-format
 msgid "Glyph string contained invalid character at position %d."
 msgstr "Glyph cha?ne contenue un caract?re non valide ? position %d."
 
-#: u_dzVclUtils.pas:940 u_dzVclUtils.pas:987
+#: u_dzVclUtils.pas:998 u_dzVclUtils.pas:1045
 #, object-pascal-format
 msgid "\"%s\" is not a valid floating point value."
 msgstr "\"%s\" n'est pas une valeur d?cimale correcte."
 
 # Integer = Dezimalzahl?
-#: u_dzVclUtils.pas:955 u_dzVclUtils.pas:1019 u_dzVclUtils.pas:1032
+#: u_dzVclUtils.pas:1013 u_dzVclUtils.pas:1185 u_dzVclUtils.pas:1198
 #, object-pascal-format
 msgid "\"%s\" is not a valid integer value."
 msgstr "\"%s\" n'est pas une valeur d?cimale correcte."
 
-#: u_dzVclUtils.pas:1430
+#: u_dzVclUtils.pas:1618
 msgid "No item selected in combobox"
 msgstr "Aucun ?l?ment s?lectionn? dans combobox"
 
-#: u_dzVclUtils.pas:1449
+#: u_dzVclUtils.pas:1637
 msgid "No item selected in listbox"
 msgstr "Aucun ?l?ment s?lectionn? dans listbox"
 
-#: u_dzVclUtils.pas:2013
+#: u_dzVclUtils.pas:2227
 msgid "JPEG Files"
 msgstr "Fichiers JPEG"
 
-#: u_dzVclUtils.pas:2465
+#: u_dzVclUtils.pas:2729
 msgid "Ctrl+Return to 'click' right button."
 msgstr ""
 
@@ -748,11 +778,11 @@
 msgid "Invalid modal result %d."
 msgstr "R?sultat modal non valide %d."
 
-#: w_dzDialog.pas:522
+#: w_dzDialog.pas:526
 msgid "Do not show again."
 msgstr "Ne pas afficher de nouveau."
 
-#: w_dzDialog.pas:604
+#: w_dzDialog.pas:608
 #, object-pascal-format
 msgid ""
 "An error occurred:\n"
@@ -762,42 +792,42 @@
 "%s"
 
 #. 400;
-#: w_dzDialog.pas:628
+#: w_dzDialog.pas:632
 msgid "Additional information:"
 msgstr "Informations compl?mentaires:"
 
-#: w_dzDialog.pas:648 w_dzDialog.pas:758 w_dzDialog.pas:805
+#: w_dzDialog.pas:652 w_dzDialog.pas:762 w_dzDialog.pas:809
 msgid "&Details >>"
 msgstr "&D?tails >>"
 
-#: w_dzDialog.pas:808
+#: w_dzDialog.pas:812
 msgid "&Details <<"
 msgstr "&D?tails <<"
 
-#: w_dzProgress.pas:95
+#: w_dzProgress.pas:96
 #, object-pascal-format
 msgid "Progress (%d%%)"
 msgstr "Avancement (%d%%)"
 
-#: w_dzProgress.pas:106
+#: w_dzProgress.pas:105
 msgid "Do you really want to abort?"
 msgstr "Voulez-vous vraiment faire abandonnerr?"
 
-#: w_dzProgress.pas:171
+#: w_dzProgress.pas:170
 #, no-object-pascal-format
 msgid "must not contain a % at the end"
 msgstr "ne doit pas contenir un % ? la fin"
 
-#: w_dzProgress.pas:180
+#: w_dzProgress.pas:179
 #, no-object-pascal-format
 msgid "\"%\" must be followed by \"d\" or \"%\"."
 msgstr "\"%\" doit ?tre suivi par \"d\" ou \"%\"."
 
-#: w_dzProgress.pas:186
+#: w_dzProgress.pas:185
 msgid "too many parameters"
 msgstr "trop de param?tres"
 
-#: w_dzProgress.pas:198
+#: w_dzProgress.pas:197
 #, object-pascal-format
 msgid "Invalid FormCaption, %s"
 msgstr "FormCaption non valide, %s"
@@ -874,5 +904,3 @@
 msgid "There is no script named %s in this db type"
 msgstr "Il n'ya pas de script %s dans ce type db"
 
-#~ msgid "Cannot change filename when file is open."
-#~ msgstr "Ne peut pas changer le nom de fichier quand le fichier est ouvert."



From twm at mail.berlios.de  Sat Aug 27 13:39:30 2011
From: twm at mail.berlios.de (twm at mail.berlios.de)
Date: Sat, 27 Aug 2011 13:39:30 +0200
Subject: [Dzchart-svncheckins] r602 - utilities/IniFileFormatter/trunk
Message-ID: <20110827113930.A0006481160@sheep.berlios.de>

Author: twm
Date: 2011-08-27 13:39:30 +0200 (Sat, 27 Aug 2011)
New Revision: 602

Modified:
   utilities/IniFileFormatter/trunk/
Log:
ignore my test .ini files


Property changes on: utilities/IniFileFormatter/trunk
___________________________________________________________________
Modified: svn:ignore
   - IniFileFormatter.exe
IniFileFormatter.dpr.lnk
default.po

   + IniFileFormatter.exe
IniFileFormatter.dpr.lnk
default.po
ArgVideo_KB4.INI
ArgVideo_KB4_sorted.INI
ArgVideo_KB5.INI
ArgVideo_KB5_sorted.INI
ArgVideo_KB6.INI
ArgVideo_KB6_sorted.INI
ArgVideo_template.INI
test1.ini




